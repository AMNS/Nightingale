DAB'S NIGHTINGALE DEVELOPMENT LOG for March 2013 and after

(Most of the files in my Ngale Carbon code base have last modification dates of April or
May 2012; a few files are 2 June 2012, and it looks like that's the last source code I
share with David G. This document describes all changes to my own code base since then,
the earliest of which are dated 4 March 2013. It also describes initial work on the
"new" Cocoa Ngale -- I think.)

* CoreMidiUtils.cp: make DebugPrintf output more readable.
* Debug output is overwhelmed by messages of the form
      pL=1461: rect.l=288,r=294 paper.l=-20860,r=-20248
	...for every note (Sync?) played. Those messages shouldn't be written by default!! 
	Affects MIDIPlay.cp: #define PLDEBUG as 0.
* Fix horrible and dangerously confusing kludge for turning notehead graphs off/on:
	add #define for NOTEHEAD_GRAPH_WIDTH; make doNoteheadGraphs a global. Affects
	defs.h, vars.h, DrawNRGR, InitNightingale, SpaceTime.
* Initialize.cp: display all CNFG field values & errors detected in them in log file;
	if config.whichMIDI is illegal, set it to a legal value (like all other fields).
* SpaceHighLevel.cp: improve debug print stmts.
* Added "Set tempo to visible/invisible" to QuickChange. Affects Set.h, SetCommand.cp,
	Nightingale.rsrc.
* Increased the minimum legal value of config.lineLW from 1 to 5.
* Added back into the declaration of the Configuration struct the _noteScanEpsXD_ field,
	which had somehow been deleted, resulting in misalignment of fields read in,
	nonsensical complaints about illegal CNFG values, ledger lines too long, etc.
	Affects applicationTypes.h .
* Debug output for playback is excessive; disable some. Affects MIDIPlay.cp: #define
	CMDEBUG as 0.
* Remove code to check expiration date. Affects InitNightingale

===================================================================================

* Have Xcode 3.2 running on my MacBook (OS 10.6.x); Xcode 2.5 on my G5 (OS 10.5.x).
	What version was used for recent release versions? David says Xcode 2.5!

With a 2008 copy of code I had lying around:

* On MacBook: choose 10.5 Release as Active SDK & Configuration. Active Architecture is set
to ppc, & it looks like there's no way to change it. ??  Anyway, Clean (w/ both options
checked), Build => tries to compile 175 files; fails with:
	10,327 warnings
		99% for deprecated stuff, plus a few malformed '#pragma options', etc.
	149 fatal errors
		all are "Jump to case label", "Crosses initialization of" ...

Redo: Build (w/o clean) => tries to compile 15 files; fails with 1703 warnings, 149 errors.

/Developer/usr/bin/gcc-4.2 -x c++ -arch ppc -fmessage-length=0 -pipe -Wno-trigraphs -fpascal-strings
	-Os -mdynamic-no-pic -isysroot /Developer/SDKs/MacOSX10.5.sdk -mtune=G4 -fvisibility=hidden
	-fvisibility-inlines-hidden -mmacosx-version-min=10.5 -gdwarf-2
	-I/Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Nightingale.build/Release/Nightingale.build/Nightingale.hmap
	-F/Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Release -I/Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Release/include
	-I/Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Nightingale.build/Release/Nightingale.build/DerivedSources/ppc
	-I/Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Nightingale.build/Release/Nightingale.build/DerivedSources
	-c /Users/donbyrd/NgaleDev/NgaleXcodeApril2012/src/CFilesBothEd/EssentialTools.cp
	-o /Users/donbyrd/NgaleDev/ngale2xcodeSummer08/build/Nightingale.build/Release/Nightingale.build/Objects-normal/ppc/EssentialTools.o


* On G5: choose Release as Active Configuration, Build => fails with 8256 warnings,
1 error ("pbxcp: EndianUtils.h: No such file or directory")

To get started, I just want to get thru compilation quickly; maybe set compiler options
to be less picky? But _how_ do I set them? I don't see any such thing in Xcode! ??
Another idea: get a version of the code that's known to compile -- hey, maybe even the
latest from David or Charlie! -- and compiler settings for it. Obviously the way to go,
but see what I can do in the meantime w/ code I have.

-----------------------------------------------------------------------------

24 April

For the moment, try to handle the only compile error on G5. Start with a different 2008
copy of code, Ngale19Oct2008: it has changes to 34 files in both, plus 4 new files,
incl. EndianUtils.h. Most of its differing files are dated May 2008, a few (e.g.
CoreMidiUtils.cp) August 2008. Code changes include what looks like remembering the
MIDI device setting :-) and adding to QuickChange setting beam thickness & dynamic size.

Clean Nightingale (w/ options), build => nope; now it gets 2 errors in File.cp. ??

-----------------------------------------------------------------------------

25 April

David sez:

> I have lately been compiling ngale with xcode 2.5 on a Macbook Pro running Leopard.
> Ngale runs fine on Snow Leopard, which will only run on intel macs.

Obviously we need to compile with Xcode 3.x soon, so all 149 errors of those need to be
dealt with, but we can get off the ground first! Concern about the Architecture option is
premature; generating PPC code is fine for now.

Back to compiling on my G5.
Have 2 compilation errors in File.cp: lines 136 & 1127. Both involve calls to
fix_end(param); one or both error messages (I can't tell!) are " 'fix_end' was not
declared in this scope".  In EndianUtils.h (NB by Michel) are two #defines for
fix_end(v), and numerous other calls to fix_end in File.cp are OK. What's wrong with
these??

Uh-oh: it looks like it stopped _trying_ to compile w/ File.cp (unlike Xcode 3.2 on my
MacBook)! Yep: there's a Preference "Continue building after errors", and it's not
checked, so maybe a lot more errors to be found  @#%&(#)%$$#% .  Check that Preference,
Build (132 files to go)...

Let's redo the whole thing. Quit & relaunch Xcode; Clean (w/ both options checked); 
compiling 175 files => "Build failed (6 errors, 8278 warnings)"

The errors are all " 'fix_end' was not declared in this scope":
1 in File.cp
3 in HeapFileIO.cp
1 in StringPool.cp

??

The Xcode C compiler is gcc. I still don't see any way to set compiler options (to make
it less picky, etc.) in Xcode, either 2.5 or 3.2; maybe directly via settings of gcc's,
maybe in a dot file it looks at -- should say in the GCC manual, at least! But CER should
know.

-----------------------------------------------------------------------------

Install Git & GitHub on G5... Following the instructions at http://help.github.com/mac-set-up-git/ :

First: Download and Install Git.
Git Installer 1.6.5 - OS X - Leopard - Universal Binary appears to be the most recent version
that runs on a PPC. On my G5, download it (checksum de241004d35a9ef96e1339b78107d12b1c1fbd79).
Unpack & run it => claims to have worked OK.

(NB: At Michel S.' behest, I installed Git 1.5.x on one of my computers in Feb. 2008 --
probably the G5: on it, /opt/local/bin contains ca. 140 files of form "git*, all created
on 15 Feb. 2008 :) , while on the MacBook, there's not even a /opt directory. BUT most or
all of those files are binaries of utilities, and most or all are Intel, not PowerPC! ??
Cf. NgalePort_Feb2008.txt)

Next: Set Up SSH Keys.
1. Check for SSH keys. I have some, but only in file known_hosts; I don't have any id_rsa*
	files.
2. Backup and remove existing SSH keys. ??They only want you to do this for id_rsa* files,
	so it seems I don't have anything to do here.
3. Generate a new SSH key. ??I can't do it: 
	DonDualG5:.ssh donbyrd$ ssh-keygen -t rsa -C "donbyrd@indiana.edu"
	-bash: /opt/local/bin/ssh-keygen: Bad CPU type in executable

I suspect I could find ssh-keygen for PPC on the Web, but is that really what I should do?

etc. etc...  I give up.

Install Git & GitHub on MacBook: all OK!

-----------------------------------------------------------------------------

- (NDAB, "") Respacing bug: in some situations, Respace leaves way too much space after
a dotted note/chord. E.g., w/ long note on downbeat on one voice on a staff, adding
note/rest to a 2nd voice on a staff, maybe as if the new note/rest follows the long note
(I think). E.g., open respaceBug_5LTC.ngl; in m. 2, insert note in voice 2 on bottom
staff => adds lots of space before it. ?? I can't reproduce this starting w/ New score.
But compare FanfareRESPACE_BUG.ngl (dotted chords get way too much space) to the very
similar FanfareRESPACE_NOBUG.ngl (dotted chords get a reasonable amount of space)! Could
it somehow just be caused by the magnified view? No.

(18 June)

Cf. FanfareRespaceBug.ngl (has the bug) to the apparently-identical FRBNew_NoBug.ngl (no bug)!
It looks like it's an issue for _old files_ only. ?!?

(26 March 2013)

SpaceHighLevel.c looks like where this is happening. If I #define SPACEBUG, then hold down
shift & option while respacing, routines there (ConsidIPWidths, ConsiderWidths, Respace1Bar,
etc.) will show copious debug info!

(1 April 2013)

The difference between the newly-simplified FanfareRESPACE_BUG.ngl and FanfareRESPACE_NOBUG.ngl
is obvious: the former has Graphics (strings) and dynamics, and the latter doesn't -- BUT the
difference between the _really_ simple FanfareRespaceBug.ngl & FRBNew_NoBug.ngl isn't at all
obvious: neither has Graphics or dynamics. Each consists of the same 3 notes (dotted qtr,
dotted qtr, qtr; none have accidentals) barline. ?? @#$%#$%$()_%#%

Open FanfareRespaceBug; Respace m. 1 at 44%:
(see RespaceBug.txt for lotsa details)

(4 April 2013)

Sigh. The bug resulted from my kludge to test notehead graphs, invoked when Show Duration
Problems was selected! Oh well. Fixed, and notehead-graphs code cleaned up.

-----------------------------------------------------------------------------

- (New in "", BUT an early OS X version had a _very_ similar problem!) Launch built
Ngale on MacBook => computer seems to be hung for a very long time -- several minutes;
then all is fine! Launching Apple's Rosetta PowerPC simulator alone couldn't possibly
make things _that_ bad, but could it be partly due to launching Rosetta? Even that seems
unlikely, since I literally haven't seen it in years; for info about earlier problems of
this kind, see comment of Dec. 2007 in NgaleXUserProblems+Annoyances2008.txt, of July
2008 in Ngale_XcodeProblems.txt.

Test on my MacBook, 6 May: Launch at 9:18:00; menubar clock stopped (with arrow cursor)
at 9:18:17; at (actual) 9:21:40, beachball appeared, disappeared, reappeared several
times;  at 9:24:10, _started_ to get back to normal (menubar clock updated erratically,
could switch apps); at 9:27, dot appeared in dock next to Ngale icon & could see palette
frame); at 9:28, could open New score. On my G5: Ngale launches & is ready to use instantly.

Re-test on MacBook: Launch at 14:29:00; splash screen appears at ca. 14:32:50; dot in
dock at 14:33:40; at 14:35, ??  Well, it's not at all clear this is worthwhile,
debugging problems with a PPC build on an Intel machine, when we pretty much want to
forget the PPC anyway -- but PPC is the only choice for Active Architecture in Xcode 3.2
on my MacBook. ?!?

-----------------------------------------------------------------------------

9 May 2012

Set SDK to 10.5, Clean, build => OK, w/ 7152 warnings. Launch at 20:33:25 => computer
seems hung w/ menubar clock frozen; splash screen appears at 20:35:20, disappears again;
palette appears at 20:36:25; at 20:37:xx, can try to use the Open command -- but it takes
a couple of min. to open a tiny score. ?!?

-----------------------------------------------------------------------------

Date:  	Sat, 12 May 2012 23:20:38 -0400 [05/12/2012 11:20:38 PM EDT]
To:  	charles.e.rose@comcast.net...
Subject:  	Re: [launching Ngale freezes the computer]

I just tested this after rebooting, and Ngale launched in a reasonable amount of time. I
don't know why it's so bad under other circumstances, but it looks like this is probably
not a serious problem after all!... 

-----------------------------------------------------------------------------

15 May

Date:  	Tue, 15 May 2012 11:24:34 -0400 [11:24:34 AM EDT]
From:  	"Byrd, Donald A." <donbyrd@indiana.edu>
To:  	Geoff Chirgwin <geoff@chirgwin.com>
Cc:  	"Gottlieb, David" <ngale109@comcast.net>
Subject:  	Re: [Have] Xcode 4.x for Snow Leopard, but...

Downloaded and installed... However, when I open the project, it says "1 target, missing
base SDK" (of course it was pointing to the 10.4 SDK), then says it has no files. Well,
I assumed the project would be in the GitHub repository, so I threw away the project
file. Then -- in Terminal -- I went to my root directory, Nightingale, and did "git
pull"; that deleted 12 files, I think the ones you removed last week, but didn't give me
a project file. Next, I'd kept 3.2.6 around by moving it from Developer > Applications
to Developer > Xcode3p2p6, so it seems I ought to be able to use that to change the base
SDK, but 3.2.6 wouldn't run from that location and I'd rather not screw around any more.
Can you send me a 4.2-compatible project? Or, shouldn't it be in the repository? Put it
there and I'll git it.

-----------------------------------------------------------------------------

22 May

Set up Xcode ala RestorePPC+10p4+p5_SDKSupport2Xcode4.html, so 4.2 supports targeting OS 10.4
& 10.5, GCC 4.0, etc.:

+ Uninstall Xcode
+ Step 1: Install Xcode 3.2 in new top-level directory Xcode3
+ Step 2: Install Xcode 4.2 in default location
+ Step 3: Restoring 10.4/10.5 SDK Support
- Step 4: Restoring GCC 4.0 Support
	?? "cd: /Developer/usr/libexec/gcc/powerpc-apple-darwin10: No such file or directory". ??
- Step 5: Restoring PPC Support for GCC 4.2

-----------------------------------------------------------------------------

Early June

Nightingale_Prefix.pch currently #define's: TARGET_API_MAC_CARBON,
	TARGET_API_MAC_CARBON_FILEIO, TARGET_API_MAC_CARBON_MIDI, TARGET_API_MAC_CARBON_MACHO ?? .
	For the time being, assume they're always #define'd.
USE_GRAFPORT, USE_PROFILER, COPY_PROTECT, LIGHT_VERSION are currently _not_ #define'd; for
	now, assume they're never #define'd.

Code review status:
* Done with all thru the last of 30 May. (Assume "Merge branch 'RemoveMidiCruft'" is okay
w/o reviewing.)
* Done with 7 June
* Done with 10 June

-----------------------------------------------------------------------------

March-April 2013

NB: Unless otherwise mentioned, all development below was done with Xcode 2.5 on my G5,
running OS 10.5.8.

Running Ngale inside Xcode, I can again see (and copy/save) DebugPrintf output
via Xcode's Run Log! Hooray!

+ Change max. tempo from 600 to 1200 BPM. Affects defs.h

+ Print status of reading Prefs file, checking CNFG, etc. Affects Initialize.cp

+ Advance expiration date by a year. Affects InitNightingale.cp

+ Don't print info on every Sync as it's played. Affects MIDIPlay.cp

+ Display values of all CNFG fields in log; if any are bad, list all bad ones in error message.
Affects Initialize.cp

+ Fix "Respace sometimes leaves way too much space, especially after a dotted
note/chord" bug. Affects vars.h; DrawNRGR.c, InitNightingale.c, SpaceTime.c: add global
<doNoteheadGraphs> to say whether to display noteheads as tiny graphs; defs.h:
declaration of <NOTEHEAD_GRAPH_WIDTH>.

+ Minor cleanup. Affects SpaceHighLevel.c

-----------------------------------------------------------------------------

20 April - 13 Aug.

+ (G5B) Ledger lines (both above & below staff) are always the length for chords
w/ 2nds, i.e., they go much too far on the "wrong" side of the stem if there aren't
2nds. I don't think I'd seen this bug until the last month or two, i.e., it's not in
NightingaleDAB or the "official" versions, but only in versions built recently on my G5.
The CNFG ledgerLLen value is 48; could that be the cause? No: ledgerLOtherLen controls
this. Besides, 48 isn't just a legal value, it's the value Ngale sets to replace illegal
values -- e.g., the value of 20 in the default Nightingale Devel Prefs! 32 is the min.
legal value; it's in 32nds of space between staff lines, so 48 = 1+1/2 spaces is about
what it _should_ be. ??

!! ledgerLOtherLen = 48, the same as ledgerLLen: that's almost certainly the problem! --
in fact, 20 might be about right for this. What has it always been?? It looks about 1/2
space => ledgerLOtherLen = 16 -- or maybe 20 :-) . RESOLUTION: This is caused by the
default Devel Prefs (in ~/Library/Preferences/Nightingale\ Devel\ Prefs), which has
ledgerLLen = 20 and ledgerLOtherLen = 48; it should be the other way around. It also has
illegal values for whichMIDI (=4) and courtesyAccSize (=8). NEED TO FIX. Specifically
("In rsrc" = Nightingale.rsrc of e.g. 30 Apr. 2012):

ofst	Item		Now	In		Should
						rsrc	be
---------------------------------------------
??	ledgerLLen		20	48		48
??	ledgerLOtherLen	48	12		20
??	whichMIDI		4	??		0 -- MIDISYS_NONE; prob. want 1 ??IS THIS MIDISYS OR MIDIDR?
??	courtesyAccSize	8	??		>=20; prob. want 100	??Rezilla doesn't seem to list!

Ah-hah! Resorcerer shows a field at offset 173, just after octaveNumSize, as "Open
NoteScan File tolerance for combining subobjects"; it's followed by lineLW. But Ngale's
config struct has nothing about NoteScan tolerance -- it goes directly from octaveNumSize
to lineLW. Result: every field after that is off by one byte!!

-----------------------------------------------------------------------------

Early Aug.

??For CNFG #128, Rezilla shows about 159 fields; Initialize.cp checks only 100, and
comments claim there are only a few uncheckable ones! What about the other 50+ fields?
They include:
	slashGraceStems
	bracketsForBraces
	paperRect
	toolsPosition
	origin
	powerUser
	dblBarsBarlines
	disableUndo, assumeTie, delRedundantAccs, strictContin, turnPagesInPlay
	earlyMusic
	chordSymDrawPar, endingHeight, drawStemlets, noTripletBias
	ignoreRecVel
	tempoMarkHGap
	trebleVOffset, cClefVOffset, bassVOffset
	...and lots more
	
Many of these, probably most, could be checked -- and ALL of their values could be
displayed, of course.

-----------------------------------------------------------------------------

8-10 June

- Both Sonata and BlueNotz on both my MacBook and G5 fail to display the "ff" dynamic on
screen; change the font or double-click the "ff" and change to another dynamic => it
appears. Exception: "ff" _is_ visible with Sonata in some very small displayed sizes,
e.g., staff size 5 at magnifications 38% & 50% only! (It's never visible with BlueNotz,
as far as I can see.) In every other respect including PostScript printing, "ff" behaves
fine! It's no problem in Briard. All other dynamics display OK in all
fonts/sizes/magnifications. David G. sez: "It works as it should in v.5.2.6, i.e. pre
5.3.x. I went as far  back in 5.3 as 5.3.0b4 of September 2008, and the bug was there."
So, what changed between 5.2.6 and 5.3? If the complete source code for both is available
this might not be hard to fix!

Non-hairpin dynamics are drawn in DrawObject.c/DrawDYNAMIC; it has helper function
DrawUtils.c/GetDynamicDrawInfo.

Add to DrawDYNAMIC		DebugPrintf("DrawDYNAMIC: glyph=%c\n", glyph);
Invisible_ff_bug.ngl contains:
	LINK	CHARCODE	WHAT
	10		112			"p" attached to...
	11		207			quarter note
	12		196			"ff" attached to...
	13		207			quarter note

in staff size 1, using Sonata. Open it and draw several times at diferent sizes/magnifs. =>

	DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=\304\304DrawDYNAMIC: glyph=p
	DrawDYNAMIC: glyph=

Why is \304 repeated and w/o newline? I dunno. Anyway,
Change to		DebugPrintf("DrawDYNAMIC: glyph=%c pL=%d\n", glyph, pL);
output for Invisible_ff_bug.ngl now, drawing it twice:

	DrawDYNAMIC: glyph=p pL=10
	DrawDYNAMIC: glyph=\304 pL=12
	DrawDYNAMIC: glyph=p pL=10
	DrawDYNAMIC: glyph=\304 pL=12
	
Output for DynamVisibleTest.ngl is:
	DrawDYNAMIC: glyph=\354 pL=11
	DrawDYNAMIC: glyph=\304 pL=13
	DrawDYNAMIC: glyph=f pL=15
	DrawDYNAMIC: glyph=F pL=17
	DrawDYNAMIC: glyph=\270 pL=20
	DrawDYNAMIC: glyph=\271 pL=22
	DrawDYNAMIC: glyph=p pL=24
	DrawDYNAMIC: glyph=P pL=26
	DrawDYNAMIC: glyph=S pL=29

Add more to the DebugPrintf. Output for Invisible_ff_bug.ngl at 100%:
	DrawDYNAMIC: glyph=p pL=10 xp=153 yp=114 size=24 reallyDraw=1
	DrawDYNAMIC: glyph=\304 pL=12 xp=182 yp=115 size=24 reallyDraw=1

...at 75%:
	DrawDYNAMIC: glyph=p pL=10 xp=115 yp=85 size=16 reallyDraw=1
	DrawDYNAMIC: glyph=\304 pL=12 xp=136 yp=87 size=16 reallyDraw=1

...at 50%:
	DrawDYNAMIC: glyph=p pL=10 xp=77 yp=57 size=12 reallyDraw=1
	DrawDYNAMIC: glyph=\304 pL=12 xp=91 yp=58 size=12 reallyDraw=1

Nothing suspicious there! Change to staff size 5, still at 50%:
	DrawDYNAMIC: glyph=p pL=10 xp=69 yp=44 size=7 reallyDraw=1
	DrawDYNAMIC: glyph=\304 pL=12 xp=78 yp=44 size=7 reallyDraw=1

Still nothing suspicious (and ff is now visible, as expected). Revert file; switch font
to Briard, at 100% =>
	DrawDYNAMIC: glyph=p pL=10 xp=153 yp=114 size=24 reallyDraw=1
	DrawDYNAMIC: glyph=\304 pL=12 xp=182 yp=115 size=24 reallyDraw=1

Exactly the same as with Sonata (and ff is now visible, as expected). @#%&(*)$%${?!?

DrawDYNAMIC uses DrawUtils/DrawMChar to actually draw the char.  DrawMChar is pretty
messy, e.g., it sometimes uses an offscreen bitmap, so it's not hard to believe it's the
culprit... But apparently not. ????

The inconsistency across staff sizes is most likely because the problem occurs
with some screen font sizes and not others -- assuming "screen fonts" are still being
used!


-------------------------------------------------------------------------------

3 July

- Files often seem to forget their MIDI playback setting, so when I try to play, it
either gives the "unable to play score, because a MIDI device isn't selected" error
message, or (much more often) acts as if it's playing for a split second but plays
nothing. Setting DLS_MIDI Controller for all parts fixes; but saving and re-opening
the file after that changes nothing. This is a well-known, long-standing bug. I
think it happens much more (or only?) with files created years ago, regardless of
how much they've been edited recently.

First, what does setting DLS_MIDI Controller actually do? The "Part MIDI Settings"
dialog is handled by Menu.c/EditPartMIDI, which calls InstrDialog>PartMIDIDialog or
CMPartMIDIDialog (which does almost nothing but call PartMIDIDialog).

Playing is handled by MIDIPlay.c/PlaySequence

-------------------------------------------------------------------------------

9 Aug. ff.

It's time to add to QuickChange "Set tempo M.M. visibility to visible/invisible"!
...Done. Affects .rsrc: add "M.M. visibility" to Tempo popup; SetUtils.c: add
SetSelTempoVisible; SetCommand.c: improve description of how to add features :- ) ;
various.

-------------------------------------------------------------------------------

29 Aug.

Want to make windows for newly-opened files wider: at least full page width instead
of the current annoying width of ca. 560 pixels -- at 100% for US Letter pages,
about 9/10 the width! Where is this set? Doesn't seem to be in the config.

OpenFile() is called only from BuildDocument (in Documents.cp).  BuildDocument()
declares

	WindowPtr w = doc->theWindow

and does

	GetWindowPortBounds(w,&r);

BuildDocument is called from DoOpenDocument (in Documents.cp). ??

(21 July 2015

Got it! In WIND resource 2000, just change right bound from 620 to 690.)
 
-------------------------------------------------------------------------------

1-2 Nov. 2014; 11 Aug.- 15 Sept. 2015

Tempo changes in exported MIDI files are often ignored -- e.g., 6End1stMvmt.ngl of my
violin concerto has 13 tempo marks. The first 6 or so seem to be there; the others,
starting at m. 5-6 (ca. 10-12 sec. in) not. In 1LentoTheme, they're OK until about m.
101 (4 min. in), i.e., the first 5 or so! Playing inside Ngale, all tempo changes are
always followed. ?? Evidence of the bug: playback via QuickTime Player; confirmed by
Importing the MIDI file back into Ngale. Output from DebugPrintf's for 6End1stMvmt.ngl
starts:

MThd len=6 format=1 nTracks=5 timeBase=480
lastEvent=50353
mergeTabSize=32767 oneTrackTabSize=32767
 track=1 time=0 METAEVENT type=0x51
 track=1 time=0 METAEVENT type=0x58
 track=1 time=1914 METAEVENT type=0x51
 track=1 time=5754 METAEVENT type=0x51
 track=1 time=6714 METAEVENT type=0x51
 track=1 time=7674 METAEVENT type=0x51
 track=1 time=12432 METAEVENT type=0x51
 track=1 time=12432 METAEVENT type=0x51
 track=1 time=15360 METAEVENT type=0x58
 track=1 time=16800 METAEVENT type=0x58
 track=1 time=33137 METAEVENT type=0x3
cStart/StopTime=0/50400 quantum=120 tripBias=-100 tryLev=21 leastSq=0 timeOff=0

There are 7 tempo metaevents (type=0x51). The first 5 are each at 6 less than the
expected times; the 6th and 7th are at the identical time, much too late. Cause: In
MIDIFSave.cp, WriteTiming() gives a Tempo change the latest end time of any note
preceding the one the Tempo is attached to (via LastEndTime() ); in this case, a
preceding note is tied forward for a couple of measures! What to do? Why did we ever
write the code this way instead of just using the onset time of the note the Tempo is
attached to?? NB that playback inside Ngale seems to work perfectly!; how about making
Export MIDI File do things the same way? Cf. MIDIPlay.cp > PlaySequence(). It uses a
table built by MIDIUtils.cp: MakeTConvertTable(); try using that in Export MIDI File?
Probably not, but use its logic for finding the Tempo's time => seems to still have
problems. Output from DebugPrintf's for importing the MIDI file of 6End1stMvmt.ngl now
starts:

MThd len=6 format=1 nTracks=5 timeBase=480 (qtrNTicks=480)
lastEvent=50353
mergeTabSize=32767 oneTrackTabSize=32767
 track=1 time=0 METAEVENT type=0x51 (TEMPO)
 track=1 time=0 METAEVENT type=0x58
 track=1 time=1920 METAEVENT type=0x51 (TEMPO)
 track=1 time=5760 METAEVENT type=0x51 (TEMPO)
 track=1 time=6720 METAEVENT type=0x51 (TEMPO)
 track=1 time=7680 METAEVENT type=0x51 (TEMPO)
 track=1 time=8640 METAEVENT type=0x51 (TEMPO)
 track=1 time=9600 METAEVENT type=0x51 (TEMPO)
 track=1 time=15360 METAEVENT type=0x58
 track=1 time=16800 METAEVENT type=0x58
 track=1 time=16800 METAEVENT type=0x51 (TEMPO)
 track=1 time=19200 METAEVENT type=0x58
 track=1 time=21120 METAEVENT type=0x58
 track=1 time=23520 METAEVENT type=0x58
 track=1 time=26400 METAEVENT type=0x58
 track=1 time=27360 METAEVENT type=0x51 (TEMPO)
 track=1 time=28800 METAEVENT type=0x51 (TEMPO)
 track=1 time=30240 METAEVENT type=0x51 (TEMPO)
 track=1 time=30720 METAEVENT type=0x51 (TEMPO)
 track=1 time=31200 METAEVENT type=0x51 (TEMPO)
 track=1 time=31200 METAEVENT type=0x58
 track=1 time=50352 METAEVENT type=0x2f
cStart/StopTime=0/50400 quantum=120 tripBias=-100 tryLev=21 leastSq=0 timeOff=0

This shows all 13 tempo metaevents, and the times are all correct! Play the MIDI file
back via QuickTime => it sounds correct; duration = 54.58 sec. Play the original back in
Ngale => duration = ca. 54.45 sec. Looks like MIDI file export finally handles tempo
changes properly!

-------------------------------

Early code changes for the above:
MIDIPlay.cp: reword DebugPrintfs; disable some
MIDIFSave.cp: WriteTiming(): add DebugPrintf
MIDIFOpen.cp: comment out PUBLIC_VERSION_1 to enable debug prints; do debug prints
if shift & control keys are down instead of shift & option (to make it possible to
get debug prints from this module but avoid the voluminous output from rhythm
conversion)

-------------------------------------------------------------------------------

23 Mar. 2015

Get rid of the nonsensical statement about duration problems Score Info always gives
following its correct statement about duration problems.

ScoreInfo.c: ScoreInfo(): remove two redundant lines of code just before call to
HasMidiMap().

-------------------------------------------------------------------------------

31 Mar.-3 Apr.

Changes to Nightingale.rsrc:
*	Change "Midi" to "MIDI" in the "Midi Map" menu command, the MIDI Map dialog, and
	several error messages
* Reduce size of the "MIDI Modifier Effects" dialog
* Reduce size of the "Change Dynamic To" dialog
* Remove phony politeness -- the word "Please" -- from various dialogs

Increase max. play duration allowed in Set Duration dialog from 300% to 500%, mostly to
handle the "logical 8th note with half-note head" situation (as in Brahms piano music).
Affects .rsrc: STR# 240; DialogsEditor.cp.

-------------------------------------------------------------------------------

4-5 Apr.

Initial Keysigs of systems with no sharps/flats usually (always?) have objRects of (0,
0, 0, 0); that's fine, but Debug Check complains that they're "GARBAGE (UNSELECTABLE)".
Fixed this. Affects DebugUtils.c: DCheckNode.

-------------------------------------------------------------------------------

11-17 May

In various situations -- e.g., to facilitate working on my violin concerto with a
violinist -- it'd be very useful to override tempo marks in the score, say slowing down
by 25% or cutting the tempi in half. To do this, assuming we're changing the marked
tempi by a constant factor, and leaving the user interface out, it looks like the only
code changes it'd take would be to MIDIUtils.cp/PDur2RealTime(). It looks very low
impact, too!

Done => it works! But the factor is compiled in to MIDIUtils.cp; move it to vars.h and
initialize it in InitNightingale: InitNightGlobals => done. To let user control it, need
a new command in Play/Rec menu and either (1) a very simple dialog to set value to be
used by all Play commands, or (2) a fairly simple one to set value _and_ play, with a
choice of play command. I'll go with #1, "Change Playback Speed...", w/ feedback in
message area in form "T80%" (e.g.) if speed isn't 100%. Affects .rsrc: STR# 240;
NightTemplates.h, NResourceID.h, vars.h, InitNightingale, Menu, MIDIDialogs, MIDIPlay.

Everything seems OK now, except the keyboard shortcut for the "Instrument MIDI Settings"
command in the Play/Rec menu (option-cmd-M) has lost its modifier key #(#%_^&!:* -- I'm
almost certain because of a bug/oversight in Resorcerer. General Edit Lite is useless for
anything like this (actually, for almost anything, I think :-( ). For the moment, use
Resorcerer to set the _command_ to option-M! This works fine on my G5 except it displays
in the menu as option- command-mu instead of command-M with the "option" icon. But on my
OS 10.6 MacBook, it doesn't work! I'm sure I've run into this before, & I think I found
an ugly workaround involving copying another menu resource & (hex?) editing it; but how
to do that or otherwise avoid the problem? One difficulty with that workaround:
Resorcerer's hex editor seems to be completely disabled! -- at least for menu resources.

-------------------------------------------------------------------------------

19 May

Change the default type for Save PostScript from EPSF for one page to PostScript
text for entire file. Easy, & obviously very low impact.  Affects CarbonPrinting.cp .

-------------------------------------------------------------------------------

3-10 June

Set keyboard shortcut for Change Playback Speed to command-8. (All letters and all
other digits are already taken.)

Another attempt to set the shortcut for Instrument MIDI Settings to option-command-M
again:
	With Resorcerer, change MDEF for MENU 8 (Play/Rec) from 19999 to 0.
	With Rezilla, change shortcut for MIDI M?? from command-M to option-command-M.
	(M = key 77.)
	With Resorcerer, change MDEF for MENU 8 (Play/Rec) back to 19999.
It works on my G5 inside Xcode; on my G5 as a normal app; and on my OS 10.6 MacBook!

Change "Change Playback Speed" to "Relative Playback Speed".

-------------------------------------------------------------------------------

12-14 June

Work on getting the instrument settings dialog (from Master Page) initialized with the
instrument's current channel and patch number. Code is in InstrDialog.cp > InstrDialog().
Balance velocity _is_ initialized; what's the difference? Ah, there's no PutDlgWord()
to set CHANNEL_DI or PATCH_DI. How could this ever have worked!? Add PutDlgWord()s for
them -> it works now!

Also, PATCH_DI isn't checked for legality -- or its new value picked up => Fixed; a
rough edge is the alert for illegal values is blank. !?  Oh well, good enough for now.

-------------------------------------------------------------------------------

21-24 June

Feature to add: a way to mute a part, to facilitate working w/ a soloist (e.g.,
violinist for my concerto). (Setting balance velocity to -127 already does it, but only
in polyphonic mode; also, it's clumsy & unintuitive.) Simple solution:

(1) add a command to Play/Rec menu to mute the (or the first) selected part, and
unmute previous muted part; also need a way to unmute all.

(2a) Store part no. of muted part in (a) an initialized but unused byte in a
score-wide data structure, or (b) a global variable.

(3) Of course have MIDIPlay() ignore notes in muted part. What about exporting MIDI files?

For step 2, implementing 2b would be simpler than 2a, but would mean switching from one
score to another would apply the muted part no. of the first score to the other; that's
likely to be very confusing! So go with 2a.  Should it be saved with the score? Unclear.
It might be ??

In NIGHTSCOREHEADER (Ntypes.h), is expansion[] initialized? Looks like not! How
about roomToGrow[] to MIDIPreferences (applicationTypes.h)?

-------------------------------------------------------------------------------

22 July

The default window size is ridiculously narrow on a typical modern display, e.g., my
20-in. monitor. Fix: in the resource WIND 2000, just change 620 to, say, 690. NB:
Resorcerer on my G5 shows an empty window for the content of WIND 2000!?  Make the
change on my old MacBook  => it works.

-------------------------------------------------------------------------------

9-10 Sept.

I'm getting an awful lot of meaningless complaints from Debug these days, e.g., with the
current LentoThemeCounterpoint.ngl:

	DCheckNode: MEASURE AT 1088 BBOX DISAGREES WITH NEXT MEASURE BY 567.
	DCheckNode: MEASURE AT 1109 HAS A GARBAGE BBOX.
	DCheckNode: MEASURE AT 1109 BBOX DISAGREES WITH PREVIOUS MEASURE BY -567.

...always in sets of three as above. And with the current TransitionTo+BACH+End.ngl:

	*DCheckNode: SYSTEM AT 68 RECT PAST RIGHT MARGIN.

Could the changes to DebugUtils.c: DCheckNode of 5 April to reduce meaningless
complaints have actually made things worse? Compare old to current version of DebugUtils
on LentoThemeCounterpoint.ngl & TransitionTo+BACH+End.ngl => nope; in both, the newer
version of DebugUtils eliminated some complaints without adding any new ones.

The "SYSTEM AT 68 RECT PAST RIGHT MARGIN" messages for TransitionTo+BACH+End.ngl never
apply to the 1st system of a page... ??  Go into Master Page; decrease right margin a bit;
save changes; back into Master Page; set right margin back to what it was => no more
complaints! This is probably a good enough workaround :-| .

For the "MEASURE BBOX" messages for LentoThemeCounterpoint.ngl, Go into Master Page;
decrease right margin a bit; save changes => no more complaints! This is also probably
a good enough workaround.

-------------------------------------------------------------------------------

12-16 Sept.

MIDIFSave.cp: Clarify DebugPrintf's; minor cleanup.

MIDIPlay.cp, MIDIFSave.cp: Change most instances of "Midi" in function names to "MIDI".

MIDIFOpen.cp: In Debug prints for TEMPO metaevents, add "(TEMPO)"; rename the two
versions of GetRelObj (with different calling sequences: this assumes a C++ compiler,
a bad idea in a program that's virtually all straight C) to GetTempoRelObj and
GetCtrlRelObj; clean up code.

-------------------------------------------------------------------------------

17-30 Sept.

Text strings need an "extended" option. Easy UI implementation: in the text dialog,
replace the hidden "Underline" check box and code to support it with "Extended", and
make it visible. Easy functionality implementation: before drawing the string or
computing its length, insert a blank between each pair of chars. :-) . This isn't _that_
easy, partly because of our memory mgmt., partly becauase we have to give the ancient
Mac toolbox Pascal strings, which have a max. length of 255 chars.; probably warn in the
dialog if it's exceeded.

In DrawObject.cp > DrawGRAPHIC(), see case GRString. Probably need to use Pstrcpy()
to make a copy of *q to manipulate, i.e.: Str255 tempStr; Pstrcpy(q, tempStr);

?? #ifdef TARGET_API_MAC_CARBON, DrawNChar() and DrawNString() seem to always use the
system font! Huh? And it _is_ defined -- but DrawNChar() and DrawNString() are never
called. It was already this way in 2006. Yeeech! Remove this junk... done.

Add function ExtendString() => 1st 10 versions crash instantly & horribly; why? It
looks like doing _anything_ with aGraphic->string directly is a disaster; _must_
use PCopy() on it.

To compute objRect, cf. GetNPtStringBBox(), called from GetGraphicDBox()... the
functionality works both on screen and PostScript output!

The UI changes now work in both TextDialog and the Define Text Styles dialog. But normal
extended text is only a bit (25%?) wider than normal, but want to stretch a lot more
than that! Let's call this "Expand" instead of "Extend". Must check for strings too
long for Expand'ing (because of the Pascal string 255-char. limitation :-( )

All seems to be okay! Affects .rsrc; defs.h; DrawObject, StringUtils, TextDialog.

-------------------------------------------------------------------------------

I'm now seeing consistent failures just trying to compress NightingaleG5Ver! I get the
error message "An error occurred while adding “” [empty filename] to the archive".
Experiments show the problem is in build/Nightingale.build/Release. Remove that
directory, rebuild => all OK.

-------------------------------------------------------------------------------

2 Oct. - 3 Oct.

I'm _finally_ ready to use a version control system for Ngale!! A GitHub repository
already has the last "AMNS" codebase (from David Gottlieb, ca. 2012) with voluminous
changes, mostly superficial and mostly by Geoff C. The vast majority of the changes
appear to be replacing thousands of occurrences of "INT16" to "short"; to facilitate
merging, change all instances of "INT16" in files I've changed since 2013 to "short".

CarbonPrinting.cp: Geoff made loads of changes; I changed only one char., so use his
version with my change.

DrawUtils.cp: I'd made no non-trivial changes.

OK, everything is integrated! Try to build => 9 errors. Looks like #defines are
missing for NOTEHEAD_GRAPH_WIDTH and EXPAND_WIDER .

Both should be in defs.h; why aren't they? Because I overlooked defs.h when integrating
all the changes. Correct that, rebuild => 1 error: OhioSlurs.cp is missing -- the ref.
to it needs to be removed from the project file. Do that => it builds & runs!! Yippee!

Call this version 5.5.

-------------------------------------------------------------------------------

27 Sept. - 12 Oct.

Implement muting a part: at most one part at a time, per Document; not saved bcs when a
file is opened, no part should ever be muted. To keep track, add a field (MAXSTAVES =
64, so max. no. of parts = 64, so >=6 bits) _mutedPartNum_ to the Document declaration
in applicationTypes.h ; 0 = no part, else the no. of the muted part. Add it where? The
comments say fields both at the beginning and the end don't need to be saved; the end
seems safer :-) . Test by opening a couple of good-size scores => seems OK! Initialize
it where? Probably Documents.cp > InitDocFields().

Write functions AnyNoteToPlay() and NoteToBePlayed(), to be called from MIDIPlay >
PlaySequence() and MIDIFSave > WriteMFNotes().

Add to .rsrc a "Mute Part" dialog, and add menu item "Mute Part..." to the Play/Rec
menu; add a name for it to NResourceID.h; add code to handle it to Menu.c. Write
handler for the Mute Part dialog => it works! Last details:
+ Put smthg in the "Playing" display to indicate muting. There's very little room,
	so probably just boldface "M"
+ For Save MIDI File, could ask user if they want to omit the muted part, but it's
	easier to always omit it (and warn user it'll be omitted). (If the muted part is
	the only part, don't bother saving the file.)
+ If no file is open, need to disable Mute Part and Relative Playback Speed cmds!

Clean up code a bit: remove last VIEWER_VERSION code; update comments in compilerFlags.h.

-------------------------------------------------------------------------------

13-14 Oct.

With two voices on a staff, Ngale computes space needed based on the merged voices
even if one is so far above the other that they don't interact, resulting in it
sometimes allocating way too much space for a Sync. Cf. violin concerto, II,
3VCBVariation, m. 9. A solution: add a flag to the ANote struct that says "when
respacing, ignore this note", or, better, "ignore the chord this note belongs to"; add
it to the note Get Info dialog.  Est. fix impact: low: there's a byte available to put
this flag in, and it looks like it's been initialized to 0 for many years. ??The byte is
fillerN. Could also take the top bit of ndots:4 -- supporting up to 7 aug. dots is
probably enough :-) . 

Code changes would be in SpaceTime.cp > SymWidthLeft(). However, that function calls
ChordNoteToLeft() with staff nos., while ChordNoteToLeft() expects voice nos.! This is a
mess; it may not be low-impact after all, and may not be worth the effort :-( .

In code to display CNFG fields: add _musicFontID_; rearrange to come closer to the order
of declarations in applicationTypes.h; minor cleanup.

-------------------------------------------------------------------------------

18-28 Oct.

Minor changes to Initialize, DebugUtils.

.rsrc: tweak the Sync Info and General Info dialogs (DLOGs 596 & 598) for readability.

Make the "extended" option for text strings an option independent of the style instead
of part of the style definition. So a flag needs to be stored in the GRAPHIC struct;
the _info2_ field looks like a good place, not used for GRStrings. Is it always
initialized? It looks like it: cf. InitGraphic().

It works! Do the same for tempo marks => that works!

-------------------------------------------------------------------------------

3-10 Nov.

Resume work on "ignore the chord this note belongs to" feature (cf. 13-14 Oct.).
Change SymWidthLeft() to properly use voice nos. in calls to ChordNoteToLeft() (gasp).
Add <noAutospace> flag to the ANOTE struct; in SymWidthLeft(), if main note has
<noAutospace>, ignore the note's chord.; in BrowseSync(), display <noAutospace>.
??

Test:
	SymWidthLeftTest.ngl: m.1, OK; m.2 both tests OK.
	Spacing2VPerStaff2.ngl: m.1, to left OK, to right not; m.2, neither is OK.

Part of the problem is we need more context in SymWidthLeft(), and, no doubt,
SymWidthRight(). But the code is just too messy as it is! Let's precompute an
<ignoreChord> matrix in SpaceHighLevel... done. But now Ngale crashes if I simply
open a test file and try to respace one measure #%^&#)%#)% . Let's go back to the
last known good version, the code in the Ngale 5.5 of 28 Oct. => yep, that still
works :-) . Move towards the latest version. !! When I call SymWidthLeft() with
measNode = -1, i.e., no <ignoreChord> info available, no problem. But when I call
it with the correct values but setting measNode = -99 as the 1st stmt in
SymWidthLeft(), it crashes :-( . In this excerpt from ConsidITWidths():

			/*
			 * We need more space here. Move this object to the right, and
			 * increase the space available on all staves by the same amount.
			 */
**0 DebugPrintf("(Q) i=%d stf=%d gNeedLeft=%d needLeft=%d\n", i, s, gNeedLeft, needLeft);
**1			fSpBefore[i] += fSpNeeded;
			for (t = 1;t<=doc->nstaves; t++)
				fAvailSp[t] += fSpNeeded;
		}
		
		/*
		 *	Re-initialize for the next J_IT object on this staff.
		 */
**2		prevNeedRight[s] = SymWidthRight(doc, spaceTimeInfo[i].link, s, FALSE);	/* Incl. stuff fllwng notehead */
		if (prevNeedRight[s]<gNeedRight) prevNeedRight[s] = gNeedRight;

Before adding line **0, it crashes w/ "EXC_BAD_ACCESS" at **1. After adding **0.
it crashes at **2. ?!?

Something very suspicious: The code has many instances of loops like this:

	for (k = 0; k<=nInMeasure; k++)

But that stmt covers nInMeasure+1 values of <k>! Is that correct?? ...Unfortunately,
yes. <nInMeasure> is a misleading name; it's really <nLast>. OK, I give up! -- at
least for the time being.

-------------------------------------------------------------------------------

11-18 Nov.

Various fields in various Info dialogs are too narrow, truncating labels or even values.
Make the fields and, in some cases, the dialogs wider.

-------------------------------------------------------------------------------

18 Nov.

In the current 1stMovement_Part3.ngl, mm. 52-61, adding whole-measure rests to the
solo violin part results in Ngale thinking mm. 57 & 59 are suddenly longer! Weird;
don't think I've seen this before. Starting in m. 57, it's 4/4 => each measure dur.
should be 1920 ticks. Onset times:

m. 57: 111360
m. 58: 114600 => dur. of m. 57 = 3240 = 1320 (5 eighths + 1 16th) too big
m. 59: 116520 => dur. of m. 58 = 1920
m. 60: 119160 => dur. of m. 59 = 2640 = 720 (3 eighths) too big
m. 61: 121080 => dur. of m. 60 = 1920

!! Deleting the whole-measure rests in the offending bars, then re-inserting them,
fixes the problem. Oh well; it's not worth pursuing this now.

-------------------------------------------------------------------------------

26-27 Nov.

- With a score of very many pages, you can't zoom in very far. E.g., with
1stMovement_Part1FS.ngl's 37 pages, 200% is the limit before Ngale complains the score
won't fit at the new magnification. This makes tweaking details very difficult. Changing
to a larger "paper" size via Page Setup seems to do nothing at all. Changing Screen Page
Layout to accomodate more pages works in that it's recorded in the file, but doesn't
stop Ngale from complaining; cf. Sheet>SheetMagnify(). Either or both are probably worth
fixing.

Where do we check for screen layout overflowing? The complaint for score not fitting
at new magnification is
	#define SCREENOVERFLOW_DLOG 806
But where is it referenced?? In Sheet>WarnScreenPagesOverflow(). Anyway, checking is
done in Sheet>ScreenPagesCanOverflow()... which seems to check _separately_ for
<numSheets> exceeding the layout's no. of rows or its no. of columns -- but I nearly
always have no. of rows as 1, so why don't I have problems w/ any score of more than a
page?? W/ my 37-page score, going from 150% to
200% => 	magnify = 2, numSheets = 37, scale = 2.0;
			doc->numRows = 1, maxRows = 66;
			doc->numRCols = 86, maxCols = 86

Trying to go from 300% to 300% =>
		 	magnify = 3, numSheets = 37, scale = 3.0;
			doc->numRows = 1, maxRows = 66??;
			doc->numRCols = 86, maxCols = 86??
		
!! The problem really is exceeding the width or height of the available space, so
just reducing the no. of columns from 86 to, say, 20 should do it... and it does!
It'd be good to clarify the "score won't fit" error message, but maybe not worth the
time now.

-------------------------------------------------------------------------------

28 Nov.

- With reasonable spacing, only about 25 staves fit on a letter-size page even at staff
size 8, so with a largish number -- e.g., 15 in my violin concerto -- you can get only
one system on a page, Trying to change to a larger "paper" size seems to do absolutely
nothing. More precissely, after changing from default (U.S. letter) to U.S. legal, in CarbonPrinting>
NPageSetupDoneProc(), it looks like

	if (!EqualRect(&doc->origPaperRect,&rPaper)) ...

isn't satisfied, i.e., doc->origPaperRect and rPaper are identical. Well, pmRPaper
is still 612 x 792 points, i.e., 9-1/2 x 11 in. ?? Apple's PMGetAdjustedPaperRect()
must be returning pmRPaper unchanged; I dunno what can I do about that.

Changing from portrait to landscape format _does_ ??

-------------------------------------------------------------------------------

29 Nov. - 7 Dec.

DebugPrintf messages seem to go to /dev/null unless we're running inside Xcode, and
chances to run inside Xcode (2.5!) are very likely to gradually fade away. Solution:
DebugPrintf is #define'd simply as printf. It should be trivial to #define it instead as
the BSD function syslog(3) ...though it'd be nicer to continue to have messages go to
Xcode _and_ send 'em to the log.

Solution: call openlog(p1, LOG_PERROR, LOG_USER) before calls to syslog()!

?? Does this work? I saw some Nightingale messages in the system log, but then nothing
seemed to be there! Maybe it's just scrolled out of the viewable area... Where _is_
the system log file? In /var/log . Try again => nope, nothing there!; anyway, what I
see in Console brackets the time the message was issued. Try w/o calling
openlog() => nope. I've been using level LOG_INFO; try w/ a higher level, LOG_ERR =>
it works! So, contrary to documentation, it looks like the default doesn't send
messages of all levels through. Add back call to openlog() => it still works.
Change level filtering via setlogmask() => it _seemed_ to work... but now it's only
accepting levels LOG_NOTICE and above, i.e., not LOG_INFO or LOG_DEBUG. OK, I can
live with that.

Add VLogPrint(), LogPrint(), InitLogPrint() to Utility; call InitLogPrint() from
initialization code; change COMPLAINx macros in DebugUtils.h from using DebugPrintf()
to LogPrint(LOG_NOTICE, ...) => it works! But probably should use priority level
LOG_ERR.

This has all been on my G5 running OS 10.5. Test on my old MacBook running OS 10.6 =>
OK, and even levels LOG_INFO and LOG_DEBUG appear in the log.

OK, but we often call DebugPrintf() with partial lines or occasionally with multiple
lines. Add support for the former only, & rename xxxPrint functions to xxxPrintf =>
?!? hangs/crashes! -- apparently in strlen(). Run log contains:

1------inStr='A simple one-line LogPrintf.' fullLine=1 &inStr=184f78 pch=184f78 len=28
Ngale: A simple one-line LogPrintf.
1------inStr='Another one-line LogPrintf.' fullLine=1 &inStr=184f78 pch=184f78 len=27
Ngale: Another one-line LogPrintf.
1------inStr='This line is ' fullLine=0 &inStr=184f78 pch=184f78 len=13
1------inStr='built from 2 pieces.' fullLine=1 &inStr=184f78 pch=184f78 len=20
Ngale: This line is built from 2 pieces.
1------inStr='This line was ' fullLine=0 &inStr=184f78 pch=184f78 len=14
1------inStr='built from 3' fullLine=0 &inStr=184f78 pch=184f78 len=12
1------inStr='pieces.' fullLine=1 &inStr=184f78 pch=184f78 len=7
Ngale: This line was built from 3pieces.
1------inStr='DEBUG 'M'-Std: ' fullLine=0 &inStr=184f78 pch=184f78 len=15
1------inStr='CHK MAIN:' fullLine=0 &inStr=184f78 pch=184f78 len=9
1------inStr='Discont. sel, 0 objs in range, 0 sel, 10 total.  0 voices.' fullLine=1 &inStr=184f78 pch=184f78 len=58
Ngale: DEBUG 'M'-Std: CHK MAIN:Discont. sel, 0 objs in range, 0 sel, 10 total.  0 voices.
1------inStr='    CHK MASTER: ' fullLine=0 &inStr=184f78 pch=184f78 len=16
1------inStr=' Done.' fullLine=0 &inStr=184f78 pch=184f78 len=6
1------inStr='    CHK CLIP: ' fullLine=0 &inStr=184f78 pch=184f78 len=14
1------inStr=' Done.' fullLine=0 &inStr=184f78 pch=184f78 len=6
 
!! It looks like strlen() and strcat() both crash if src is the null string, at least
on my G5. It's really hard to believe such a horrendous bug exists _and_ I didn't know
about it, but e.g. putting "if (pch!='\0')" in front of
    	strcat(outStr, pch);
definitely seems to make the problem go away.

Replace ca. 300 instances of "" to "LogPrintf(LOG_NOTICE, "... done.

-------------------------------------------------------------------------------

16-17 Dec.

- Explicit courtesy accidentals are unusable: the parens are always way too low on the
page. I was thinking most of the displacement was because they're off by one staff, and
the rest because the tops are where the bottoms should be. But actually it seems to be
just because _courtesyAccYD_ -- read from the Prefs file -- on my G5 & my old MacBook is
way too large: it's 100, but should be more like the config default of 8. But where _is_
the #%&#)%$%=$)# Prefs file, "Nightingale Devel Prefs"?? It doesn't seem to be anywhere
on the startup disk, and I can't tell from the code where we're looking, but we
certainly seem to be finding it!

Try changing the name to, e.g., "Nightingale 5-AMNF Prefs"? That's probably a good
idea anyway.

??UNFINISHED!

-------------------------------------------------------------------------------

17-19 Dec.

- On MIDI playback, if multiple notes are simultaneously playing the same note number on
the same channel but end at different times, Ngale stops playing that note when the
first one ends. It should at least hold it till the last one ends. It might be better to
re-attack the note at a possibly different velocity, but that'd be more complicated and
it's not clear it'd actually sound better.

This is handled by an eventList; PlaySequence() calls EndNoteLater() which calls
InsertEvent(). So should just check before calling EndNoteLater() (or in EndNoteLater()?),
and if there's already an event w/ that note no. and channel w/ a later ending time,
ignore the Note Off.

Cf. MIDIUtils.cp/InsertEvent(), and, the equivalent for writing MIDI files,
MIDIFSave.cp/MFCheckEventList().

Add Boolean param. _playMaxDur_ to xxInsertEvent; if TRUE and we already have ??,
ignore the call to xxInsertEvent. Add FALSE as actual parameter to calls (in xxEndNoteLater)
value, so MIDI playback should behave the same as always => !#$^%&@$@# results in no
Note Offs being sent at all! How?

The 4th formal param. to CMEndNoteLater is now _long_ in the declaration, _short_ in
the prototype, & _UniqueMIDIID_(?) as the actual parameter -- very suspicious. Change
that to long in the prototype & declaraion of CMInsertEvent() => OK!! 

It's OK now _if_ the longer note is encountered first. If a shorter duration is followed
by a longer, it's not enough to add the longer one to the cmEventList: I have to remove
the shorter one! ...best implemented simply by replacing it (duration and Off velocity).
Do that => all OK!

-------------------------------------------------------------------------------

22-30 Dec.

- Ngale doesn't handle unisons, even perfect unisons, at all well. It'd be helpful
if user could say "unisons are OK". Then, (a) when they create a unison, (a) Ngale
should automatically put the new note on "the other side of the stem", and (b) Debug
Check shouldn't warn about perfect unisons. Fix est.impact: very low.

!! CAVEAT: aking _any_ change to Double.cp is likely to turn it into "ill-formed UTF"
(according to BBEdit); this is really nasty because Xcode doesn't complain, it just
gives compilation errors. I'm sure this has happened before, probably with a different
file. Sigh.

-------------------------------------------------------------------------------

2 - 3 Jan. 2016

Change name of the Preferences file from "Nightingale Devel Prefs" to "Nightingale AMNF
Prefs" (see entry for 16-17 Dec.) => gives the "Creating a new one" progress message,
but where is it? Finder's Search sez no "Nightingale AMNF Prefs" anywhere... Ah, unless
it's in a hidden folder!! Check w/ Terminal => success! Specifically:

  DonDualG5:~ donbyrd$ find . -name 'Nightingale A*' -print
  ./Library/Preferences/Nightingale AMNF Prefs

..right where it should be :-| .

Also, after creating (and using) a new Nightingale AMNF Prefs, Ngale complains that
field 69 (whichMIDI) is illegal; its value is 4. I.e., the prototype in the .rsrc (CNFG
resource) has it as 4, but the only legal values now are 0 and 1. Change that field in
.rsrc to 0 => OK.

-------------------------------------------------------------------------------

11 - 15 Jan.

Convert files encoded in Mac OS Roman to UTF-8; replace "sustain on" char. in code
with 0xA1 (its codepoint in Sonata). Affects DrawObject, Menu, DebugUtils.

Convert file with CRLF line endings to Unix. Affects defs.h.

The pedal mark (SUSTAINON) is now displayed as a digit "5"! It was OK in Ngale 5.5.
Cause: converting DrawObject.cp from Mac Roman to UTF8 screwed up the char. code;
in Sonata, it's 0xA1. Replace the char. in source code with 0xA1 => all OK again.

The standard "header" on Ngale .cp files says

 * THIS FILE IS PART OF THE NIGHTINGALE™ PROGRAM AND IS CONFIDENTIAL PROP-
 * ERTY OF ADVANCED MUSIC NOTATION SYSTEMS, INC.  IT IS CONSIDERED A TRADE
 * SECRET AND IS NOT TO BE DIVULGED OR USED BY PARTIES WHO HAVE NOT RECEIVED
 * WRITTEN AUTHORIZATION FROM THE OWNER.
 * Copyright © 1988-99 by Advanced Music Notation Systems, Inc. All Rights Reserved.

According to SourceTree's display of changes, the update to Double.cp I'm ready to
commit changes the char. after "NIGHTINGALE" from E-grave to TM, while the updates to
DrawObject, Menu, & DebugUtils change it from TM to comma / N-tilde / cent sign, and
add something like a "~" in front of the copyright symbol! Huh? Clearly related to
encoding. Encodings (according to BBEdit; ** = "Incorrectly formed") and chars. displayed
(BBEdit on my G5, default font; D-? = black diamond enclosing question mark):

file		old enc.		new enc.		char. after "NIGHTINGALE": ST	:BBE
Double		UTF8**			ISO Latin 1		E-grave => TM					D-? => super-a-underline
DrawObject	Mac OS Roman	UTF-8			TM => comma/N-tilde/cent sign	TM => TM
Menu		Mac OS Roman	UTF-8			TM => comma/N-tilde/cent sign	TM => TM
DebugUtils	Mac OS Roman	UTF-8			TM => comma/N-tilde/cent sign	TM => TM

It looks like BBEdit on Mac doesn't display Latin-1 properly (no surprise) and
SourceTree on Mac doesn't display UTR-8 properly (weird). Anyway, almost certainly not
evidence of a serious problem!

-------------------------------------------------------------------------------

21 Jan.

Showing attaching point(s) of symbols isn't as good as it used to be. I'm pretty sure
that formerly, double-click various symbols (at least dynamics, slurs, & GRString &
GRLyric Graphics) & hold mouse button formerly => showed attachment point(s) (via
vertical dotted lines, with call to UIFUtils.cp > HiliteAttPoints (or possibly
HiliteInsertNode?)); anyway, I want it to! Currently, it does so only for Graphics and
tempo marks, and only _after_ you release button on double-click, while the resulting
dialog is on screen: that's OK -- and quite possibly what it's always done for Graphics.
But it doesn't do it for dynamics and slurs at all. In fact, now that double-clicking
dynamics brings up an edit dialog, it could behave the same as for Graphics and tempi.

CheckDYNAMIC(), case SMDblClick, calls HiliteAttPoints():

	if (IsHairpin(pL))
		HiliteAttPoints(doc, firstSync, lastSync, staffn);
	else
		HiliteAttPoints(doc, firstSync, NILINK, staffn);

It looks like this should work. But CheckGRAPHIC(), case SMDblClick, for text, calls
HiliteInsertNode():

	HiliteInsertNode(doc, p->firstObj, staffn, TRUE);		/* Hiliting on */

...and so does CheckTEMPO(), case SMDblClick! It looks like HiliteInsertNode() works and
HiliteAttPoints() doesn't.

Change CheckDYNAMIC(), case SMDblClick, to use HiliteInsertNode => it works!

-------------------------------------------------------------------------------

2-31 Jan.

Can I make spacers more useful, e.g., for my projected double-stop crossing tremolo glissandi
w/ multiple open strings? Maybe.

Want to make the "Can't find Prefs file: creating a new one" message stay on the screen
longer, say for 5 sec. It _should_ just be a matter of increasing the argument to
SleepTicks() in Initialize.cp/OpenSetupFile, but that doesn't seem to have any effect?!?
Well, Initialize.cp is a mess, anyway; clean it up => now the message _does_ stay for
the time I specify! Weird, but not worth worrying about.

-------------------------------------------------------------------------------

8 Feb. - 1 March

- In some very recent scores -- my SpacerTest_InvisibleNotesBug.ngl &
3rdMovementFS_??.ngl and something of Glenn Gass' -- inserted notes aren't drawn at
all! With SpacerTest_InvisibleNotesBug, I tried redrawing, changing system spacing and
staff size (in Master Page); nothing makes the notes appear, and Debug has no
complaints. The invisible notes can't be selected graphically, but Select All highlights
what look like their correct positions. Save, re-Open it => no change. Strip it down to
InvisibleNotesBug.ngl => no change. ?!? Play => the invisible notes are played.

Dump InvisibleNotesBug.ngl => objRect.left is 0 iff note is invisible! Why? DrawSYNC()
is never called for the invisible notes. Why? Ihe Syncs' _visible_ flags are set, but
their _valid_ flags aren't! Why? Notes currently are invisible iff they're on the 2nd or
4th system; inserting new notes => the same thing. Insert a barline on sytem 2 or 4 =>
all notes on the system suddenly appear! Ah, in DrawScoreRange(), _drawAll_ is FALSE
for the invisible notes! For Measure objects, 

	if (SectRect(&pMeasure->measureBBox, &paperUpdate, &result)
											|| outputTo!=toScreen)

...then drawAll is set to FALSE. Clearly  outputTo==toScreen, so the problem is Ngale
thinks the intersetion of the measureBBox and the update area is empty. Why? Because the
measureBBox.left = measureBBox.right = 850, which I'm pretty sure is the right end of
the System! Why? I dunno, but let's add to Debug Check a check for Measures with
zero-width bbox that aren't immediately followed by a Page or System, or that have
something other than a Page before the next System. Add code to DCheckMBBox() => done.

On my G5, just adding a barline in the offending systems fixes everything in all test
scores, and in Glenn's score (filename _stems_), only the 2nd system is a problem
anyway. On Glenn's system, _none_ of the noteheads are drawn in either system, and
adding a barline does nothing! The apparent cause: he's using Sonata, and it doesn't
show up in Font Book, so it's evidently not installed properly -- and he doesn't have
Briard or Blue Notz. ??


-------------------------------------------------------------------------------

11 Feb.

Changing to a larger "paper" size via Page Setup seems to do nothing at all. I don't see
anything in Ngale code that explains this; info returned from the Page Setup dialog indicates
the paper size is unchanged !*(!*@&(. Changing from portrait to landscape format _does_
work. This is with Ngale 5.5 or 5.6b2 on my G5. But Opus says it works for him!; he's
running Ngale 5.3.0 b10m on OS 10.6.8. Try Ngale 5.5 on my old MacBook => changing paper
size works! So it looks like this is OS dependent.

-------------------------------------------------------------------------------

4-5 Mar.

- Piano pedal up and down symbols don't come out in a music font. However, the same
chars. as part of a text Graphic _are_ rendered in a music font.  Cf.
PedalSymbolsFontBug.ps to PedalSymbolsFontKludge.ps: the former, using Ngale's official
pedal symbols, switches to Helvetica for them! The latter, using text with the proper
chars. in the Sonata font, does _not_ switch. Why does Ngale switch to Helvetica instead
of using the music font? Because the calls to PS_FontString() in DrawGRAPHIC() for
GRMIDISustainOn and GRMIDISustainOff specify as the font
doc->fontTable[p->fontInd].fontName ; it should be just  doc->musFontName :-) .

-------------------------------------------------------------------------------

25-28 Mar.

Rename the _string_ field of the Graphic object to _strOffset_.

Getting the string stored in a Graphic object is extremely error prone! Does the
FirstGraphicSTRING macro handle this?

Rename the Tempo object fields containing STRINGOFFSETs to _xxxOffset_.

-------------------------------------------------------------------------------

28-29 Mar.

Check Range complains about double-bass notes that are indeed below its specified range
_if_ sounding pitch is interpreted as an octave below written -- but I'm using sounding
= written, and it plays back that way. Does it depend on if "Play from parts' settings"
is in effect? No. Cf. UseMIDINoteNum(), which is called from GetNotePlayInfo().

Want to support pure C scores (e.g., my violin concerto  and conventional
transposed scores and play either w/ specified patches (multi-channel) or all on one
channel =>  Ngale needs an explicit indication of whether it's a C score or not! Oops: 
it already has one!!: the "Transpose" MIDI command. Maybe rename it to "C Score"?
Anyway, the problem with Check Range results from it not paying attenion to that
setting. Cause: for transposing instruments, the parts' _hiKeyNum_ and _loKeyNum_ are
the MIDI note numbers of the written pitches, not the sounding pitches! Ugh. So, leave
that as is and change the Check Range code, or make them the note nos. of the sounding
pitches? The latter is obviously the correct fix; it's also obviously harder, and will
make the existing UI a bit clumsier (in terms of clefs displayed).. Need to
change the instrument descriptions, in STR# 130. That won't help existing scores!, but
they can be fixed one part at a time, and it won't make things any worse if they
aren't fixed.

Edit STR# 130... the format is obscure, and Ngale is very picky! Cf. MPImportExport >
SDInstrDialog(). But where is it read in? Ah, in InstrDialog, which also documents
the format.

-------------------------------------------------------------------------------

12 April - 23 June

Paste Merge, Set Duration, and Remove Rhythmic Gaps/Resynchronize sometimes give a
strange error message. E.g., Paste Merge a chord for piano in 3rdMovementFS.ngl, m. 32
=> "FixGRDrawLinks: for 1155, firstObj=1157 or lastObj=1161 isn't a Sync or a GRSync."
True, while 1157 is a Sync, 1161 is a Measure. Still, this makes no sense! Typically the
GRDraw Graphic in question is nowhere near the where I'm Paste Merging. In this case,
GRDraw Graphic w/ LINK 1155 is in m. 89. ?? Reconstruct/FixGRDrawLinks() is called only
from FixNBJDLinks(). ??

A similar case: "FixGRDrawLinks: for 1248, firstObj=1251 or lastObj=1255 isn't a Sync or
a GRSync."  1255 is a Measure. Ah, FixGRDrawLinks() is called from FixNBJDLinks() from
FixCrossPtrs(), and the latter has it work on the entire score! -- huge overkill. More
important, is there really a problem with these GRDraw objects? The only GRDraw objs we
have are lines, and they can be inserted only w/ Syncs or GRSyncs on both ends -- but if
one crosses a barline, Reformat can truncate it and attach the right end to a Measure! I
don't think this causes any problems, but maybe Debug Check should complain about it;
anyway, Paste Merge etc. probably shouldn't.

-------------------------------------------------------------------------------

20-21 April

We want extracted parts to have a different staff size from the score; staves in parts
should usually be larger! UI could be a new Config field, or -- probably better and
definitely lower impact -- entered in the Extract dialog. (Having both would be useful,
but low priority.) Re functionality, cf. Extract > CopyDocFields(); is it just a matter
of setting part->srastral to a different value? Nope! That doesn't result in updating
the actual size of each staff, H and V coords. of everything, etc. Ah, MasterPage >
DoMasterStfSize() seems to do everything needed. To be continued.

-------------------------------------------------------------------------------

10 - 26 June

This is utterly bizarre, but for a long time, Xcode 2.5 on my G5 has been unable to save
about three source-code files: Browser.cp, Dragging.cp, DebugUtils.cp; maybe others?
They're not locked. I've been opening them in BBEdit (not copying and pasting,
though that'd surely work as well) and editing and saving them with it for months, with
no problems at all.

I haven't tried on another machine or with Xcode 3.2 yet. Maybe it's a problem with the
Xcode project, and removing them from the project and re-adding them would fix this? No,
it doesn't help... but when you a file, Xcode asks what the encoding is. Maybe it's
confused about that? Yes!! -- Re-add them and specify correct encoding => all OK!

-------------------------------------------------------------------------------

14 June

For adding cues to parts, I need a way to change the number of measures on a multibar
rest... Oops, it can already be done via Get Info; not too obvious, but if Dur is
negative, it's the no. of measures!

-------------------------------------------------------------------------------

15 June

During MIDI playback, I recall Ngale draws the "next" page only if virtually none of
that page is in view yet; if even a tiny sliver of the page is already on the screen, it
doesn't "turn the page". This seems to be backwards! That might have made sense 15 years
ago when screens were much smaller and computers much slower, but now, Ngale should turn
the page if more than a tiny sliver is _not_ on the screen. This _should_ just be a
matter of changing the test, presumably in MIDIPlay.cp>PlaySequence(). The variables
_pageTurnTOffset_, _tBeforeTurn_, _newPage_ must have something to do with it. Ah,
_doScroll_ is the key! Scrolling is actually in HiliteSyncRect(). To be continued.

-------------------------------------------------------------------------------

28 June - 5 July

The cadenza of my Violin Concerto has two staves for the soloist, one for the viola
obbligato. I now have all the violin notes on one staff, so want to delete the 2nd staff
of the violin -- but I can't, because the only way to do that is to Split Part, then
delete the new part that contains the 2nd staff, and I can't Split Part because (the
error message says) there are notes in the default voice for the 2nd staff on the 1st
staff. Huh??

Make Ngale allow Split Part in that situation => the voice table changes from

   iVoice 1 in part 1 Role=L relVoice=1
   iVoice 2 in part 1 Role=U relVoice=2
   iVoice 3 in part 2 Role=. relVoice=1

to

   iVoice 1 in part 1 Role=. relVoice=1
   iVoice 2 in part 2 Role=. relVoice=1
   iVoice 3 in part 3 Role=. relVoice=1

This looks correct, but it's not: iVoice 2 still belongs to part 1! ...Ah, I see.

If a multistaff part has default voice(s) in use -- with notes, rests, or grace notes --
on staves other than their "native" staves, splitting requires creating a new voice for
each such voice. But if a multistaff part has _any_ voice in use on two or more staves,
splitting it would be very messy; not worth supporting, at least for the near future.
OK, but if the part doesn't have that feature and it's split, should we (1) change the
internal voice no. of the default voice in use on a non-native staff and keep iVoice
always = staff no., or (2) keep the iVoice of the voice in use and accept iVoice may not
= staff no.? Either way could be difficult. Ah, comments in VoiceTable.cp make it clear
iVoice must always = staff no.!

So the voice table for the Cadenza _must_ end up (except for the roles)

   iVoice 1 in part 1 Role=. relVoice=1
   iVoice 2 in part 2 Role=. relVoice=1
   iVoice 3 in part 3 Role=. relVoice=1
   iVoice 4 in part 1 Role=U relVoice=2

...and everything in iVoice 2 must change to iVoice 4.

But experiments aren't encouraging. This still might take a lot of work to get right --
and actually it shouldn't take long to move everything in violin voice 2 to voice 3
(after removing slurs/ties & beams); Split; and move everything in violin voice 3 back
to 2!  To be continued.

-------------------------------------------------------------------------------

9 July - 15 August

For Issue #98, it'd be great if the Tempo/Metronome Mark dialog could handle return
chars. the way the text-entry (for Graphics) dialog does.  Cf. TextDialog.cp/MyFilter
to DialogsEditor.cp/TempoFilter.

Pull a new function DrawStringBlock() out of DrawGRAPHIC().

One (of many!) problems along the way: To draw on screen, DrawStringBlock() needs the
font ID, but to draw PostScript, it needs the font name. How to get one from the other?
I don't think we have a routine to do that; how can it be done? Ah, doc->fontTable lets
you convert from one to the other, and I think _every_ font used in a score has an entry
in it! So implement FontID2Name() => OK.

OK, for Tempo objects, DrawTextBlock() now divides the tempo string at occurrences of the
"start new line" code and draws each separately -- but we also need to subdivide the string
to compute the Tempo's bounding box, and to know how far to the right to position the
M.M.! It's probably best to have DrawTEMPO() immediately convert the tempo string into
an array of single-line strings.  NB we're not doing anything like that w/ Graphics!
But they don't need such attention because (1) their embedded CRs automatically move to
the next line, and (2) they're simpler, i.e., they have nothing like the Tempo's M.M.
component.

No, that's way too messy. Instead, have TempoDialog() convert the "new line" char. to CH_CR
when it's OK'd, and vice-versa when it's opened w/ an existing tempo string => it works!

-------------------------------------------------------------------------------

28 Aug. - 1 Sept.

Why did Laurie have to change a bunch of goto's and cases in switches to get Ngale to
compile w/ Xcode 7.3? As http://www.cplusplus.com/forum/general/168196/ says: "A jump
to a labelled statement (case xxx and default are labelled statements) is not permitted
to bypass the initialisation of an object a variable." Files needing changes: About.cp,
CheckMerge.cp, DrawObject.cp, DurationPopUp.cp, FileInput.cp, NavServices.cp.
(The change she made in Menu.cp was commenting out code for a different reason.)

-------------------------------------------------------------------------------

23 - 24 Sept.

Doug McK. reports that he can't open his old files w/ Ngale 5.6, files that don't have
the proper Ngale document icon, via the Open command -- no surprise. But trying to
open them by dropping on the Ngale program icon gives

	Nightingale can't open the file.
	The file version is '

Not too helpful! It looks like this is from StopInform(370); 370 is READ_ALRT. The 2nd
line must be STR# 241 string 7, 8, or 9: all begin with "The file version is '", then
go on to say more; it's not clear why that's all StopInform() sends out. Where is that
StopInform()?

Test w/ my file "Things th MaUs Sing full p.ngl copy": sure enough, it behaves the way
Doug says. Add a LogPrintf at start of OpenError() => never prints anything! ?? Ah,
dropping files on the program icon calls FSpecOpenDocument(); it notices the file has
the wrong document type, but gives the wrong error message!

-------------------------------------------------------------------------------

12 - 13 Oct.

I want to change my violin concerto from _absolute_ C score (not even octave
transposition) to normal C score (piccolo sounds 8va above written, bass sounds 8va
below). Ngale doesn't have a "normal C score" option, but using the octave-transposed
clefs works OK for piccolo, which plays only briefly a couple of times anyway. But for
bass, while it gets rid of ledger lines below the staff for very low notes, it adds
even more ledger lines _above_ the staff for very high notes! #^)@&$*)#%1=  Of course
the standard solution for bass is to switch to tenor clef for very high notes, but Ngale
doesn't have an octave-transposed tenor clef, sigh. How hard would it be to add?

The enum for clef types, excluding PERC_CLEF, goes from highest (TREBLE8_CLEF) to lowest
(BASS8B_CLEF) in order. Want to keep the order, but adding TENOR8_CLEF would change
the code(s) for clefs after that. What about co-opting the code for baritone clef,
which is almost never used?

-------------------------------------------------------------------------------

17 - 20 Oct.

Implement Nudge (move a single selected symbol of some types with command-arrowkey) =>
wonderful when it works! But, while it works well (A) for some symbol types, it works
less well or not at all (F) for others.

* A	Text graphics
* A	Notes/rests			+ Should affect just selected notes/rests, not the entire Sync!
* A	Dynamics			+ Up/down has no effect whatever!?
						+ For hairpins, affects only the left end
* A	Tempo/metro marks
* F	Tuplets				- None of the keys has any effect
* F	Ottavas				- "  "
* F	Slurs/ties			- "  "

It'd be nice to be able to nudge tuplets, ottavas, but not worth doing now. Slurs are
more important, but we really need to nudge individual endpoints and control points -- which
is a different proposition.

-------------------------------------------------------------------------------

24-25 Oct.

Apparently the Print command sometimes -- for Doug McKenna, consistently -- generates
PostScript output instead of bitmap! How is that possible? Actually, it's not obvious
how the Print command ever prints anything! NDoPrintScore() doesn't actually print
anything, and all the Print command does explicitly is to call NDoPrintScore().

Somehow we get to DrawScoreRange(), which is called only from DrawRange(), which (for
the score proper, as opposed to Master Page) is called only from DrawPageContent().
??

-------------------------------------------------------------------------------

1 Nov.

It's worth some time on supporting tweaking slur position _somehow_, either with Get
Info or nudging. The object xd is currently always set to 0 but ignored, so I could just
make slur-drawing and -dragging code use it as an offset! -- well, not so easy; there's
also the code to drag anchor & control points. Much safer: change coordinates in each of
the anchord & control points; UI-wise and more user-friendly, this fits nudging better.

-------------------------------------------------------------------------------

14 Nov.

How about making (normal, 1-octave) ottava signs display "8va" or "8vab"? Definitely
preferable a lot of the time -- probably most of the time -- but there are cases where
just "8" is better. How hard would it be to offer a choice? It'd be very nice to have "8va"
on the "Questionable Symbols" OMR test page, anyway; just kludge it for that?

-------------------------------------------------------------------------------

15-20 Nov.

I'd like to look for differences two versions of the violin solo part of the concerto,
1st mvmt part 1, by doing text comparison of their notelists; but that's useless because
the start times are all different by 3840 bcs in one of the original files,
1stMovement_Part1-VnSolo.ngl, the 1st visible barline has time 1920, while in the other
it's the correct value 5760 bcs of the preceding multibar rest, so have 1444 diffs. in
the notelists!  Logical times are computed by SpaceTime.cp>GetSpTimeInfo(), which calls
CalcNoteLDur() ?!? -- whose comment says "for multibar rests of ANY number of
measures..., return one measure's duration"; but why?? And a vn part extracted from
1stMovement_Part1.ngl w/ Ngale 5.7b6 gives the rest the proper duration, obviously bcs
Extract() does the right thing; 1stMovement_Part1-VnSolo.ngl could have ended up w/ the
wrong value bcs of my fiddling w/ the initial multibar rest after extracting the part!

Fixing CalcNoteLDur() to handle multibar rests shouldn't be hard, but impact? Well,
multibar rests almost never occur outside of extracted parts, and changing the
calculated duration of one can't affect syncing, etc., so realllly shouldn't be a
significant problem.

OK, done; but there are still 137 differences in the notelists! *#$@$)(!#  A fair no. are
because of initial clefs on systems (since the system breaks are different). Why should
notelists include initial clefs? Surely most of the time users wouldn't care anyway, &
should be easy to skip them. Initial keysigs are already skipped, thanks to Tim C.

OK, done => down to 123 differences.

There's a 4-bar rest just before the 1st cues that should be 5 bars! => fixed.

Make tempo marks omit metronome mark when _noMM_ is set, keep multiline tempo marks on one
notelist line, etc. => down to 109 differences.

Other changes... => down to 62 differences! A lot of these are bcs of cues I added to
1stMovement_Part1-VnSolo.ngl; some due to reformatting affecting text (extensions, etc.).

More changes => down to 59 differences. !! The main problem now is starting w/ m. 137, which
-- thanks to cues in the tweaked part -- Ngale thinks has a duration of 2400 when it should
be 1920. Clearly a bug resulting from the clef change in the cues. Kludge around that =>
Ngale has the correct duration for m. 137 => only 28 differences!, and they all seem to be
legitimate.

-------------------------------------------------------------------------------

21-22 Nov.

I want to find measures that are incomplete on a given staff (as opposed to measures that are
incomplete or overfull across all staves, ala Show Duration Problems). The nicest UI by far
seems to be doing roughly what Show Duration Problems, but just shading the measure on the
relevant staff. Might as well have Show Duration Problems turn this on/off also!

Cf. DrawObject/ShadeProblemMeasure().

-------------------------------------------------------------------------------

8 Dec.

With the latest Ngale (5.7b8), Extracting the bassoon part of 3rdMovement.ngl crashes, at
the call to InitMeasure() at the end of MakeMeasure(). This looks like the same bug I ran
into in May (Issue #58).

-------------------------------------------------------------------------------

1 Jan. 2017

The "standard" notation for artificial harmonics -- as recommended in _Behind Bars_, and
as seen in the Schoenberg Violin Concerto -- involves showing the sounding pitch with a
small notehead, in parentheses, a bit to the right of the stopped/touched pitch "dyad".
It's almost impossible to fake that in Ngale now, but it'd take a lot of work to
implement properly; besides, I think it's ugly, and I haven't actually seen it used in
many published scores at all. But something to help with _some_ kind of notation
explicitly showing stopped, touched, and sounding pitches would be very nice! And of
course it should play back properly. The best such non-ugly notation I can think of is
to add to the stopped/touched dyad a small notehead, preferably in parentheses, at the
sounding pitch; the small notehead would have the regular velocity, the stopped &
touched noteheads velocity 0.

Ignoring the parentheses for now, ideas: (1) add a command to take a single note
(sounding pitch); assuming the interval between stopped and touched pitches is a 4th(?),
it adds two lower notes of same duration with velocity 0, makes the top note small, and
the middle one of the three notes diamond shape.

Or maybe (2) the command takes a 3-note chord; makes the top note small, sets the lower
notes to velocity 0, and the middle one to diamond shape. Not as nice or helpful, but
considerably easier to implement!  Cf. MakeArtificialHarmonic.txt .

-------------------------------------------------------------------------------

5 Jan.

Trying to save MIDI files of my five violin concerto files, no problem with the first
two, but then Ngale keeps either writing garbage MIDI files (though they're playable,
and recognizable as the right music) or crashing! This is with the current Ngale 5.7b8,
running "inside" Xcode. Ngale 5.7b7 does better, but not _that_ much better. ?!? From
the log file when it doesn't crash:

	...
	Jan  5 11:06:30 DonDualG5 Ngale[64320]: WARNING: Tempo change in measure 187 at same time as a previous tempo change.
	Jan  5 11:06:30 DonDualG5 Ngale[64320]: WARNING: Tempo change in measure 192 at same time as a previous tempo change.
	Jan  5 11:06:30 DonDualG5 Ngale[64320]: WriteTrackName: staff=1 name='@û'
	Jan  5 11:06:30 DonDualG5 Ngale[64320]: WriteTrackPatch: staff=1 patch=1
	...

The last messages are WriteTrackName, WriteTrackPatch, and WriteMFNotes for staff=15 name='Cello'
-- oops, it should be double bass!?! Ah, the "staff" numbers are 1 too high because they're
really track numbers; even though doesn't seem to have crashed, it didn't get to the last staff
-- and the log file continues with stuff like:

	Jan  8 14:48:19 DonDualG5 ReportCrash[37243]: Formulating crash report for process quicklookd[37241]
	Jan  8 14:48:20 DonDualG5 Dock[146]: [QL ERROR] quicklookd crashed while thumbnailing /Users/donbyrd/Documents/2ndMovement.ngl.mid
	Jan  8 14:48:20 DonDualG5 Finder[152]: [QL ERROR] quicklookd crashed while thumbnailing file://localhost/Users/donbyrd/Documents/2ndMovement.ngl.mid
	Jan  8 14:48:20 DonDualG5 com.apple.launchd[128] (com.apple.quicklook[37241]): Exited abnormally: Bus error

When Ngale does crash:

	...
	Jan  5 11:08:23 DonDualG5 Ngale[64320]: WARNING: Tempo change in measure 189 at same time as a previous tempo change.
	Jan  5 11:08:23 DonDualG5 Ngale[64320]: WARNING: Tempo change in measure 206 at same time as a previous tempo change.
	Jan  5 11:08:34 DonDualG5 ReportCrash[64364]: Formulating crash report for process quicklookd[64352]
	Jan  5 11:08:34 DonDualG5 ReportCrash[64364]: Formulating crash report for process Nightingale[64320]
	Jan  5 11:08:36 DonDualG5 Finder[28098]: [QL ERROR] quicklookd crashed while thumbnailing file://localhost/Users/donbyrd/Documents/3rdMovement.ngl.mid
	...

This suggests the problems, or at least the crashes, aren't Ngale's fault. ??

Log out & back in; try 5.7b6 on 3rdMovement.ngl => another crash, with log:

	Jan  5 11:23:00 DonDualG5 Ngale[64713]: WARNING: Tempo change in measure 189 at same time as a previous tempo change.
	Jan  5 11:23:00 DonDualG5 Ngale[64713]: WARNING: Tempo change in measure 206 at same time as a previous tempo change.
	Jan  5 11:23:06 DonDualG5 ReportCrash[64721]: Formulating crash report for process Nightingale[64713]
	Jan  5 11:23:08 DonDualG5 ReportCrash[64721]: Saved crashreport to /Users/donbyrd/Library/Logs/CrashReporter/Nightingale_2017-01-05-112300_DonDualG5.crash using uid: 502 gid: 502, euid: 502 egid: 502
	Jan  5 11:23:08 DonDualG5 com.apple.launchd[118] ([0x0-0x7a77a7].com.amns.nightingale[64713]): Exited abnormally: Bus error

I almost certainly used 5.7b7 to generate the previous set of five MIDI files, w/ no
problems; that also suggests it isn't Ngale's fault! Reboot, try again => crashes.

Copy concerto Ngale files to MacBook 3; try 3rdMovement.ngl there w/ Ngale 5.7b8 =>
crashes; w/ Ngale 5.7b6 => another garbage MIDI file, different from a previous version.
It sounds as if the garbageness is because note times are scrambled, starting within the
first few seconds. %^&()##$@)+  Listen more closely to the new garbage file => it's OK!!! 
Maybe part of the problem is w/ QuickTime on my G5 -- but that doesn't explain the
crashes. ?!?

The crash seems to happen consistently w/ 3rdMovement.ngl, less consistently w/ other
files.

28 Jan.-1 Feb.

This bug is now Issue #123. But it bug seems to be totally gone! I haven't touched the
Import MIDI File code, but I exported each of the five chunks of the violin concerto,
the 3rd mvmt twice, with no problems!! Then I did them all again, in reverse order, w/
5.7b8 => no problems. Looks like I was "chasing a ghost", which isn't hard to believe in
view of the issues mentioned above. Try again w/ 5.7b6: open all five sections; export
1stMovement_Part1.ngl => no problem; 1stMovement_Cadenza.ngl => crashes ^#$%^(#$%!*%^ .
No, it's a bug, not a ghost! Part of traceback in Problem Report:

	Thread 0 Crashed:
	0   libSystem.B.dylib             	0x969ff7c8 strlen + 8
	1   libSystem.B.dylib             	0x96a94edc __vfprintf$LDBL128 + 16332
	2   libSystem.B.dylib             	0x96ad51cc vsprintf$LDBL128 + 228
	3   com.amns.nightingale          	0x0001b414 LogPrintf(short, char const*, ...) + 80
	4   com.amns.nightingale          	0x000ce2cc SaveMIDIFile(Document*) + 2508
	5   com.amns.nightingale          	0x00009a30 DoFileMenu(short) + 844
	6   com.amns.nightingale          	0x0000bd60 DoMenu(long) + 232

W/ 5.7b8, open all five sections; export 1stMovement_Part1.ngl => crashes, w/ traceback
identical to the above except for slightly different offset in SaveMIDIFile()  :-( . From
log file:

	Jan 29 09:17:51 DonDualG5 Ngale[27919]: WARNING: Tempo change in measure 173 at same time as a previous tempo change.
	Jan 29 09:17:51 DonDualG5 Ngale[27919]: WARNING: Tempo change in measure 198 at same time as a previous tempo change.
	Jan 29 09:17:58 DonDualG5 com.apple.launchd[1] (org.postfix.master[27914]): Stray process with PGID equal to this dead job: PID 27915 PPID 1 pickup
	Jan 29 09:18:10 DonDualG5 ReportCrash[27928]: Formulating crash report for process quicklookd[27929]
	Jan 29 09:18:12 DonDualG5 ReportCrash[27928]: Formulating crash report for process Nightingale[27919]
	Jan 29 09:18:12 DonDualG5 fseventsd[42]: callback_client: ERROR: d2f_callback_rpc() => (ipc/send) timed out (268435460) for pid 27919

Hmmmm -- WriteTrackName() calls LogPrintf() w/ an unintialized variable for a string
pointer! Could that be the problem? Fix it; open all five chunks; Export MIDI Files =>
no crash, but 1stMovement_Part1 & _Part3 have the scrambled note times problem :-( .

According to our Import MIDI File, 1stMovement_Part1_TRASHED.mid contains 3812 notes, while
1stMovement_Part1_OK.mid contains 3830!! Why? On a track-by-track basis, one track has 2 more
notes in the trashed version; others have the same number, or from 1 to ca. 3 fewer. Why?
1stMovement_Part3_TRASHED.mid contains 2640 notes, while 1stMovement_Part3_OK.mid contains
2641. ??

Very few of the functions in MIDIFSave.cp that actually write to the file check FSWrite()'s
return value for errors. Add checking to all, experiment more => after saving each of the five
concerto chunk MIDI files two or three times, no more bad MIDI files, and no errors detected.
Which proves nothing.

What else could be the problem? Ah, we're using pointers to Ngale objects in places where
memory could have moved without locking the HEAP, e.g., in WriteTrackName(); that could
lead to occasional crashes or strange behavior! ...Fixed all of those. Export all five concerto
chunks, PianoSonataMvmt, 2 violin duets, concerto chunks again => all OK! -- except that
Issue #114 is back!: While patch settings properly affect MIDI playback inside Ngale,
they have no effect on MIDI files Ngale writes. ??

-------------------------------------------------------------------------------

22- Jan.

"Measure duration/timestamps too large" bug is because, in FixMeasTimeStamps(), the value of
spTimeInfo[last].startTime is sometimes too large -- but not always, and if it is, not always
by the same amount! Open CalcLDur.ngl; delete whole rest in m. 3; re-insert it => 
sometimes spTimeInfo[last].startTime = 960 (correct), sometimes it's 1140, sometimes 1200!
So it's GetSpTimeInfo() that's misbehaving... Yes. Why? Because the whole rest doesn't always
get added to the 1st Sync of the measure! This could be WAD if Insert by Position was checked,
but it isn't. @#$#%^^!*# Is this worth fixing now? Maybe not.


Re discussion of artificial harmonics above for 1 Jan., #2 is almost certainly the way to go.
Cf. MakeArtificialHarmonic.txt . For UI, how about adding to QuickChange(TM)

	Change [3-note chord] to artificial harmonic 

-------------------------------------------------------------------------------

2-3 Feb.

I _think_ the Export MIDI File crash/trash bug is fixed, but now patch changes again aren't
working! @#)#$%#))%^  I fixed this in 5.7b5 just a few months ago! Test w/ Concerto
1stMovementPart1 & 5.7b6 => OK; w/ 5.7b8 => OK; w/ MIDISave.cp of 8 Jan., of 31 Jan., of 1
Feb., of 2 Feb. AM => all OK. So either I just broke this or it's a ghost! Test w/ latest
MIDISave.cp => still OK, so it's a ghost :-| .

-------------------------------------------------------------------------------

4-20 Feb.

Work on some "inadequate screen redrawing for dragging and/or nudging" bugs:

-1. Graphics (normally text) attached to the page: dragging gives feedback by showing
the bounding box moving around, then -- when you stop -- it draws the Graphic at its new
location. Not ideal, but good enough. But for nudging, the "feedback" is redrawing the
music area, which almost never contains the Graphic: pretty dumb looking! To fix, have
InvalSelRange check if anything selected is attached to the page, and if so inval the
entire window. Also not ideal: it'd be much nicer to just Inval the page; could I
implement that quickly & reliably?

-2. "Normal" Graphics: feedback for both dragging and nudging redraws only the Measure the
Graphic belongs to, but the Graphic often extends into the previous or the following
Measure. (And it sometimes extends even further, but that's rare enough to ignore.)

-Tempo marks, ottavas, and  slur/ties: feedback for dragging sometimes redraws
enough, but for nudging and sometimes for dragging, it redraws only the Measure. ??Actually,
feedback for dragging tempos sometimes works for the next measure as well, or even the
entire part of the system to the right! ??

-A good-enough (I think) solution: In all cases(?), after dragging and after each nudge,
redraw the previous Measure as well if it's in the same system; likewise for the
following Measure.

-3. Dynamics & modifiers: feedback for dragging covers a large enough area, but doesn't erase the
previous positions, so it leaves a trail! For nudging, redrawing the previous and next
Measures (if in the same System) is good enough.

-------------------------------------------------------------------------------

13 Feb.

Work on the "Consecutive measures of rest in extracted parts aren't combined into a
multi measure rest" bug (Issue #111)

The original description of the Issue (Aug 25, 2016):

In some cases, consecutive measures of rest in extracted parts aren't combined into a
multi measure rests, and for no obvious reason, e.g., there's no change of time
signature. Examples in my Violin Concerto include 1st mvmt Part 1, piano, mm. 195-199;
3rd mvmt, trumpet, mm. 75-79. In both of these, there's a system break in the score in
the middle of the area; could that be the reason?

Another theory. In both of the above-cited cases, a tempo mark is attached to the 1st
measure that's not merged into a multi measure rest. Is that the problem? Maybe part of
the problem: deleting the tempo mark in I, m. 195 results in the extracted piano part
going one measure further! Ah, of course: we continue multibar rests only as long as the
extracted part contains _nothing_ but normal single barlines and whole measure rests.
But why does the multibar rest still stop at m. 196? Because there's an invisible tempo
mark in that measure, attached to the solo violin part, but extracted anyway! This is
probably what I had in mind all along, i.e., thsi feature Works as Designed :-) .

-------------------------------------------------------------------------------

Early March

Replace (at long last!) our ridiculous timed-loop millisecond delay function with
something that uses gettimeofday()! It's been pointed out that timing something by
comparing values of gettimeofday() can fail badly if the OS decides to update the
time in the middle, but that's pretty unlikely for timing a few seconds or less, and
that's all Ngale ever does.

-------------------------------------------------------------------------------

9-16 March

Work on AddCautionaryTimesigs(). It's not hard to decide whether and where to add a
cautionary timesig, but how to actually add it to object list? It could just call
NewMeasure(), but might be better to mimic what NewMeasure() does to prepare, e.g.,
call GetContext(); then call CreateMeasure() to add the object... Just a minute! We have
the routines Open Notelist uses, in FileInput.C! Duh.

While I'm at it, clean the Open Notelist code up a bit & rename NotelistConvert.cp to
NotelistOpen.cp. Test w/ a couple of Vn Concerto notelists => !! It says of an M list
in each "can't parse"; why?  !! Now it crashes on a couple of Vn Concerto notelists (3rd
mvmt & one other; I'm not sure if they're the same ones). @%(@($@!)(  Try 3rd mvmt w/
last 5.7b10 (of 6 March) => same result. W/ 5.6 => no crash, but an error message that
system is too tall for the page, & score is unreadable; w/ 5.7b4 => no error message &
score looks fine; w5.7b7 => crashes. Back to 5.7b4 => it now crashes! So this almost
certainly isn't a ghost, but something random, maybe bcs of an uninitialized variable.
Okay; be sure several possible uninits are inited => says "Arranging measures into
systems", then crashes in the call to InitMeasure() in MakeMeasure(). Traceback:
	MakeMeasure called from
	CreateSystem called from
	RfmtSystems called from
	Reformat called from
	PositionWholeMeasures

. If it crashed really trying to call InitMeasure(),
maybe aPrevMeasL is null bcs... Ah, prevMeasL=0; that sure could explain it! In fact,
some code in MakeMeasure() checks if prevMeasL is NILINK or not and takes action in
each case, but the call to InitMeasure() and preceding lines assumes it's non-NILINK.
Fix that => seems OK, no crash!

-------------------------------------------------------------------------------

16 March

Switch from G5 to my old MacBook "3"; do more cleanup. Open 3rd mvmt notelist via Ngale
menu command => OK; via drop on Ngale icon => OK. Which proves nothing! But open 2nd
mvmt notelist via menu cmd =>

	can't parse the Notelist file.
	Problem in line 8394: "M stf=10 'L'istesso tempo...'
	"
	Miscellanous error.

This is almost certainly unrelated to the previous problem, and it's very probably
caused by the embedded "'" in the tempo mark.

-------------------------------------------------------------------------------

6-11 April

Finally implement the Add Cautionary Time Sigs command!, and Undo for it. It all seems
to work, except for handling cases where every staff doesn't have the same time sig., or
maybe doesn't have a time sig. at all. An extreme case: at the end of a system, all
staves are in 3/4; at the beginning of the next, some change to 6/8, some to 12/16, some
don't change at all.

-------------------------------------------------------------------------------

12 April

#Issue #73: Many of Ngale's own routines that sound like QuickDraw or something else
from Apple.To reduce confusion, rename them. Specifically, rename:

HiliteRect, GetPortTxFont, GetPortTxFace, GetPortTxSize, GetPortTxMode; SetFont
and SamePoint

...to (e.g.)

NHiliteRect, NGetPortTxFont, NGetPortTxFace, NGetPortTxSize, NGetPortTxMode, NSetFont,
NSamePoint.

There are more candidates for name changes in Utility.cp. But NB there are _lots_ of
calls to some of these, so may take awhile to change all!

-------------------------------------------------------------------------------

24-28 April

Last Sept., Laurie Spiegel had Ngale compiling with Xcode 7.3 & a recent mac OS; can I?

Try w/ Xcode 8.2.x on OS 10.12 => needs the OS 10.4 (or 10.4u?) SDK. Get it from Laurie;
quit Xcode, put the 10.4u SDK in the Xcode/Contents/Developer/...Developer/SDKs folder;
restart Xcode & open the Ngale project => Xcode doesn't seem to know the 10.4u SDK is
there, sigh. Try the same thing w/ Xcode 5.1.1 on OS 10.8.5 => Xcode lets me choose the
10.4 SDK; do so; Clean => says "unsupported compiler GCC 4.0". Not surprising! The only
other choice appears to be the default compiler, Apple LLVM 5.1; Clean => OK; Build =>
"error: unable to create target: 'No available targets are compatible with this triple,
see -version for the available targets.'" What triple?? And see "--version" in WHAT? I
suppose the compiler itself, but...

The next day, results are slightly different!? Both Clean and Build fail with 162
issues, all fatal. The list of fatal errors is preceded by

  Target Integrity
    Invalid C/C++ compiler in target Nightingale: 4.0

The first fatal error is

  Dependency Analysis Error
    Unsupported compiler '4.0' selected for architecture 'ppc'

The others are all

  Dependency Analysis Error
  Unable to determine concrete GCC compiler for file /Users/donbyrd/NgaleDev/...XXX

where the 160 XXX's are the 160 source files.

This website has instructions for installing gcc 4.2.1 on OS 10.8, and says it works:

       https://www.cyberciti.biz/faq/howto-apple-mac-os-x-install-gcc-compiler/

-- though NB their demo of it working is via command line, not Xcode! They show
the output from _gcc --version_ as showing the gcc version, duh. But when I say
_gcc --version_, I get

 Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
 Apple LLVM version 5.1 (clang-503.0.40) (based on LLVM 3.4svn)
 Target: x86_64-apple-darwin12.6.0
 Thread model: posix

Pretty obscure, but very likely the _gxx-include-dir_ path ending with 4.2.1 is just an
exceptionally user-unfriendly way to say version 4.2.1! So I already have it installed,
and maybe all I need to do is to tell Xcode to use it -- but the only choice besides
"Unsupported Compiler (4.0)" is "Default Compiler (LLVM 5.1)". Now what?? Now I say
this isn't worth the trouble! Michel S. said he wanted to try compiling Ngale with a
recent version of Xcode; more power to him.

-------------------------------------------------------------------------------

May 2, 2017

Hi Don,

I just got off a week of on-call and traveling for work, so I've not tried this -- but
found this interesting article:

https://www.cocoawithlove.com/blog/porting-from-macos8-to-sierra.html#conclusion

someone ported an old MacOS 8.x app to run on Sierra, still using Carbon -- it does
require having the 10.6 SDK.

-- 
Michel

Michel Alexandre Salim
profile:    https://keybase.io/michel_slm
GPG key ID: 4AF554ABA36A937A

-------------------------------------------------------------------------------

6 May ff.

Need to get the Ngale 5.7 codebase from the develop into the master branch! ??

...done; also, created branch develop5p8 ...

-------------------------------------------------------------------------------

10 May-7 June

To facilitate adding cues to extracted parts, how about a "Paste as Cue" command? It
should:
(1) put up a dialog to get voice no. n & cue note velocity v, & text of a Graphic to
display at beginning of the cue (presumably name of the instrument the cue is of);
(2) Paste Merge notes/rests _only_ from the clipboard into voice n;
(3) set notes/rest size to small, and note velocity to v; and
(4) attach the text Graphic to the 1st note (or rest? ??CF. GOULD!).

Step 3 might be difficult: the operation shouldn't affect the clipboard, so it must be
done either while the merge is in progress or afterwards. While the merge is in progress
there could be tricky problems with heaps, so best to do afterwards, but then how to
tell what objects/subobjects came from the clipboard? We're using the object-level
<spareFlag> to mark all objects from the clipboard. So after the merge, we can distinguish
notes/rests in Syncs w/ <spareFlag> set by voice or by their <merged> flags.

Hmmm. It seems that Paste Merge and Paste as Cue always go into voice 1, regardless of
the Looked at voice! I'm almost certain that Paste Merge used to do this correctly. ??

-------------------------------------------------------------------------------

8 - 13 June

Paste Merge and Paste as Cue _do_ seem to handle the Looked at voice correctly; the
apparent problem resulted from an anomaly in handling doc->lookVoice. Fixed.

Back to Paste as Cue. How to keep it from copying objects of all types into the score?
Try letting it copy everything, then delete undesired objects. Write ThinNonSyncObjects,
which calls DeleteNode() for objs of undesired types; call it from CleanupMerge => seems
to work okay, but if a dynamic was copied in, then removed, the dynamic context is left
in inconsistent state. Could fix that, presumably w/ FixContextForDynamic(), but anyway,
it'd be safer to avoid copying them in in the 1st place. Looks like non-Sync nodes are
handled via a "temporary object list"; see comment in MRearrangeAll()...

-------------------------------------------------------------------------------

16-20 June

It'd be really nice to record "permanently" if a note is a cue note, so (at a minimum)
Ngale knows how to play it appropriately -- the obvious thing being to play it at a
fixed velocity for cues. Is there a bit in ANOTE to record it, a bit that's guaranteed
to be initialized? Yes! There are several possibilities, e.g., the high order bit in
all three MIDI values, <rspIgnore>, and a bit in micropitch. The change should be low
impact, but should really display it in Get Info -- read only? -- and in Browser.
Decision: take the high-order bit of micropitch.

Work on Issue #142, undesirable change of stem directions on transposing notes in
multivoice situations. Tricky aspect: How far does the "situation" extend in each
direction from a Sync w/ multiple voices on the staff? Maybe just decide a measure
at a time. Also, must change ystem of MainNote as well as yd's of notes.

-------------------------------------------------------------------------------

22-27 June

Back to Paste as Cue. Non-Sync nodes are indeed handled via a temporary object list,
but only those from the score, not the clipboard! Nodes from the clipboard are moved
into the main object list by calls to RelocateClObjs and RelocateClGenlJDObjs in
MRearrangeAll. Is it as simple as skipping those calls to get only Syncs from the
clipboard? No: we also need slur/ties, tuplets, ottavas, and (probably) clefs in
the clipboard! Oh well; it really doesn't look hard to keep those and skip everything
else.

So in MRearrangeAll, must _always_ call RelocateClObjs and RelocateClGenlJDObjs,
passing the <syncsOnly> flag to them.

-------------------------------------------------------------------------------

29 June-1 July

For Paste as Cue, in MRearrangeAll, _always_ call RelocateClObjs and
RelocateClGenlJDObjs, passing the <syncsOnly> flag to them => done. ?! RelocateClObjs
and RelocateClGenlJDObjs have "break" statements where it realllly looks like they
should have "continue"s! As written, their _for_ loops are going to quit prematurely,
no?

Test to test Paste as Cue w/ all object types; cf. the objTable[], def'd in vars.h ??

-------------------------------------------------------------------------------

18 July

I give up on Paste as Cue, at least for the time being. I think it's almost working,
but have to do other things for the Concerto. So just pull the menu command out of
the menu and processing in Menu.cp... ??

-------------------------------------------------------------------------------

14 Aug.

Following up comments of 1 Jan., another idea for artificial harmonics: (3) take a chord
of three notes, meaning the obvious, as input. Do the same things as in idea #2, but
also move the top note into another voice and give it stem length 0! But is any version
of displaying artificial harmonics as such important enough to bother with? No, unless
Madalyn thinks it's important!

-------------------------------------------------------------------------------

23 Aug. - 15 Sept.

I need better tools for consistency checking of massaged parts against the score!
Ideas:
	+ Have Score Info display the score duration in ticks as well as measures & beats.
		This would allow directly comparing info on the score to info on any part.

For checks other than total duration, the easiest way is surely by comparing a NON-
massaged newly-extracted part to the massaged one, but how?

	+ Have Score Info optionally write its info to the log file, to facilitate
		doing text comparisons on the info from two scores
	+ Add a "skeleton" option to Save Notelist that writes out only general info:
		definitely time signatures and Measures; maybe tempo/MMs -- but the latter
		will be far more useful (i.e., far less confusing) if they always appear in
		the same place relative to their barlines.
	+ Make notelists more consistent to facilitate doing text comparisons on the
		info from two scores. Important: make tempo/MMs attached to barlines always
		appear in the same place relative to the barlines! Currently it's different
		for tempo/MMs attached to systems' initial (invisible) barlines from tempo/MMs
		attached to other barlines.

Actually, if a system ends with a barline -- say, measureNum = 8 (usually displayed
as 9) -- and it's not the last system in the score, then there are _two_ Measure objects
w/ measureNum 8: that one and the one w/ invisible barline at the beginning of the next
system! And a Tempo/MM attached to the invisible barline is in the object list
before its Measure, as always; it's just that the visible measureNum 8 is the one
that goes into the notelist, not the following and invisible one! How about just changing
that? In that case, we're not exactly "Sav[ing] Selection Notelist", but I don't think
anyone will notice... especially since probably noone but me is using notelists :-) .

-------------------------------------------------------------------------------

30 Sept. - 4 Oct.

To fit Nightingale conventions better and enhance code readability, use "True" and
"False" for Boolean constants. First, change all "TRUE" to "True" and all "FALSE" to
"False" => CarbonStubs.cp gets 6-11 compilation errors!? Everywhere else in Ngale, True
and False are defined, but I can't find the #defines; here they're _not_ defined, but I
can't see what the difference is! Anyway, at least for now, just #define them in
CarbonStubs.cp.

Stop the presses! application.h #define's them unless they're already #define'd.
(NB: chooseCharLDEF.h is pretty useless; clean it up!)

Now, change all "true" to "True" and all "false" to "False"...

-------------------------------------------------------------------------------

2-4 Oct.

According to BBEdit, a number of C files still have encodings other than UTF-8, mostly
ISO Latin-1. This could cause problems, e.g., with compiled-in non-ASCII chars., so
they should be converted to UTF-8:
+ CarbonStubs, Double, DrawUtils
+ About, ChordSym, MIDIFOCmd, UIFUtils

The vast majority of .h's seem to be in ISO Latin-1, etc., not UTF-8; these should also
be converted, but it's less likely to cause problems.

-------------------------------------------------------------------------------

27 Oct.

In DanceNotesDontPlayBug.ngl, play from start of m. 7 or earlier => the notes on the 3rd
eighth usually sound for a _very_ short time or not at all! Very occasionally they
sound for the correct duration. They're the same pitches as the notes on the 2nd eighth,
but with voices swapped. Play duration of notes on the 2nd eighth is 95% of written (228
ticks); shorten them to 83% (199 ticks) or less => all is well!  But it's not at all
clear what's causing this, and I suspect it won't be easy to track down or fix. TBC; put
it aside for now.

-------------------------------------------------------------------------------

31 Oct. - 8 Nov.

Open RespellAndTransp_2Voice.ngl, select all, transpose up 1 octave => the stem endpoints
are just where they used to be, so down stems are now way too long and up stems way too
short. This bug was introduced in 5.8b1; comment on the change is: "Partly fixed bug: When
notes are transposed or respelled, we always 'normalize' the new notation according to the
standard one-voice notation rules even if there are two voices on the staff." It's very
likely in FixVoiceForPitchChange(): the comment "In multivoice (>=2 voices on the staff)
notation, don't change stem direction, but preserve stem length" is immediately followed
by <return>, so it _doesn't_ preserve stem length. BUT preserving stem length isn't
right either! For unbeamed notes, probably call CalcYStem() with the current stem dir;
for beamed notes, probably just unbeam and rebeam... Actually, CalcYStem seems to handle
beamed notes too!

W/ Cadenza2VoiceTranspTest.ngl, sel. notes on last beat, respell => notes in voice 2 are
unchanged, so notation should be unchanged -- but they end up upstemmed. The cause:
FixBeamsInRange() rebeams all selected notes; it doesn't know they're unchanged, and it
knows nothing at all about multivoice notation!

FixBeamsInRange just calls Rebeam(doc, beamL); Rebeam calls

	CreateBEAMSET(doc, firstSyncL, RightLINK(lastSyncL), voice,
					nInBeam, False, doc->voiceTab[voice].voiceRole);

But the voiceRole recorded in the voice table is just the voice's _current_ role; it's
only weakly correlated with the role played by the notes in a given beamed group! Rebeam
should probably check if the beam's notes are involved in multivoice notation, and if
so, preserve the stem direction; likewise for unbeamed notes/chrds => done. Except
what does "involved in..." mean? The "neighborhood" matters too, especially for unbeamed
notes/chords; consider at least adjacent notes/chords on the staff => ??

And what if they _aren't_ involved in multivoice notation? Currently we use the
voiceRole, but again, that's only weakly correlated with the note(s)' role. Would it be
better to use single-voice rules? Probably, but maybe put that off for now??

-------------------------------------------------------------------------------

10 - 12 Nov.

GitHub comment on Issue #57 says "HiliteAttPoints() is used for double clicks on
Graphics, Syncs, Ottavas, and hairpin Dynamics: of these, currently only hairpin
Dynamics have two attachment points. It works for the one attachment point of Graphics
(bringing up a dialog), but does nothing visible for Syncs, Ottavas, and hairpin
Dynamics (which don't bring up a dialog)! Its failure is no problem for Syncs (which
can't be attached to anything anyway) and Ottavas, but for hairpin Dynamics, it means
the user has no indication that they're inserting the hairpin on the wrong staff (one
adjacent to the intended one)." Actually, hiliting works on Tempo/MMs and chord symbols
as well as Graphics, all of which bring up a dialog! So, regardless of implementation
details, the hilite lines show up if and only if there's a dialog on the screen; why?

In CheckTEMPO() calls HiliteInsertNode before putting its dialog up and after taking
it down. Comment out both => no hiliting appears, as expected.  Comment out only the 2nd
=> hiliting appears and disappears on alternate double-clicks, as expected. Add the
obvious code to hilite/unhilite hairpins => OK!

Status (for double-clicking):

Symbol					before	after
-------------------------------------
Sync (note or rest)		n		n
Dynamic, hairpin		n		Y		<-- Better.
Dynamic, other			Y		Y
Graphic, text			Y		Y
Graphic, chord symbol	Y		Y
Ottava					n		n
Slur					n		n
Tuplet					Y		Y
Tempo/MM				Y		Y
Ending					Y		Y

-------------------------------------------------------------------------------

What about feedback on inserting symbols?

Status (for insertion):

Symbol					now
-------------------------------------
Sync (note or rest)		Y
Dynamic, hairpin		1st pt.		
Dynamic, other			Y
Graphic, text			Y
Graphic, chord symbol	Y
Ottava					n
Slur					1st pt.
Tuplet					n
Tempo/MM				Y
Ending					Y, both pts.!

So we _do_ have code still gives proper feedback on insertion! ??

-------------------------------------------------------------------------------

13 Nov.

Minor cleanup: made voice role constants (now called VCROLE_xxx) independent of
Multivoice dialog item numbers, etc. Affects Check, Multivoice, and a bunch of other
files. Oops: it seems to handle Upper & Lower roles correctly, but not Single or
Cross-staff! Ah, a tiny mistake in the Multivoice dialog handler... Done.

-------------------------------------------------------------------------------

14 - 16 Nov.

For the last few days, I've been getting these messages from Debug Check while working
on All You Need Is Love:

--CHECK MASTER: sysR.right=9568, ESWidth=64, margR.right=594
 Done.    --CHECK CLIPBOARD: *DCheckNode: SYSTEM L4 RECT PAST RIGHT MARGIN (580 vs. 567).
sysR.right=9280, ESWidth=64, margR.right=567

Where does the "right margin" come from? Close the score, open a New score, do
Debug Check => the same messages, so it seems to have nothing to do with the
currently-open score. The rects being compared are d2pt(pSystem->systemRect.right)
and doc->marginRect.right, so it _is_ coming from the score! ??

Quit Ngale, re-launch, New, Debug Check =>

	DEBUG 'Menu'-Standard: --CHECK MAIN:
	sysR.right=9136, ESWidth=64, margR.right=567
	Discont. sel, 0 objs in range, 0 sel, 10 total.  0 voices.
	--CHECK MASTER: sysR.right=9072, ESWidth=64, margR.right=567
	 Done.    --CHECK CLIPBOARD: sysR.right=9136, ESWidth=64, margR.right=567

...no complaint. Open "All You Need Is Love", Debug Check =>

	--CHECK MASTER: sysR.right=9280=580 pt, ESWidth=64, margR.right=576
	 Done.    --CHECK CLIPBOARD: sysR.right=9136=571 pt, ESWidth=64, margR.right=567

...still no complaint. But do a Copy, Debug Check =>

	--CHECK MASTER: sysR.right=9280=580 pt, ESWidth=64, margR.right=576
	 Done.    --CHECK CLIPBOARD: *DCheckNode: SYSTEM L4 RECT EXTENDS INTO RIGHT MARGIN (580 vs. 567).
	sysR.right=9280=580 pt, ESWidth=64, margR.right=567

The expression for checking systemRect.right has always involved subtracting
ExtraSysWidth(doc) , the width of the widest barline (final double). In Oct. 2015, I
kludged that by subtracting 2*ExtraSysWidth(doc) to sidestep the problem, but that's not
enough for the Clipboard after a Copy operation in All You Need Is Love, presumably bcs
its right margin is 0.50" instead of the default 0.63", so systemRect.right is
larger, but marginRect.right is unchanged. What should this be?

We're obviously comparing a systemRect from the main object list that's been copied to
the clipboard to one from the clipboard! But this complaint is about soomething very
unimportant; just skip this check on the clipboard => OK. (And likewise for "SYSTEM RECT
BELOW BOTTOM MARGIN".)

-------------------------------------------------------------------------------

25 - 26 Nov.

New, insert text Graphic, double-click it, do anything to enlarge it => only the area it
formerly occupied is redrawn. The same thing happens with tempo marks and dynamics. Why?

In CheckGRAPHIC(), at end of case SMDblClick, add

	InvalObject(doc, pL, True)
	
=> no change. That's strange, since InvalObject ends with

		if (doErase)	EraseAndInval(&r);

...and True = doErase. But it looks like the call to InvalObject happens before we call
DrawGRAPHIC and get the new, enlarged bbox:

Nov 27 10:33:35 DonDualG5 Ngale[74259]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 10:33:35 DonDualG5 Ngale[74259]: DrawGRAPHIC>GetGraphicDBox: doDraw=0 pDBox=-128,0,32,240
Nov 27 10:33:35 DonDualG5 Ngale[74259]: InvalObject: r=123,169,138,192 doErase=0
Nov 27 10:33:35 DonDualG5 Ngale[74259]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 10:33:35 DonDualG5 Ngale[74259]: DrawGRAPHIC>GetGraphicDBox: doDraw=1 pDBox=-128,0,32,240
Nov 27 10:33:51 DonDualG5 Ngale[74259]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 10:33:51 DonDualG5 Ngale[74259]: DrawGRAPHIC>GetGraphicDBox: doDraw=0 pDBox=-128,0,32,240
Nov 27 10:33:51 DonDualG5 Ngale[74259]: InvalObject: r=123,169,138,192 doErase=1
Nov 27 10:33:51 DonDualG5 Ngale[74259]: TextDialog: *expanded=0 theExpanded=0
Nov 27 10:34:24 DonDualG5 Ngale[74259]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 10:34:24 DonDualG5 Ngale[74259]: DrawGRAPHIC>GetGraphicDBox: doDraw=0 pDBox=-128,0,32,240
Nov 27 10:34:24 DonDualG5 Ngale[74259]: InvalObject: r=123,169,138,192 doErase=1
Nov 27 10:34:25 DonDualG5 Ngale[74259]: GetGraphicDBox: pDBox=-128,0,32,768
Nov 27 10:34:25 DonDualG5 Ngale[74259]: DrawGRAPHIC>GetGraphicDBox: doDraw=1 pDBox=-128,0,32,768

Wrong. InvalObject itself calls DrawGRAPHIC, which call GetGraphicDBox, but GetGraphicDBox
still returns the old bbox. Why?

Nov 27 13:10:01 DonDualG5 com.apple.launchd[1] (org.postfix.master[76341]): Stray process with PGID equal to this dead job: PID 76343 PPID 1 qmgr
Nov 27 13:10:06 DonDualG5 Ngale[76329]: CheckGRAPHIC: <InvalObject 1
Nov 27 13:10:06 DonDualG5 Ngale[76329]: GetGraphicDBox: count lines=1 fontID, Size, Style=20, 9, 0 str='asdf'
Nov 27 13:10:06 DonDualG5 Ngale[76329]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 13:10:06 DonDualG5 Ngale[76329]: DrawGRAPHIC>GetGraphicDBox: doDraw=0 pDBox=-128,0,32,240
Nov 27 13:10:06 DonDualG5 Ngale[76329]: InvalObject: r=120,169,135,192 doErase=1
Nov 27 13:10:06 DonDualG5 Ngale[76329]: TextDialog: *expanded=0 theExpanded=0

Double-click, lengthen string =>

Nov 27 13:10:21 DonDualG5 Ngale[76329]: CheckGRAPHIC: <InvalObject 2
Nov 27 13:10:21 DonDualG5 Ngale[76329]: GetGraphicDBox: count lines=1 fontID, Size, Style=20, 9, 0 str='asdf'
Nov 27 13:10:21 DonDualG5 Ngale[76329]: GetGraphicDBox: pDBox=-128,0,32,240
Nov 27 13:10:21 DonDualG5 Ngale[76329]: DrawGRAPHIC>GetGraphicDBox: doDraw=0 pDBox=-128,0,32,240
Nov 27 13:10:21 DonDualG5 Ngale[76329]: InvalObject: r=120,169,135,192 doErase=1
Nov 27 13:10:21 DonDualG5 Ngale[76329]: GetGraphicDBox: count lines=1 fontID, Size, Style=20, 9, 0 str='asdfXXXXX'
Nov 27 13:10:21 DonDualG5 Ngale[76329]: GetGraphicDBox: pDBox=-128,0,32,768
Nov 27 13:10:21 DonDualG5 Ngale[76329]: DrawGRAPHIC>GetGraphicDBox: doDraw=1 pDBox=-128,0,32,768

No, right! InvalObject calls DrawGRAPHIC, which call GetGraphicDBox, which returns the old bbox;
then _somebody_ calls DrawGRAPHIC and gets the new, enlarged bbox, but it's too late. ??

To Be Continued.

-------------------------------------------------------------------------------

3 - 5 Dec.

Issue #163: The current version of my arrangement of All You Need Is Love, on four
staves in one group, has a repeat bar that should just be a double barline. However,
setting the type to double barline with the QuickChange command affects only two staves;
it should affect the entire group. This is especially serious because there's no way to
fix this with Get Info.

Cause: SetMeasType() correctly operates only on Measure subobjects that are selected,
but clicking anywhere on the barline in question selects only staves 1 and 3. This is
a bug in CheckMEASURE(), case SMClick:

 * Measure subobjects are unusual in that they may be grouped as indicated by
 * connAbove and connStaff, and groups can only be selected as a whole. If this
 * measure is the top one of a group, set rSub and groupTopStf/groupBottomStf
 * to include the entire group; if it's a lower one of a group, they will then
 * already be set correctly. Notice that this code assumes that when a lower
 * subobject of a group is encountered, we've already set rSub from the top one
 * of the group; this is safe as long as we insert subobjects for all staves at
 * once and in order (FIXME: this is questionable -- check it!), and don't
 * allow deleting anything but the entire object.

That assumption isn't just questionable, it's wrong! But CheckMEASURE() does a lot of
different things and the code is a mess, so it's difficult to undo properly. Well, find
the visible staves in the group 1st and operate on all and only those => W%^)(#%$% just
inserting a barline crashes in CheckMEASURE for a different case! But it shouldn't be
hard to avoid impacting any case other than SMClick by using my new utility routines
GetStaffGroupBounds() and GetMeasureVisStaffBounds()... Done!

-------------------------------------------------------------------------------

6 - 7 Dec.

With the latest, New, insert chord symbol => log message "GetGraphicDBox failed. pL=10" and
nothing is drawn. Open file containing chord symbol => it's not drawn. With 5.8b4, no
problem. Huh?

With either version, an apparently-correct Graphic of subtype GRChordSym is added to the
object list. Ah, but the code in GetGraphicDBox, case GRChordSym:

			return False;									/* Handled by DrawChordSym */

So it shouldn't even be getting called! But how has this ever worked?? I see; until very
recently, the return False was ignored; everything for chord symbols is handled by
DrawChordSym! Not wonderful. But by far the easiest acceptable fix is to really skip
calling GetGraphicDBox for chord symbols, _and_ add a comment to explain => done.

-------------------------------------------------------------------------------

22 - 25 Jan. 2018

I've been thinking for a long time that Carbon-based applications can't work past OS
10.6, but that's dumb: It's obvious now (from statements by Michel Salim and many
others) they work fine all the way thru OS 10.12; it's just PowerPC apps, like all
versions of Nightingale to date, that croak at 10.7! Xcode 2.5 & 3.2 both claim to be
able to compile to i386 code, and on both, the SDK I'm using is "MacOSX10.4u.sdk" -- "u"
presumably meaning "Universal". So:

In the Ngale project in Xcode 2.5 (on my G5), for Configuration "Release", select both
PPC and i386; clean and build => Nope, result is still PPC only. Select only i386 =>
still PPC only. Quit Xcode, re-launch, compile for only i386 again => still PPC only!

In the Ngale project in Xcode 3.2 (on my MacBook Air), for Configuration "Release",
select "Standard (32/64-bit Universal", clean & build => still PPC only! #^**)E%$()_* .
Select "Native Architecture of Build Machine" (it'a an Intel Core 2 Duo) => STILL PPC
only!!??

From http://www.cocoabuilder.com/archive/xcode :
	
	"When I upgraded from Xcode 3.2.3 to 3.2.6, Xcode "erased" my universal build
	settings, as many of you probably know or experienced. I've tried to restore them
	with some info found on the web, but what I've wound up with is builds that are
	universal, but do not actually run in 64 bit mode. Can someone please tell me
	precisely what the correct build settings should be? This is what I have:
	
	Architectures: i386 ppc
	Base SDK: Current Mac OS  (** now on SL)
	Valid Architectures: x86_64 i386 ppc ppc7400 ppc970
	Mac OS X 10.5:  x86_64 i386 ppc64
	
	Compiler Version: GCC 4.2
	Mac OS X Deployment Target: Mac OS X 10.4
	
	"Note that I created an additional "valid architecture" at one point, because I need
	to weak link some frameworks for 10.5+ It must run on OS X 10.4"

It's not clear if this helps. What's the relationship between "Architectures" and "Valid
Architectures" and what Xcode does? According to the Xcode Build Setting Reference, Xcode
intersects the two lists and that's what it actually builds for. Okay, but Xcode's Get
Info for Nightingale.xcodeproj, "All Settings", dosn't even show Valid Architectures!
But they're probably in the xcodeproj in an intelligible form? Yes! project.pbxproj is in
a JSON-like format; its XCBuildConfiguration section shows Debug and Release configs --
in fact, two of each! And of the two Release configs, the 2nd has 

				ARCHS = (
					i386,
					ppc,
				);

...which agrees with what Get Info shows; but the 1st just has ARCHS = ppc. Also, the
1st has VALID_ARCHS = "i386 ppc"; the 2nd doesn't have a VALID_ARCHS. Maybe Xcode is
paying attention to the 1st? Try hand editing its ARCHS to the same as the 2nd; clean;
build => it says it's compiling 320 source files, about twice the usual number!! Yay!!
And, sure enough, it builds a Universal app, one that runs on my OS 10.8.x Intel MacBook
-- sort of. It's still unusable with Intel processors so far, probably because of Endian
issues. It gives 11 CNFG errors:

	Checking CNFG:  err #1, err #36, err #36, err #46, err #47, err #62, err #65,
		err #68, err #78, err #79, err #84, TOTAL OF 11 ERROR(S) FOUND.

...and doesn't even seem to be able to draw a staff! ??

-------------------------------------------------------------------------------

26 - 31 Jan.

On my MacBook Air: Try the Endian approach to Ngale's problems on Intel processors,
which are little Endian: use  Michel Salim's nice FIX_END macro, in EndianUtils.h. New
function EndianFixConfig() calls FIX_END for ca. 40 config fields => all config fields
are (I think) OK! -- but when I quit, Ngale always thinks the config has changed and
writes it out in little Endian form :-( . Add call to EndianFixConfig() in
UpdatePrefsFile() => that's OK too.

Next problem: click "New Nightingale File" => error message in BuildCharRectCache():
"Can't scale the music font: reference symbol has height zero." In fact, for
the reference char, the bbox.bottom = bbox.top = 0! From the system log:

	Ngale[47090]: Music font is 'Sonata' (font no. 242).  (InitDocMusicFont)
	coreaudiod[196]: Disabled automatic stack shots because audio IO is active
	Ngale[47090]: Music font is 'Sonata' (font no. 242).  (InitDocMusicFont)
	Ngale[47090]: ATS: Invalid FontObjectID (3) - only low 16 bits are being passed in.
	Ngale[47090]: fontNum=242 refCode=38 bbox[].bottom=0 .top=0.  (BuildCharRectCache)

"ATS: Invalid FontObjectID (3)" sounds bad; could be a symptom of the problem.

On my OS 10.11.x Mac mini, launch the latest => says "Can't create a Nightingale Prefs
file"! Try again => this time it creates one!; "New Nightingale File" => the same
error message, this time for Briard.

-------------------------------------------------------------------------------

1 - 5 Feb.

On my OS 10.6 MacBook 3: The PowerPC build works fine, as expected.  The Intel build
fails in exactly the same ways as on MacBook Air.

BuildCharRectCache() gets the ref. symbol's bbox from InitMusFontTables() -- which gets
font info directly from a resource, so is vulnerable to endian problems. Add some calls
to FIX_END => no complaints from BuildCharRectCache(), and Ngale displays clefs, time
sigs., notes, & rests correctly!, except (a) no flags, & selection hiliting for most
symbols is a bit too low. Also, in a New score, the only staff line visible is the bottom
line of the lower staff -- but there's some mysterious heavily strrrretched out stuff,
very likely supposed to be the other staff lines! Add staff below => It's fine in both
regular & Master Page; add staff above => likewise. ??
Do I need more calls to FIX_END? Probably :-| . TO BE CONTINUED.

Possibly related: the palette on both computers is blank, though it behaves correctly,
i.e., hiliting clicked-on squares, changing the cursor, and causing subsequent clicks
in the score to do the right thing. DrawToolMenu() does the drawing, assuming an
image of the palette is in global _palPort_ where SetupToolPalette() puts it. But is
it really ever getting into palPort?? How can I tell??? Well, I can compare the port
bitmaps on Intel (where it isn't drawn) to PowerPC (where it is) -- e.g., crudely via
counting the no. of set bits in each. Write MemBitCount() => ??
MemBitCount(blah, 300) on PPC: 369, then 380(?)
"	"	"	" on Intel: 353, then 364: different, but not by nearly enuf to explain
the difference between a blank palette and a correct one!?! Of course 300 bytes is
nowhere near the size of the bitmap,which should be the same as the portRect: roughly
(399*271)/8 = 13500. What about the port bitmap Rect? On PPC:

	DrawToolMenu: ...portRect tlbr=0,0,399,271
	
but on Intel (MBAir):

	DrawToolMenu: ...portRect tlbr=0,0,399,-1073750488
	
!! So why is portRect.Right garbage on Intel??

!! After some bizarre behavior from LogPrintf and finagling w/ calls to it, I get this
on both PPC _and_ Intel:

	SetupToolPalette: MemBitCount(palPortBits, -)=262 portRect tlbr=0,0,399,271
	DrawToolMenu: MemBitCount(palPortBits, -)=262 portRect tlbr=0,0,399,271	

-- exactly the same on both, and all reasonable values now! Now what??

For 400 bytes:
on PPC, MemBitCount from SetupToolPalette = 262, from DrawToolMenu = 262
on Intel, MemBitCount from SetupToolPalette = 388, from DrawToolMenu = 388

For 600 bytes:
on PPC, MemBitCount from SetupToolPalette = 427 or 412, from DrawToolMenu = 427 or 412
on Intel, MemBitCount from SetupToolPalette = 546 or 572, from DrawToolMenu = 546 or 572

-------------------------------------------------------------------------------

7 Feb.

Back to the "in a New score, the only staff line visible is the bottom line of the lower
staff -- but there's some mysterious heavily strrrretched-out stuff, very likely
supposed to be the other staff lines" bug: actually, the strrrretched-out stuff is the
Connect! Which is a curly brace read from a resource, so it's vulnerable to the Endian
problem. Skip DrawCONNECT => yep: strrrretched-out stuff disappears, and all staff lines
appear! Put DrawCONNECT back, add FIX_END()'s => yep: Connect appears!

DrawToolPalette: MemBitCount(palPortBits, 600)=427 portRect tlbr=0,0,399,271
Feb 17 09:59:14 DonDualG5 Ngale[33188]: d. SizeMenu: charHt=26 charWid=24 numRows=3 numColumns=9
10 - 14 Feb.

Everything from any call to GetResource(), Get1Resource, etc.,  could be vulnerable to
the Endian problem, except (I think!) for Apple-defined resources like 'DITL', 'PAT ',
'PICT', 'STR#', 'TEXT'. Specifically, all multibyte fields containing numbers in:

+Config
+MIDI ModNR table
+-PaletteGlobals
-spaceMap (doc specific)
-??

Need to go thru _all_ the calls in Ngale! See list in QGetResourceQ.txt .

GitHub Issues 171 & 172 are probably both Endian-related:

When you launch Ngale on an Intel machine, problems appear instantly. On Don's MacBook
Air and (old) MacBook, the palette is never drawn. On the MBAir, the opening dialog is
much too tall and, the vast majority of the time,doesn't show the "New Nightingale
Score" and "Cancel" buttons -- until you resize it, that is. On the old MacBook, that
dialog is fine.

Trying to open an existing Ngale file on Intel CPUs gives a series of strange error
messages and, on Don's MacBook Air, crashes or at best displays just the background
image; on his old white MacBook, it hangs.

-------------------------------------------------------------------------------

16 - 17 Feb.

On my MBAir, the Set Duration "menu" (palette) seems to be waaaaay too large.
In GraphicMDEF.cp on G5 (with "Show two dots" unchecked):

	d. SizeMenu: charHt=26 charWid=24 numRows=2 numColumns=9
	d. InitGlobals: gNumItems=18 gNumCols=9 gNumRows=2 gItemHt=26 gItemWid=26

...all reasonable values -- and after adding a few FIX_ENDs to GraphicMDEF.cp, on MBAir,
they're all?? the same, but the Set Duration dialog is no better! Ah, it's _not_ the
popped-up palette; it's the unpopped version, showing a single char, which is waaaay,
WAY too large -- and InitGPopUp() in DurationPopUp sure seems to need FIX_ENDs. Add
'em => all OK! I.e., the unpopped version is drawn correctly; the popped version
is the right size, the selected item is hilited, and selecting other items works
correctly; but the popped palette is blank. Just like the tool palette :-( .

-------------------------------------------------------------------------------

19 - 21 Feb.

I've been using a list of all calls to GetResource, Get1Resource, and GetNamedResource,
and checked almost all of 'em out -- but I forgot about LoadResource! There are calls to
LoadResource in GraphicMDEF; add FIX_ENDs for them => better: the popped-up duration palette is
filled in now, but every other char. is missing! %*&#%(_%  Likewise for the dynamics popup
and the Add Modifier palette $($@$%* .

Log on my PPC G5:

	Ngale[68821]: d. SizeMenu: charHt=26 charWid=24 numRows=2 numColumns=9
	--- last message repeated 1 time ---
	Ngale[68821]: d. InitGlobals: gNumItems=18 gNumCols=9 gNumRows=2 gItemHt=26 gItemWid=24
	--- last message repeated 1 time ---
	Ngale[68821]: d. DrawMenu: NOSCROLL i=1 theRect tlbr=166,768,192,792
	Ngale[68821]: d. DrawMenu: NOSCROLL i=2 theRect tlbr=166,792,192,816
	Ngale[68821]: d. DrawMenu: NOSCROLL i=3 theRect tlbr=166,816,192,840
	Ngale[68821]: d. DrawMenu: NOSCROLL i=4 theRect tlbr=166,840,192,864
	Ngale[68821]: d. DrawMenu: NOSCROLL i=5 theRect tlbr=166,864,192,888
	Ngale[68821]: d. DrawMenu: NOSCROLL i=6 theRect tlbr=166,888,192,912
	Ngale[68821]: d. DrawMenu: NOSCROLL i=7 theRect tlbr=166,912,192,936
	Ngale[68821]: d. DrawMenu: NOSCROLL i=8 theRect tlbr=166,936,192,960
	Ngale[68821]: d. DrawMenu: NOSCROLL i=9 theRect tlbr=166,960,192,984
	Ngale[68821]: d. DrawMenu: NOSCROLL i=10 theRect tlbr=192,768,218,792
	Ngale[68821]: d. DrawMenu: NOSCROLL i=11 theRect tlbr=192,792,218,816
	Ngale[68821]: d. DrawMenu: NOSCROLL i=12 theRect tlbr=192,816,218,840
	Ngale[68821]: d. DrawMenu: NOSCROLL i=13 theRect tlbr=192,840,218,864
	Ngale[68821]: d. DrawMenu: NOSCROLL i=14 theRect tlbr=192,864,218,888
	Ngale[68821]: d. DrawMenu: NOSCROLL i=15 theRect tlbr=192,888,218,912
	Ngale[68821]: d. DrawMenu: NOSCROLL i=16 theRect tlbr=192,912,218,936
	Ngale[68821]: d. DrawMenu: NOSCROLL i=17 theRect tlbr=192,936,218,960
	Ngale[68821]: d. DrawMenu: NOSCROLL i=18 theRect tlbr=192,960,218,984

On my Intel MBAir:

	Ngale[68496]: d. SizeMenu: charHt=26 charWid=24 numRows=2 numColumns=9
	Ngale[68496]: d. SizeMenu: charHt=26 charWid=24 numRows=2 numColumns=9
	Ngale[68496]: d. InitGlobals: gNumItems=18 gNumCols=9 gNumRows=2 gItemHt=26 gItemWid=24
	Ngale[68496]: d. InitGlobals: gNumItems=18 gNumCols=9 gNumRows=2 gItemHt=26 gItemWid=24
	Ngale[68496]: d. DrawMenu: NOSCROLL i=1 theRect tlbr=166,672,192,696
	Ngale[68496]: d. DrawMenu: NOSCROLL i=2 theRect tlbr=166,696,192,720
	Ngale[68496]: d. DrawMenu: NOSCROLL i=3 theRect tlbr=166,720,192,744
	Ngale[68496]: d. DrawMenu: NOSCROLL i=4 theRect tlbr=166,744,192,768
	Ngale[68496]: d. DrawMenu: NOSCROLL i=5 theRect tlbr=166,768,192,792
	Ngale[68496]: d. DrawMenu: NOSCROLL i=6 theRect tlbr=166,792,192,816
	Ngale[68496]: d. DrawMenu: NOSCROLL i=7 theRect tlbr=166,816,192,840
	Ngale[68496]: d. DrawMenu: NOSCROLL i=8 theRect tlbr=166,840,192,864
	Ngale[68496]: d. DrawMenu: NOSCROLL i=9 theRect tlbr=166,864,192,888
	Ngale[68496]: d. DrawMenu: NOSCROLL i=10 theRect tlbr=192,672,218,696
	Ngale[68496]: d. DrawMenu: NOSCROLL i=11 theRect tlbr=192,696,218,720
	Ngale[68496]: d. DrawMenu: NOSCROLL i=12 theRect tlbr=192,720,218,744
	Ngale[68496]: d. DrawMenu: NOSCROLL i=13 theRect tlbr=192,744,218,768
	Ngale[68496]: d. DrawMenu: NOSCROLL i=14 theRect tlbr=192,768,218,792
	Ngale[68496]: d. DrawMenu: NOSCROLL i=15 theRect tlbr=192,792,218,816
	Ngale[68496]: d. DrawMenu: NOSCROLL i=16 theRect tlbr=192,816,218,840
	Ngale[68496]: d. DrawMenu: NOSCROLL i=17 theRect tlbr=192,840,218,864
	Ngale[68496]: d. DrawMenu: NOSCROLL i=18 theRect tlbr=192,864,218,888

...exactly the same coords., except on MBAir the x coords. are all 96 less -- which hardly
explains the missing chars! ??

On Intel, in the 1st row, the odd-numbered chars. are drawn; in the 2nd row, the even-
numbered chars.; in the 3rd row (if "Show 2 dots" is checked), again the odd-numbered
chars.

So Ngale is (trying to) draw the chars. in the right positions. What chars. is it drawing?
On my G5:

	Ngale[69602]: d. DrawMenu: NOSCROLL i=1 theRect tlbr=166,768,192,792
	Ngale[69602]: d. DrawItem: item=1 theChar=2 itemRect->left=768, ->bottom=192
	Ngale[69602]: d. DrawMenu: NOSCROLL i=2 theRect tlbr=166,792,192,816
	Ngale[69602]: d. DrawItem: item=2 theChar=0 itemRect->left=792, ->bottom=192
	Ngale[69602]: d. DrawMenu: NOSCROLL i=3 theRect tlbr=166,816,192,840
	Ngale[69602]: d. DrawItem: item=3 theChar=. itemRect->left=816, ->bottom=192
	Ngale[69602]: d. DrawMenu: NOSCROLL i=4 theRect tlbr=166,840,192,864
	Ngale[69602]: d. DrawItem: item=4 theChar=, itemRect->left=840, ->bottom=192
	Ngale[69602]: d. DrawMenu: NOSCROLL i=5 theRect tlbr=166,864,192,888
	Ngale[69602]: d. DrawItem: item=5 theChar=* itemRect->left=864, ->bottom=192
	etc. etc.
	
...and the log on my MBAir shows the same sequence of chars. :-( .

But the curly brace char. for Connects is fine! So the problems seem to be related to
drawing palettes that we handle as pop-up menus.

-------------------------------------------------------------------------------

23 - 25 Feb.

Status: In all cases, selecting and hiliting are fine; the only problem is drawing; for
the pop-ups (all but the tool palette), the problem is only in the popped-up state.
Exactly what is drawn?

* TOOL PALETTE: 'PLCH' & 'PLMP' resources; drawing via CopyBits(). Nothing is drawn
except the grid and hiliting.

* ALL OTHERS: 'chgd' (& 'SICN' for arrows) resources; drawing via DrawChar(). Odd numbered
chars are drawn, but:
* Duration palette: clicking on an even numbered char. draws it before the palette closes!
* Dynamic palette: just hovering over an even numbered char. sometimes draws it (and
erases the next one?); clicking always does.
* Modifier palette: just hovering over an even numbered char. OFTEN draws it (and
occasionally erases the next one?); clicking always does.

Ah, if HiliteMenuItem() finds <previousItem> and <newItem> are different, it calls
InvertItem for each, and InvertItem actually redraws the item! This makes more sense.
Hmmm... InvertItem sets a clipping region, and it has a comment "All this clipping stuff
is probably unnecessary, but it doesn't hurt." But maybe it does!? Try on MBAir => nope;
no change -- except I now see an odd numbered char. disappearing instead of an even one
appearing! ??

-------------------------------------------------------------------------------

28 Feb.

Summary of known problems on Intel machines as of the 25 Feb. commit:

1. On launch, (a) the initial Open File dialog is much too tall, and (b) the "New
Nightingale Score" and Cancel buttons usually aren't shown until you resize it;
nonetheless you can click on them and they work!

2. On launch, the tool palette isn't filled in, though it works perfectly in terms of
selecting tools and hiliting their squares. Nothing I've tried -- resizing, etc. -- gets
Ngale to fill it in.

3. The three pop-up menu palettes all have similar problems drawing their contents.
Launch, New Nightingale Score, insert a note, Set Duration, click on the note => the
palette pops up, but only odd-numbered squares are filled in. See 22-25 Feb. above for
details.

4. The selectable area (& hiliting for it) is the same as on PPC for timesigs, but slightly
too low for most other symbols.

(Note: My G5 suddenly became unusuable on 28 Feb.; a one-week hiatus ensued while I got
it working again.)

-------------------------------------------------------------------------------

9 - 11 March

My comment of 7 Feb.: "Everything from any call to GetResource(), Get1Resource, etc.,
could be vulnerable to the Endian problem, except (I think!) for Apple-defined resources
like 'DITL', 'PAT ', 'PICT', 'STR#', 'TEXT'." Apple Universal Binary Programming
Gudidelines confirms that Apple takes care of Endianness for their own resources, so my
problems are definitely elsewhere!

How about the excessive height of the initial Open File dialog on my MacBook Air? This
is set in NSNavOpenEventProc(), called from NavCreateGetFileDialog() via a UPP that's
the latter's 3rd parameter. On my G5, it's 401; on my MacBook Air, it's 820. Why?? On my
old MacBook w/ the PPC version (via Rosetta), it's 397, which is a bit smaller but OK, &
it shows all its buttons; w/ the Intel version, it's 397, which is OK, & it shows all
its buttons! On my Mac mini, it's 457, somewhat larger but OK, & it shows all its
buttons. On all three Intel systems, the tool palette behaves the same (it's never
filled in, though it works perfectly otherwise), and the three pop-up menu palettes have
similar problems drawing their contents. Sigh... I have no idea; TBContinued.

-------------------------------------------------------------------------------

11 - 13 March
On the selection area/hiliting problem: New, Select All => look at log:

On Intel (MBAir):
3/11/18 5:33:04.485 PM Ngale[81606]: debug. CheckCLEF: wSub=-23904,-23913,-23878,-23904
3/11/18 5:33:04.485 PM Ngale[81606]: debug. CheckCLEF: wSub=-23859,-23913,-23848,-23903

On PPC (G5):
Mar 11 17:31:57 DonDualG5 Ngale[45230]: debug. CheckCLEF: wSub=-23908,-23913,-23882,-23904
Mar 11 17:31:57 DonDualG5 Ngale[45230]: debug. CheckCLEF: wSub=-23863,-23913,-23850,-23903

So wSub.top and wSub.bottom really are slightly less negative (= lower on the page) on
Intel. Is it the same font? Yep, Briard for both. CheckCLEF sets wSub like this:

		rSub = charRectCache.charRect[glyph];
		OffsetRect(&rSub, d2p(xd), d2p(yd));
		wSub = rSub; OffsetRect(&wSub, pContext->paper.left, pContext->paper.top);

So evidently the charRectCache.charRect[]s for many symbols are different on the two
machines -- and correct on the PPC!?  BuildCharRectCache() does what it sounds like, via:

	bbox = musFontInfo[doc->musFontInfoIndex].cBBox;

...and InitMusFontTables() fills in the cBBox values from our 'BBX#' resource. Does that
really have slightly different values on the two platforms?

On MBAir:
3/12/18 2:06:25.384 PM Ngale[97766]: info. Setting up music font 'Sonata': 174 chars.  (InitMusFontTables)
3/12/18 2:06:25.384 PM Ngale[97766]: debug. InitMusFontTables: ch=&=38 yt=-1079 yb=657	[ht=1736]
3/12/18 2:06:25.384 PM Ngale[97766]: debug. InitMusFontTables: ch=?=63 yt=-736 yb=64	[ht=800]
3/12/18 2:06:25.385 PM Ngale[97766]: info. Setting up music font 'Briard': 217 chars.  (InitMusFontTables)
3/12/18 2:06:25.385 PM Ngale[97766]: debug. InitMusFontTables: ch=&=38 yt=-1079 yb=656
3/12/18 2:06:25.385 PM Ngale[97766]: debug. InitMusFontTables: ch=?=63 yt=-735 yb=64
3/12/18 2:06:25.417 PM Ngale[97766]: info. Setting up music font 'BlueNotz-NG': 217 chars.  (InitMusFontTables)
3/12/18 2:06:25.417 PM Ngale[97766]: debug. InitMusFontTables: ch=&=38 yt=-1079 yb=656
3/12/18 2:06:25.417 PM Ngale[97766]: debug. InitMusFontTables: ch=?=63 yt=-735 yb=64

On G5:
Mar 12 14:11:16 DonDualG5 Ngale[53195]: info. Setting up music font 'Sonata': 174 chars.  (InitMusFontTables)
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=&=38 yt=-1334 yb=402	[ht=1736]
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=?=63 yt=-991 yb=-192	[ht=799]
Mar 12 14:11:16 DonDualG5 Ngale[53195]: info. Setting up music font 'Briard': 217 chars.  (InitMusFontTables)
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=&=38 yt=-1334 yb=401
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=?=63 yt=-990 yb=-192
Mar 12 14:11:16 DonDualG5 Ngale[53195]: info. Setting up music font 'BlueNotz-NG': 217 chars.  (InitMusFontTables)
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=&=38 yt=-1334 yb=401
Mar 12 14:11:16 DonDualG5 Ngale[53195]: debug. InitMusFontTables: ch=?=63 yt=-990 yb=-192

!! The Intel (MBAir) values are all larger by 255 or 256! Could these different values be
present in the 'BBX#'?

Compare the values for char. code 38 & 63 in BBX# 129 (Briard) in the latest
NightingalePPC.app and NightingaleIntel.app => they're exactly the same. Maybe I'm
somehow using the BBX#'s from a different resource file? Delete the BBX# for Blue Notz
from NgaleIntel, run it => BlueNotz is gone, so that's not it. %^&(@#(^$#%  Whatever it
is, it's something pretty weird! Could FIX_END possibly be the problem??

BBX# values of width & bounding box for char. codes 38 & 63, both before and after FIX_END, on G5:
Mar 14 11:30:47 DonDualG5 Ngale[67161]: info. Setting up music font 'Sonata': 174 chars.  (InitMusFontTables)
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   611  611
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   0  0
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   402  402
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   611  611
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   -1334  -1334

Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   694  694
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   0  0
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   -192  -192
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   691  691
Mar 14 11:30:47 DonDualG5 Ngale[67161]: debug.   -991  -991

On MBAir:
3/13/18 7:46:16.373 PM Ngale[11513]: info. Setting up music font 'Sonata': 174 chars.  (InitMusFontTables)
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   25346  611
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   0  0
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   -28414  657	**255 GREATER THAN G5 VALUE
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   25346  611
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   -13829  -1079	**255 GREATER THAN G5 VALUE

3/13/18 7:46:16.374 PM Ngale[11513]: debug.   46594  694
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   0  0
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   16384  64		**255 GREATER THAN G5 VALUE
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   -19710  691
3/13/18 7:46:16.374 PM Ngale[11513]: debug.   8445  -736	**255 GREATER THAN G5 VALUE

Nope, FIX_END is okay (confirmed via my own SwapBytes program). What does Ngale do
before getting the values listed above?

		resH = Get1IndResource('BBX#', i); 
		if (!GoodResource(resH)) goto error;
		GetResInfo(resH, &resID, &resType, resName);
		
Sure looks like a bug in the Intel implementation of the Resource Manager, a highly
unlikely bug since it affects things so selectively, but via Sherlock Holmes' dogma...
!! In which case, the only solution is a kludge to correct it => done.

-------------------------------------------------------------------------------

18 Mar.

I upgraded my MacBook Air from OS 10.8 to 10.13; problem of 1b of 28 Feb. no longer occurs.
Updated list of known problems on Intel machines:

1. On launch, the initial Open File dialog is much too tall.

2. On launch, the tool palette isn't filled in, though it works perfectly in terms of
selecting tools and hiliting their squares. Nothing I've tried -- resizing, etc. -- gets
Ngale to fill it in.

3. The three pop-up menu palettes all have similar problems drawing their contents.
Launch, New Nightingale Score, insert a note, Set Duration, click on the note => the
palette pops up, but only odd-numbered squares are filled in. See 22-25 Feb. above for
details.

-------------------------------------------------------------------------------

20 - 28 Mar.

Working on opening files on Intel processors; _lots_ of Endian problems.

EndianFixDocumentHdr() works.

EndianFixScoreHdr() calls exit() and quits because sizeof(something) is 1!?! ...Fixed.

-------------------------------------------------------------------------------

1 - 10 April

More work on opening files on Intel processors, esp. EndianFixScoreHdr().

Uh-oh. <firstMNNumber> is a 13-bit field, so we must do something special: write
EndianFix_13BitField() & test with firstMNNumber = 259 => nope! #%^&*#$%*#)%#$%  Ngale
reads in 259 = 0x103 as 124 = 0x7c !! Then it converts it -1024 = 0xfffffc00 -- garbage,
of course; but how does it get 0x7c?? It's not just swapping the bytes of the <short>
that <firstMNNumber> belongs to -- and Harbison & Steele's _C: A Reference Manual_ warns
that bit fields are "likely to be nonportable". This indeed seems to be the case for code
generated by the C compiler in Xcode 2.5 for Intel CPUs vs. PowerPCs, and not being able
to run on Intel CPUs (without Rosetta, Apple's PowerPC simulator, that is) keeps us from
running on any Mac OS after 10.6.x. This is looking really bad, since our file headers
as well as objects and subobjects are jammed with bit fields!!

By far the most reasonable solution I can think of: a new file format, format "N106",
that doesn't use bit fields at all! Or perhaps it still uses them, but far less than the
current format, and only in very limited ways. The Intel version of Ngale 5.8 won't be
able to open N105 or earlier files, but the PPC version will be able to open them & save
them in the new format. This will also allow making some other desirable changes to
files & to the object list that have been accumulating for years: cf.
NgaleFileFormatIdeas.txt.

This is conceptually simple, but it'll take awhile! TBContinued.

-------------------------------------------------------------------------------

10 - 11 April

The "notes entered on a new system aren't drawn until there's a barline following on the
system" bug (GitHub Issue #165) is a real pain. Cf. discussion above for Feb. - Mar.
2016.

The basic problem is that entering the notes leaves measureBBox.right = measureBBox.left.
One place -- maybe the only one! -- where measureBBox.right is updated is in DrawMEASURE().
Is it getting called in this situation? Yes -- but measureBBox.right is set to the right
end of the system, which is correct; the problem is measureBBox.left! Why? The comment:

	/* If this is the last measure of a system, just set its measureBBox to end exactly
	   at the end of the system. If in addition the previous measure ends at the same
	   point, this measure's width is zero, and we set its measureBBox to start at that
	   point as well. */

But the test for the previous measure ending at the same point doesn't consider the case
where the previous measure is on the previous system! Fixed.

-------------------------------------------------------------------------------

21 April - 11 May

Doing more testing of how Ngale on Intel reads the 13-bit score header field 
<firstMNNumber> before going ahead with the new file format plan...

In files with the other three bits in the word (aboveMN, sysFirstMN, startMNPrint1) all
set to 1, Ngale reads firstMNNumber of:
	0x001 (1)    as  0x03c (60)
	0x02a (42)   as  0x55c (1372)
	0x07e (124)  as  0xf9c (3996)
	0x07e (126)  as  0xfdc (4060)
	0x07f (127)  as  0xffc (4092)
	0x103 (259)  as  0x7c (124)

Looks like the other three bits become these bits of firstMNNumber: 0x038; if so, the
three missing bits of firstMNNumber must go into those flags! -- which makes sense.

So I _could_ unscramble these fields, but I doubt it's worth the trouble! But almost
all of Ngale's bit fields stored in files are less than 8 bits, so fit in a byte; maybe
unscrambling them is practical?

Bit fields > 7 bits declared in NTypes.h:

	NIGHTSCOREHEADER:
				firstMNNumber:13;	/* Number of first measure */

	MEASURE obj & subobj:
				measureNum:15;		/* internal measure number; first is always 0 */
					spacePercent:15;	/* Percentage of normal horizontal spacing used */

	"Structs for Merge" (VInfo & ClipVInfo):
				unused:11;
					unused:13;

Bit fields > 7 bits declared in NMiscTypes.h:
					moreUnused:11;

NB: It's not obvious even "unused" fields of over 8 bits won't complicate things, since
they might result in other fields in the same word getting scrambled across bytes :-( .

Anything declared elsewhere that's written to Ngale files?? TBContinued, but the path
of least resistance is very likely the simple version of the plan outlined above, namely
format N106 will use no bit fields at all.

-------------------------------------------------------------------------------

14 - 15 May

Using Xcode 3.2 on Torrey's Old White MacBook: Xcode insists InitNightingale() is
undefined!? Clean All Targets, Build again => no change. Remove InitNightingale.cp from
the project, put it back in => no change. Replace project file w/ a copy from MacBook
Air => all OK. Weird.

-------------------------------------------------------------------------------

24 May - 4 June

Issue #173: The minimum space between notes on ledger lines isn't enough; as a result,
the ledger lines on consecutive notes in measures Respaced to a small percentage touch
each other and appear to merge, which makes the notes really hard to read. This is a
big problem for my 2-flute arrangement of the Mozart Andante.

Adjustment probably needs to consider chords as a whole, w/ regular & suspended notes
both above and below staff; cf. DrawNoteLedgers().

Write GetNCLedgerInfo(); call it from DrawNCLedgers() => OK. Write NCHasLedgers(), which
also calls GetNCLedgerInfo() => looks OK. Now, routines in SpaceHighLevel.cp and/or
SpaceTime.cp need to use NCHasLedgers() when Respace1Bar() is computing new positions
for the "spine" -- but doing it one note/chord at a time isn't enough: we need extra
space between two consecutive notes/chords only if _both_ have ledger lines, and on the
same side of the staff!

Write ConsiderLedgerLines(), called from ConsiderWidths(), called from Respace1Bar()...

-------------------------------------------------------------------------------

17 - 18 August

Back to problems on Intel unrelated to opening/saving files. Summary of known problems
(rev. from 18 March):

1. On launch, the initial Open File dialog is sometimes much too tall. I say "is
sometimes", but I haven't seen this at all recently.

2. On launch, the tool palette isn't filled in, though it works perfectly in terms of
selecting tools and hiliting their squares. Nothing I've tried -- resizing, etc. -- gets
Ngale to fill it in.

3. The three pop-up menu palettes all have similar problems drawing their contents.
Launch, New Nightingale Score, insert a note, Set Duration, click on the note => the
palette pops up, but only odd-numbered squares are filled in. See 22-25 Feb. above for
details.

-------------------------------------------------------------------------------

22 - 23 August

Moving some of NTypes.h into a new header, NObjTypes.h, seems to result in sizeof(AGRAPHIC)
being 8 instead of 6! -- which makes old files unreadable. How could that cause the size
to change??

Copies of the bad files are NTypesQ1.h and NObjTypesQ1.h of 19 Aug., ca. 6 PM.

Starting over with NTypesOK.h, move into a new NObjTypes.h:
	UserPopUp
	OBJECTHEADER, SUBOBJHEADER, EXTOBJHEADER
	HEADER, PHEADER
	TAIL => DYNAMIC
	enum for dynamics
	AMODNR => OBJDATA

But wait! NTypes.h is enclosed in
	#pragma options align=mac68k
	...
	#pragma options align=reset

So is NMiscTypes.h and many other .h's; but NObjTypes.h isn't!! Add to NObjTypes.h =>
all OK.

-------------------------------------------------------------------------------

25 - 30 August

On Issue 67 (initial position of tool palette is sometimes at very top of screen,
underneath the menu bar): Where is the initial position set? Where is it even made
visible? NInitFloatingWindows() creates the window & makes it invisible, with a windowRect
set in SetupPaletteRects(). Adjust the position there => seems to move it down, as desired,
so this should avoid the problem -- though it's certainly not the correct fix.

-------------------------------------------------------------------------------

1 September

I think all almost all of the bit fields that affect files are now in NObjTypes.h. How
about KSITEM, still in NTypes.h? Oops: instances of it are written to files; likewise
for TEXTSTYLE, of which NIGHTSCOREHEADER has 15 occurrences (though they aren't called
that) and probably VOICEINFO, all in NTypes.h. And NMiscTypes.h has loads of bit fields.
Oh well! For now, just add comment that changing these headers has implications for Ngale
files.

-------------------------------------------------------------------------------

5 - 23 November

I'm getting serious about opening files on Intel processors, which means getting rid of
the bit fields our files have all over place. Cf. notes above for 1 - 10 April 2018.
Part of the machinery for converting old files has always been in FileConversion.h, with
versions of some data structures from old file formats; but we need _way_ more than what
it has, large amounts of the declarations from all three N*Types.h headers, so don't use
FileConversion.h (but keep it with contents #ifdef'd out for future reference). Headers
that need work to remove bit fields:

+ FileConversion.h
+ NBasicTypes.h
+ NMiscTypes.h
+ NObjTypes.h

Any others? There shouldn't be, and I don't think there are!

-------------------------------------------------------------------------------

15-18 March 2019

Bugs in 5.9:

1. New score, enter notes on both staves w/ accidental, Select All, autobeam, add barline,
play, Set Duration => all OK. Select 3 8th notes, Create Triplet =>

	Warning. GetContext: illegal staff number 0. contextL=54
	
Not too surprising, but also not obvious how the changes I've made -- nearly all just
to data-structure definitions -- could cause this! ??

2. After Copying one or several notes (w/ menu title flashing, so apparently successful),
Paste commands are disabled! Ah -- but Show Clipboard seems to show the clipboard is empty.
??

Simpler way to provoke bug #1: New score, enter 3 8th notes on top staff, Select them,
Create Triplet =>

	Warning. GetContext: illegal staff number 0. contextL=34

Add some debug prints, do same thing =>

	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. DoTuple 1: selStartL=27
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. DoTuple 2: selStartL=35
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. DoTuple 3: v=1 selStartL=35
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. DoTuple: v=1 vStartL=35 vEndL=2
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. CreateTUPLET: startL=35 endL=2 v=1
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: debug. CreateTUPLET: startL=0 staff=0
	Mar 18 10:09:43 DonDualG5 Ngale[33356]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

The Syncs are links 27, 29, 31; doc->selStartL should = 27. It's changed to 35 between DoTuple 1 & 2:

	LogPrintf(LOG_DEBUG, "DoTuple 1: selStartL=%u\n", doc->selStartL);
		if (!RearrangeNotes(doc, selRange, nInMeas, baseMeasL)) goto broken;
	LogPrintf(LOG_DEBUG, "DoTuple 2: selStartL=%u\n", doc->selStartL);

So the bug is in RearrangeNotes(). Where?

	Mar 18 10:40:40 DonDualG5 Ngale[33569]: debug. DoTuple 1: selStartL=27
	Mar 18 10:40:40 DonDualG5 Ngale[33569]: debug. RearrangeNotes 1a: selStartL=27
	Mar 18 10:40:40 DonDualG5 Ngale[33569]: debug. RearrangeNotes 1b: selStartL=35
	Mar 18 10:40:40 DonDualG5 Ngale[33569]: debug. RearrangeNotes 2: selStartL=35
	Mar 18 10:40:40 DonDualG5 Ngale[33569]: debug. DoTuple 2: selStartL=35
	Mar 18 10:40:40 DonDualG5 Ngale[33569]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

It's between RearrangeNotes 1a & 1b!? The code is

	LogPrintf(LOG_DEBUG, "RearrangeNotes 1a: selStartL=%u\n", doc->selStartL);
		for (pL = startMeas; pL!=endMeas; pL=RightLINK(pL))
			if (LinkSEL(pL))
				{ doc->selStartL = pL; break; }
	LogPrintf(LOG_DEBUG, "RearrangeNotes 1b: selStartL=%u\n", doc->selStartL);

 RightLINK() & LinkSEL(pL) are simple macros that just return a value. Ah, but what is startMeas?
 
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: debug. DoTuple 1: selStartL=27
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: debug. RearrangeNotes 1a: startMeas=10 selStartL=27
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: debug. RearrangeNotes 1b: startMeas=10 selStartL=35
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: debug. RearrangeNotes 2: selStartL=35
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: debug. DoTuple 2: selStartL=35
	Mar 18 10:46:17 DonDualG5 Ngale[33599]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

@%$^#&@#@#$!)(&!$  startMeas=10 is correct & unchanged while selStartL is clobbered!
This makes nooooo sense. Grasping at a straw, how about &selStartL?

-------------------------------------------------------------------------------

20-24 Mar.

Grasping at a straw, how about &selStartL?

	Mar 20 14:05:57 DonDualG5 Ngale[36814]: debug. DoTuple 1: selStartL=27
	Mar 20 14:05:57 DonDualG5 Ngale[36814]: debug. RearrangeNotes 1a: startMeas=10 selStartL=27 &selStartL=14d72734
	Mar 20 14:05:57 DonDualG5 Ngale[36814]: debug. RearrangeNotes 1b: startMeas=10 selStartL=35 &selStartL=14d72734
	Mar 20 14:05:57 DonDualG5 Ngale[36814]: debug. RearrangeNotes 2: selStartL=35
	Mar 20 14:05:57 DonDualG5 Ngale[36814]: debug. DoTuple 2: selStartL=35
	Mar 20 14:05:57 DonDualG5 Ngale[36814]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

No problem there. OK, let's start from the last functioning version, 5.8.9, and work forward.
 
Replace NResourceID.h, .rsrc, Tuplet.cp w/ the 5.9 versions => everything still works OK, w/
neither bug happening -- but selStartL is getting changed to 35!!! And looking at the object list
shows that's correct. So the failure of Create Tuplet in 5.9 is for another reason!!! Go back to
CreateTUPLET:
 
	Mar 20 21:56:28 DonDualG5 Ngale[38286]: debug. DoTuple 1: selStartL=27
	Mar 20 21:56:28 DonDualG5 Ngale[38286]: debug. DoTuple 2: selStartL=35
	Mar 20 21:56:28 DonDualG5 Ngale[38286]: debug. CreateTUPLET: startL=0 voice=1 staff=0
	Mar 20 21:56:28 DonDualG5 Ngale[38286]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

startL=0 is a big problem! It's returned by GetNoteSelRange (as vStartL), then passed to
CreateTUPLET. Why? Modify GetNoteSelRange to store startL, endL into local variables & copy them
to its pointer args at the end; display startL=35 endL just before they're copied:

	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. DoTuple 1: selStartL=27
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. DoTuple 2: selStartL=35
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=35
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=35 aNoteL=7
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=36
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=36 aNoteL=8
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=37
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: pL=37 aNoteL=9
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. GetNoteSelRange: startL=35 endL=2
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: debug. CreateTUPLET: startL=0 voice=1 staff=0
	Mar 21 10:32:16 DonDualG5 Ngale[39136]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

Could the problem be _within_ CreateTUPLET?

	Mar 21 10:57:57 DonDualG5 Ngale[39380]: debug. DoTuple 1: selStartL=27
	Mar 21 10:57:57 DonDualG5 Ngale[39380]: debug. DoTuple 2: selStartL=35
	Mar 21 10:57:57 DonDualG5 Ngale[39380]: debug. CreateTUPLET 1: startL=35 endL=2 v=1
	Mar 21 10:57:57 DonDualG5 Ngale[39380]: debug. CreateTUPLET 2: startL=35 endL=2 v=1
	Mar 21 10:57:57 DonDualG5 Ngale[39380]: debug. CreateTUPLET 3: startL=0 voice=1 staff=0
	Mar 21 10:57:57 DonDualG5 Ngale[39380]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

Yes, and the _only_ stmt between CreateTUPLET 2 & 3 is:

	startL = L_Search(startL, SYNCtype, False, &pbSearch);	/* Start at 1st Sync in range */

Sure looks like a bizarre new bug in L_Search!

	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. DoTuple 1: selStartL=27
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. DoTuple 2: selStartL=35
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. CreateTUPLET 1: startL=35 endL=2 v=1
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. CreateTUPLET 2: startL=35 endL=2 v=1
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: ERROR. WARNING: request to optimize search for type 2. startL=35  (L_Search)
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. L_Search 2: startL=35 type=2 goLeft=0 optimize=1 id=-1
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. L_Search 3: anyType=0 anyStaff=1 anyVoice=0 anySelected=0 anySystem=1 anySubtype=1 anyInMeasure=1
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: debug. CreateTUPLET 3: startL=0 voice=1 staff=0
	Mar 22 18:03:20 DonDualG5 Ngale[41854]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

So CreateTUPLET is telling L_Search it wants only notes (OK), on any staff (OK), only in voice 1 (OK),
only if selected, and on any system. What's the problem?

	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. DoTuple 1: selStartL=27
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. DoTuple 2: selStartL=35
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. CreateTUPLET 1: startL=35 endL=2 v=1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: ERROR. WARNING: request to optimize search for type 2. startL=35  (L_Search)
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 1: startL=35 type=2 goLeft=0 optimize=1 id=-1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 2: anyType=0 anyStaff=1 anyVoice=0 anySelected=0 anySystem=1 anySubtype=1 anyInMeasure=1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 4: CHECKING pL=35 FirstSubObjPtr=7
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 5: CHECKING subObjL=7 selected=0 voice=1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 4: CHECKING pL=36 FirstSubObjPtr=8
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 5: CHECKING subObjL=8 selected=0 voice=1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 4: CHECKING pL=37 FirstSubObjPtr=9
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. L_Search 5: CHECKING subObjL=9 selected=0 voice=1
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: debug. CreateTUPLET 2: startL=0 voice=1 staff=0
	Mar 24 16:58:54 DonDualG5 Ngale[45373]: ERROR. PROGRAM ERROR: GetContext: illegal staff number 0. contextL=34

The problem is the notes being tupleted appear not to be selected :-( . How could the 5.9
changes so far have caused this?

-------------------------------------------------------------------------------

25-26 March

Let's try going back to the 5.8.9 code and work forward again. (1) In precomps in folder
NightingaleDABVer_5p8_TEST, replace the three NxxxTypes.h headers w/ the 5.9 versions; try
to provoke bug #1: New score, enter 3 8th notes on top staff, Select them, Create Triplet =>

	Warning. GetContext: illegal staff number 0. contextL=34
	
!! Adding the debug stmts in L_Search confirms the problem is none of the notes are selected. ??

Revert NMiscTypes to the 5.8.9 version, try again => no change.

Revert NObjTypes to the 5.8.9 version, try again => Create Triplet works again!!, and so
does Copy & Paste.

Move NMiscTypes forward to the 5.8.9 version, try again => Create Triplet still works; so
does Copy & Paste. So it's _just_ the changes to NObjTypes that break things. Which changes?

Revert NObjTypes to the 5.8.9 version, make changes to OBJECTHEADER & SUBOBJHEADER =>
crashes in the usual way. Revert NObjTypes to the 5.8.9 version, make changes to
OBJECTHEADER alone => works properly! So it's very likely (though I'm not certain) the
changes to SUBOBJHEADER are the only problem... Could there be an assumption somewhere about
the offsets or bit length of SUBOBJHEADER fields, especially <selected>??

L_Search is looking for subObj->??, with the following interesting declaration:

GenSubObj 	*subObj;

!! GenSubObj is declared in Objects.h, and it explicitly includes the subobj fields; but it
should be fine with just containing a SUBOBJHEADER. (Nothing else in the code seems to
includes the subobj fields.) Change it in the 5.9 project, build => 898 warnings instead of
897 -- I don't think that's worth worrying about. Test => Yes!!! Bugs #1 & 2 of 15-18 March
notes are both gone!

-------------------------------------------------------------------------------

1-3 April

Sh*t. I don't understand at all what's going on with the repository in GitHub & its
relationship to NightingaleGitRepo!!!!

(1) SourceTree shows the most recent commits as
	origin/develop5p8: Merge pull request #175 from AMNS/develop...	011db61	Mar 13, 2019 at 10:32 AM
	develop (1 ahead): * Minor cleanup: moved some file util...		e8a8a03	Jan 9, 2019 at 2:29 PM
	origin/develop: Move source files (but not headers)...			40cc468	Nov 4, 2019 at 1:51 PM
	
Apparently I never pushed e8a8a03, so when I merged from develop to develop5p8, those
changes didn't go into develop5p8; that explains a lot. ^#&48@$@$!)^

For the _develop_ branch, GitHub says: Latest commit 40cc468 on Nov 4, 2018. For the
_develop5p8_ branch, GitHub says: Latest commit 011db61 21 days ago (i.e., ca. 13 March).
Neither is what I expected or what I want -- none of my changes since Nov 4, 2018 are in
either branch -- but it's consistent!

(2) SourceTree says there's nothing to commit to branch develop, but there's 1 commit to
push. That makes sense.

(3) However, e8a8a03 removed CFilesBoth/File.cp & replaced it with
CFilesBoth/FileOpen.cp and CFilesEditor/FileSave.cp. But both develop & develop5p8 in
GitHub contain FileOpen.cp but neither File.cp nor FileSave.cp! How is that possible? Is
that really the case?

In GitHub develop5p8, there's CFilesBoth/File.cp but not FileOpen.cp nor CFilesEditor/FileSave.cp
In develop, likewise. So that's _not the case! Not clear why I thought otherwise.

Everything now makes sense, but both branches in GitHub are a (small) mess. How to fix 'em?

-------------------------------------------------------------------------------

8 April

Push the one unpushed commit for develop => looks OK in GitHub & SourceTree history.

Merge changes from develop to develop5p8 => looks OK in GitHub & (after relaunch) SourceTree
history.

SourceTree still says nothing to commit. So the mess has been cleaned up :-) .

A slightly worrisome thing: does develop5p8/info.plist say it's 5.8.9? Yes!
And does develop/info.plist say it's 5.9.1?  No; it says 5.8.9, but that's OK -- easy to fix.
But it _is_ 5.9.1 (& rev. 11 Jan. 2019) on my Mac mini, so SourceTree _should_ show
something to commit! ??

-------------------------------------------------------------------------------

12-26 April

Trying to open a format 'N105' file fails, with the following log messages:

	Notice. CONVERTING VERSION 'N105' FILE.
	Notice. Checking Document header: No errors found.  (OpenFile)
	Notice. Checking Score header: Displaying Score header:
	info.   nstaves=2  nsystems=1  spacePercent=1  srastral=1  altsrastral=0
	info.   tempo=0  channel=0  velocity=0  headerStrOffset=536870912  footerStrOffset=512  dIndentOther=76
	info.   firstNames=0  otherNames=15  lastGlobalFont=5
	info.   aboveMN=1  sysFirstMN=0  startMNPrint1=0  firstMNNumber=0
	info.   nfontsUsed=0  magnify=0  selStaff=0  currentSystem=0  spaceTable=0  htight=0
	info.   lookVoice=0  ledgerYSp=0  deflamTime=0  dIndentFirst=0
	ERROR. 9 error(s) found.  (OpenFile)

_headerStrOffset_ is obviously nonsense; what else? More important, why? Ah. We read a
SCOREHEADER, then EndianFixScoreHdr() it -- but what we actually read is an 'N105' format
SCOREHEADER, then check it ?? 'N106'. But why does Ngale even compile with two different
definitions of SCOREHEADER?? Apparently because I wasn't #include'ing the new version :-) .

Now to actually convert the score header. For format 'N105' and earlier, have OpenFile()
call ConvertScoreHeader(), which simply copies (or strcpy's) about 200 fields from a
NIGHTSCOREHEADER_N105 (part of a DocumentN105) to a NIGHTSCOREHEADER (part of a
Document).

It's coming along OK, except for one thing. This code:

	DisplayScoreHdr(2, doc);		// ??TEMPORARY, TO DEBUG INTEL VERSION & FILE FORMAT CONVERSION!!!!
		EndianFixScoreHdr(doc);
		if (DETAIL_SHOW) DisplayScoreHdr(3, doc);
		
..shows

	info. Displaying Score header (ID 2):
	info.   nstaves=4  nsystems=18  spacePercent=118  srastral=7  altsrastral=2
	info.   tempo=999  channel=1  velocity=1  headerStrOffset=0  footerStrOffset=0  dIndentOther=0
	info.   firstNames=2  otherNames=0  lastGlobalFont=11
	info.   aboveMN=1  sysFirstMN=1  startMNPrint1=0  firstMNNumber=1
	info.   nfontsUsed=3  musFontName='Briard'
	info.   magnify=1  selStaff=1  currentSystem=1  spaceTable=0  htight=100
	info.   lookVoice=-1  ledgerYSp=13  deflamTime=50  colorVoices=2  dIndentFirst=1128
	info. Displaying Score header (ID 3):
	info.   nstaves=4  nsystems=18  spacePercent=118  srastral=7  altsrastral=2
	info.   tempo=999  channel=1  velocity=1  headerStrOffset=0  footerStrOffset=0  dIndentOther=0
	info.   firstNames=2  otherNames=0  lastGlobalFont=11
	info.   aboveMN=1  sysFirstMN=1  startMNPrint1=0  firstMNNumber=1
	info.   nfontsUsed=3  musFontName='riard'
	info.   magnify=256  selStaff=256  currentSystem=256  spaceTable=0  htight=25600
	info.   lookVoice=-256  ledgerYSp=3328  deflamTime=12801  colorVoices=0  dIndentFirst=1128

This is running on a G5, natch, so EndianFixScoreHdr() should do nothing, and in fact its
code is commented out, as it should be. But almost all the values in the last two
lines are multiplied by 256, as if the bytes were swapped, and none in the previous lines,
while deflamTime = 256*deflamTime+1, colorVoices = 0, etc.??  Anyway, musFontName gets messed up,
clearly because I'm converting it in place from P to C string. Fix that => all is OK now!?!

-------------------------------------------------------------------------------

29-31 May

DIGRESSION. Issue #174: Select a tempo mark or text graphic (are there other
possibilities? probably not) attached to a barline => the measure number displayed is
the no. of the preceding barline; it should be the number of the barline it's attached
to. This is because DrawMessageBox() calls Sel2MeasPage() to get the measure no.;
Sel2MeasPage() searches to the left for the Measure object, but the objects in question
appear in the object list _before_ their Measure... Fixed.

-------------------------------------------------------------------------------

12 June - 8 July

Dammit. The last commits/pushes made a mess of things. One commit included some changes for
both 5.8.x and 5.9.x and some for 5.9.x only! #6&*$%W$%*@22$()@

Everything is OK _in source code_ till 10 January 2019, when I made the first changes for 5.9.x.
I've done three commits/pushes since then; I think only the last two  are the troublesome ones.
Plan: Reset both the <develop> and <develop5p8> branches to before the 1st improper commit! See

    https://github.blog/2015-06-08-how-to-undo-almost-anything-with-git/

Commit 42977a (8 April; "Merge pull request #176 from AMNS/develop") to <develop5p8>: OK.

Commit 926dba1 (12 April; "Changed version number to 5.9.1; compatibility btwn files written
on PowerPC Intel; fixed bug: When Ngale converts a file in an older format, its log message
saying so always shows "T" as file-format version instead of the 4-char. code; minor
cleanup") to <develop> (5.9): OK.

Commit 94a763e (6 June; "Fixed bug: When Ngale converts a file... [?? this was in previous
commit!); fixed bug (Issue #174): If 1st selected obj is a tempo mark or graphic attached to
a barline, measure no. displayed is the no. of the preceding barline; divided a header with
declarations for score headers and other stuff in two; hacked code for opening files towards
goal of converting old-format files) to <develop>: WRONG! The fix to Issue #174 should go to
both <develop> & <develop5p8>; the other changes only to <develop>, so need two commits.

Action:
+ Make NightingaleGitRepo a copy of NightingaleDABVer_5p9 => done; now SourceTree should show
"nothing to commit", and it does.
+ In SourceTree, checkout <develop>. (This is probably redundant.) It still shows "nothing to
commit".
+ In SourceTree, reset to 926dba1 ...says files changed: info.plist, but 94a763e
actually affected ca. 10 files, & info.plist wasn't among them!; go ahead anyway => it
still shows "nothing to commit"!?

Ah, that's wrong. Probably the safest way to do what I want to do is _revert_ 94a763e (not
reset to it)! Have Patrick do that directly via git command line => looks OK. SourceTree now
says 1 commit available for branch develop; pull => looks OK!

-------------------------------------------------------------------------------

9 - 16 July

Back to development. NGALE 5.8: Before printing or saving a PostScript file, put an "info"
message in the log file; this might help diagnose weird aspects of printing for Avid He.
Affects CarbonPrinting. Also did minor cleanup in CarbonPrinting, DebugUtils, DrawObject.
These changes _should_ work in 5.9 as is, but must check/test!

-------------------------------------------------------------------------------

17 - 20 July

I was planning to stop 5.8 development with 5.8.9, but that's unrealistic; it's going to be
a long time before 5.9 is usable! So should keep 5.8 & 5.9 code in sync as much as "practical".
Move 5.9 changes into 5.8:
	CFilesBoth: +Search, +Select, +Tuplet
	Utilities: +StringUtils
	Precomps: +NightTemplates.h, +Objects.h
	CustomMDEF: +GraphicMDEF
	Headers: NResourceID

Move 5.8 changes into 5.9:
	CFilesBoth: +DrawObject
	Utilities: +DebugUtils
	CarbonPrinting: +CarbonPrinting

-------------------------------------------------------------------------------

2 August

To minimize differences between the <develop> (Ngale 5.9) and <develop5p8> branches, in the
NightingaleDABVer_5p8 folder, move two files into the MiscellaneousCode subfolder.

DSUtils.cp is in the Utilities pseudo-folder in the project, but not in the file system! Fix
that in both Ngale 5.8 and 5.9.

-------------------------------------------------------------------------------

18 August - 8 Sept.

Work on issue #169: courtesy accidentals are too obtrusive. Why? Maybe reduce the size
of the accidentals? That's not as easy as I thought, but Gould doesn't say courtesy
accidentals should or even can be smaller than normal. The main problem seems to be
simply that, for a given horizontal offset, courtesy accidentals are further from their
notes than normal accidentals! There's a config field for this -- courtesyAccLXD -- so
just changing that (and courtesyAccRXD) should solve the problem. Currently courtesyAccLXD
= 6, & courtesyAccRXD = 8; decrease both by 1 => ??

	SignedByte	courtesyAccRXD;		/* G: Courtesy accidental H offset from right paren. (8th-spaces) */
	SignedByte	courtesyAccLXD;		/* G: Left paren. H offset from courtesy accidental (8th-spaces) */

Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=100 scalePercent=1536
Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: courtesyAccLXD=6 deltaXL=4 xdLParen=1946 deltaXR=5 xdRParen=2018
Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=100 scalePercent=70
Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: courtesyAccLXD=6 deltaXL=3 xdLParen=2930 deltaXR=4 xdRParen=2986
Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=75 scalePercent=52
Aug 31 01:58:34 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=75 scalePercent=1536
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=100 scalePercent=1536
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: courtesyAccLXD=6 deltaXL=4 xdLParen=1946 deltaXR=5 xdRParen=2018
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=100 scalePercent=70
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: courtesyAccLXD=6 deltaXL=3 xdLParen=2930 deltaXR=4 xdRParen=2986
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=75 scalePercent=52
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=75 scalePercent=1536
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: courtesyAccLXD=6 deltaXL=4 xdLParen=3864 deltaXR=5 xdRParen=3936
Aug 31 01:58:38 DonDualG5 Ngale[77479]: debug. DrawAcc: config.courtesyAccSize=70 sizePercent=100 scalePercent=70

With courtesyAccLXD = 2, & courtesyAccRXD = 12:

Oops, no, the comments on those fields are accurate; neither controls the distance between
the right paren and notehead! DrawAcc() positions the (left edge of) the right paren where the
(left edge of) the accidental would be if it wasn't in parens; but right paren is narrower
than an accidental, so move it the right a bit => looks OK!

Also, _courtesyAccSize_ controls the size of the PARENTHESES, not the accidental, so rename the
field to _courtesyAccPSize_. (And it affects their size in PostScript only, not on screen.)

-------------------------------------------------------------------------------

9 Sept. - 13 Oct.

Ugh. My new positioning of courtesy accidentals and their surrounding parentheses is
worse than those in the score of my violin concerto %^&#%#%#(* !  Cf. e.g. 2nd movement,
page 9. What happened? Would be nice to see when the problem was introduced (& it could
be in the Prefs, not the executable!); but the only old executables I still have are
5.5, 5.6, 5.8b6, and 5.8b8! %#$(*@^#%#$*  But _every_ old version for the last several
years should be available from the git repository. How to retrieve? Ah: e.g.,

	git show a2b95716c6136631990be7bcfd3ee01f20edf75e:Nightingale.app.zip > Ngale.zip

OK. Check courtesy accidentals in violin concerto, II, p. 9, m. 68, fl. and m. 67, tr. =>
w/ Ngale 5.7 and current Nightingale Prefs, parens are too small & too tight. W/ Ngale 5.7 and
Nightingale Prefs of 16 May 2018 => parens are full size & the old spacing! So the
problem is in the Prefs file, at least in part.

W/ Ngale 5.7 and Nightingale Prefs of 31 Aug. 2019 (Nightingale AMNF Prefs_CAccsPblm) => parens
are smaller & spacing is tighter but not too tight; so the real problem seems to be combination
of changes to the Prefs & to the code. W/ Ngale 5.7:

Prefs of 16 May 2018: (100)courtesyAccLXD=6  (101)courtesyAccRXD=8  (102)courtesyAccYD=8  (103)courtesyAccSize=100
Prefs_CAccsPblm:	  (100)courtesyAccLXD=8  (101)courtesyAccRXD=6  (102)courtesyAccYD=8  (103)courtesyAccSize=70

-------------------------------------------------------------------------------

19-21 Oct.

With Resorcerer, change courtesyAccLXD, courtesyAccRXD, & courtesyAccSize back to the
values of 16 May 2018 => courtesy accidentals in violin concerto, II, p. 9, m. 68, fl.
and m. 67, tr. are back to the way they were before! So now it looks like the only
problem was the Prefs changes didn't do what I wanted! Try just changing RXD to 7, i.e.

					  (100)courtesyAccLXD=6  (101)courtesyAccRXD=7  (102)courtesyAccYD=8  (103)courtesyAccSize=100

Looks good, the best yet :-) . But that's with Ngale 5.8.9; try 5.8.10...

					  (100)courtesyAccLXD=7  (101)courtesyAccRXD=6  (102)courtesyAccYD=8  (103)courtesyAccPSize=100
					  
%^#*$)#@$@)(#  Values of LXD and RXD are swapped!!!! What the....!?

I'll be darned: the declarations of LXD and RXD are swapped in NMiscTypes.h!!! Swap them back =>
OK, whew.

-------------------------------------------------------------------------------

24-27 Oct.

Work on issue #180, flow-in text crashes.

More from David A.:

(1) When you OK the flow-in text dialog, the cursor should change to an upside-down “T” (more or
less), and the box at the bottom left of the window should display the first syllable in
boldface. Does that happen? Yes when Ngale doesn't crash; yes when it does.

(2) When you click to place the first syllable, does the content of the box at bottom left
change? Yes when Ngale doesn't crash; NO when it does!

This suggests the crash is in InsertNewGraphic(), called from InsertSyllable().

Try to flow in "Is operation in a torn off window or not" =>
	debug. <InsertSyllable: pL=10 lastGrL=0 stf=1 v=1 lyricLen=40 pitchLev=14 theFont=4 theStyle.fontSize=4
	debug. <InsertNewGraphic: pL=10 stf=1 v=1 w='Is'
	debug. >InsertNewGraphic: pL=10 stf=1 v=1 w='^BIs' newL=29
	debug. >InsertSyllable: pL=10 lastGrL=29
	debug. <InsertNewGraphic: pL=11 stf=1 v=1 w='operation'
	debug. >InsertNewGraphic: pL=11 stf=1 v=1 w='	operationgǖ�^_���V�' newL=30
	debug. <InsertNewGraphic: pL=12 stf=1 v=1 w='in'
	debug. >InsertNewGraphic: pL=12 stf=1 v=1 w='^BinԿ��' newL=31
	debug. <InsertNewGraphic: pL=13 stf=1 v=1 w='a'
	debug. >InsertNewGraphic: pL=13 stf=1 v=1 w='^Aa^_Կ��' newL=32

-------------------------------------------------------------------------------

28-29 Oct.

Time to get code under control again!

Commit everything... !? Changes to 41 files!? I don't understand, but oh well. Commit & push to
both develop & develop5p8 => looks OK; but I haven't actually made the 5.8 changes of the last few
months to 5.9 and compiled! Do that; changes to

	NDocAndConfig??.h, Style.h
	DrawNRGR, FlowInText, Initialize

=> 5.9 compiles w/ 888 warnings, as expected! Run it => the palette is drawn, & the misbehaving
dialogs (at least Add Modifier) work fine!! HOWEVER, this is on the G5 :-) . Need to test it on
an Intel machine -- and soon, before I inadvertently upgrade past OS 10.13 :-( .

-------------------------------------------------------------------------------

4 Nov.

I'm still not confident that both the repository <develop> branch (5.9.x) and <develop5p8> branch
(5.8.x) are what they should be. Let's make a minor and very low-impact change to each, commit, and
see what happens! What minor change? The score header <comment> field is declared

		unsigned char comment[MAX_COMMENT_LEN+1];

-- which indicates it's a P string; but it's actually a C string. ?? Fix that? Yes.

-------------------------------------------------------------------------------

6-24 Nov.

Work on file-conversion code for OpenFile(), in FileOpen.cp.

Test w/ violin concerto 2nd mvmt. =>

	Notice. CONVERTING VERSION 'N105' FILE.
	info. Displaying Document header (ID 1):
	info.   origin.h=-20120  .v=-20120  paperRect.top=0  .left=1  .bottom=40  .right=-20480
	info.   origPaperRect.top=0  .left=4  .bottom=0  .right=0
	info.   marginRect.top=-16385  .left=-8464  .bottom=-24381  .right=1280
	info.   currentSheet=0  numSheets=5  firstSheet=-16385  firstPageNumber=-8464  startPageNumber=0
	info.   numRows=2  numCols=7108  pageType=-4704  measSystem=-26932
	info. Displaying Score header (ID 1):
	info.   nstaves=15  nsystems=36  spacePercent=72  srastral=7  altsrastral=2
	info.   tempo=999  channel=1  velocity=1  headerStrOffset=156436  footerStrOffset=156440  dIndentOther=464
	info.   firstNames=2  otherNames=1  lastGlobalFont=0
	info.   aboveMN=1  sysFirstMN=1  startMNPrint1=0  firstMNNumber=1
	info.   nfontsUsed=3  musFontName='Briard'
	info.   magnify=1  selStaff=1  currentSystem=29  spaceTable=0  htight=100
	info.   lookVoice=-1  ledgerYSp=12  deflamTime=50  colorVoices=2  dIndentFirst=1136
	info. Displaying Document header (ID 2):
	info.   origin.h=-20120  .v=-20120  paperRect.top=0  .left=1  .bottom=40  .right=-20480
	info.   origPaperRect.top=0  .left=4  .bottom=0  .right=0
	info.   marginRect.top=-16385  .left=-8464  .bottom=-24381  .right=1280
	info.   currentSheet=0  numSheets=5  firstSheet=-16385  firstPageNumber=-8464  startPageNumber=0
	info.   numRows=2  numCols=7108  pageType=-4704  measSystem=-26932
	Notice. Checking Document header: 3 error(s) found in Document header.  (OpenFile)
	ERROR. 3 error(s) found in Document header.  (OpenFile)
	Warning. * StopInform alertID=464
	ERROR. Can't open the file. errCode=-997 errInfo=0  (OpenError)
	Warning. Error ID=-997 (error code=0).
	
The errors in the doc header we're catching are firstPageNumber, numCols, and pageType;
those all look like garbage, and Ngale 5.8.9 says firstPageNumber is 0, not -8464.
numSheets=5 looks reasonable, but 5.8.9 says it's 36.
firstSheet=-16385 looks like trash; 5.8.9 says it's 0.
paperRect doesn't make sense. Etc. etc.
Are _any_ of the Document header fields correct? It's not obvious! Ah-hah: I'm doing

			errCode = FSRead(refNum, &count, &doc->origin);

-- i.e., reading into doc instead of docN105! Correct that => OK.

Now, open violin concerto 2nd mvmt. =>  
	info. Displaying Score header (ID 3):
	info.   nstaves=15  nsystems=36  spacePercent=72  srastral=7  altsrastral=2
	info.   tempo=999  channel=1  velocity=1  headerStrOffset=156436  footerStrOffset=156440  dIndentOther=464
	info.   firstNames=2  otherNames=1  lastGlobalFont=0
	info.   aboveMN=1  sysFirstMN=1  startMNPrint1=0  firstMNNumber=1
	info.   nfontsUsed=3  musFontName='Briard'
	info.   magnify=1  selStaff=1  currentSystem=29  spaceTable=0  htight=100
	info.   lookVoice=-1  ledgerYSp=12  deflamTime=50  colorVoices=2  dIndentFirst=1136
	Notice. Checking Score header: No errors found.  (CheckScoreHdr)
	ERROR. LAST OBJECT TYPE=14384 BUT SHOULD BE 25.
	ERROR. Can't open the file. errCode=-996 errInfo=-999  (OpenError)
	
Why? The "Files and Troubleshooting" doc says (referring to N105 format files) Score
header size is 2148, but OpenFile() in v. 5.9.1 says:

	info. Header size for Document=72, for Score=2492, for N105 Score=2350

What is the N105 header size really?? OpenFile() in v. 5.8.10 says:

	info. Header size for Document=72, for Score=2148

So the 5.9.x SCOREHEADER_N105 takes 202 bytes more than the 5.8.x SCOREHEADER -- but the
declarations are the same. ?!? To see where the discrepancy is:

	if (DETAIL_SHOW) LogPrintf(LOG_DEBUG, "Offset of doc->tailL=%lu, ->nFontRecords=%lu, ->nfontsUsed=%lu, ->yBetweenSys=%lu\n",
		(long)(&doc->tailL)-(long)(&doc->headL), (long)(&doc->nFontRecords)-(long)(&doc->headL),
		(long)(&doc->nfontsUsed)-(long)(&doc->headL), (long)(&doc->yBetweenSys)-(long)(&doc->headL));

In 5.8.10:
	debug. Offset of doc->comment[0]=12, spacePercent=270, fillerMB=291, nFontRecords=309, nfontsUsed=850, yBetweenSys=1634

In 5.9.1:
	debug. Offset of doc->comment[0]=12, spacePercent=278, fillerMB=303, nFontRecords=327, nfontsUsed=988, yBetweenSys=1776

At comment[0], there's no difference; at spacePercent it's 8. fillerMB it's 12, at nFontRecords
18, at nfontsUsed 138, at yBetweenSys 142. It realllly looks like compiled code for 5.9.1 simply
isn't packing bit fields at all! $@%&!#@&!#(^   BUT WAIT! I'm displaying offsets in <doc> (in
N106 format); I want aDocN105! That gives

	debug. Offset of aDocN105.comment[0]=12, spacePercent=270, fillerMB=291, nFontRecords=309, nfontsUsed=850, yBetweenSys=1634

...just as with Ngale 5.8.10. So that was a wild goose chase -- but still, why does the 5.9.x
SCOREHEADER_N105 take 202 bytes more than the 5.8.x SCOREHEADER? One reason: VOICEINFO in 5.9.x
takes 3 bytes; in 5.8.x, it took only 2! Have SCOREHEADER_N105 include VOICEINFON105 instead of
VOICEINFO =>

	info. Header size for Document=72, for Score=2492, for N105 Score=2148

...as it should be! And Ngale seems now to read and convert 'N105' headers correctly.

-------------------------------------------------------------------------------

28 November - 10 December

Continuing work on file-conversion code for OpenFile(), now to get Ngale to read and convert the
subobject and object heaps.

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=376078172 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=376078176 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	ERROR. Header for heap 1 objSize is 0, but expected objSize 346 (ReadHeapHdr)
	ERROR. Can't open the file. errCode=251 errInfo=1  (OpenError)

What size should the code expect TAIL subobjs to be? Not that there are any :-) . With Ngale 5.8.9:

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=3077504 objSize=346 type=0 ff=7 nO=8 nf=1 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=3077508 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=3 blk=3077512 objSize=30 type=2 ff=7 nO=64 nf=57 ll=0 FPos:3978
	debug. etc. etc. etc.
	
So why do I now expect TAIL objSize to be the same as HEAD size?  This must result from my change
of today in ReadSubHeaps(), which calls ReadHeapHdr()... Ah, got it. Now:

	Notice. Checking Score header: No errors found.  (CheckScoreHdr)
	info. stringPoolSize=306
	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=376078172 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=376078176 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=23 blk=376078180 objSize=30 type=2 ff=26 nO=64 nf=17 ll=0 FPos:3978
	ERROR. Header for heap 2 objSize is 30, but expected objSize 58 (ReadHeapHdr)
	ERROR. Can't open the file. errCode=251 errInfo=2  (OpenError)

?!? "Expected" sizes are set by InitAllHeaps(), via:

			hp->objSize = subObjLength[i];

...and vars.h says:

short subObjLength[] = {
		sizeof(PARTINFO),	/* HEADER subobject */
		0,					/* No TAIL subobjects */
		sizeof(ANOTE),		/* SYNC subobject */
		sizeof(ARPTEND),	/* etc. */
		...

So we need:

short subObjLengthN105[] = {
		sizeof(PARTINFO_N105),	/* HEADER subobject */
		0,						/* No TAIL subobjects */
		sizeof(ANOTE_N105),		/* SYNC subobject */
		sizeof(ARPTEND_N105),	/* etc. */
		...

Done. Now trying to open a valid N105 file dies with

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=376078172 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=376078176 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=23 blk=376078180 objSize=30 type=2 ff=26 nO=64 nf=17 ll=0 FPos:3978
	debug. ReadHeapHdr: hp 3 (REPEATEND) nFObjs=1 blk=3067692 objSize=6 type=14 ff=3 nO=8 nf=5 ll=0 FPos:5330
	ERROR. Header for heap 3 type is 14, but expected type 3 (ReadHeapHdr)
	ERROR. Can't open the file. errCode=217 errInfo=3  (OpenError)
	Warning. File is probably damaged: heap header contains incorrect type (heap object type=3).

Since it's a valid file, the Header for heap 3 type is really 3, so we're looking for it in the
wrong place.

File 1CourtesyAcc.ngl has (besides the default stuff at the beginning of the 1st system)
just one note on two staves. Open it with 5.8.9 =>

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=3144892 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=3144896 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=1 blk=3144900 objSize=30 type=2 ff=2 nO=64 nf=62 ll=0 FPos:3978
	debug. ReadHeapHdr: hp 3 (REPEATEND) nFObjs=0 blk=3144904 objSize=6 type=3 ff=1 nO=8 nf=7 ll=0 FPos:4026
	debug. ReadHeapHdr: hp 4 (PAGE) nFObjs=0 blk=3144908 objSize=0 type=4 ff=0 nO=0 nf=0 ll=0 FPos:4044
	debug. ReadHeapHdr: hp 5 (SYSTEM) nFObjs=0 blk=3144912 objSize=0 type=5 ff=0 nO=0 nf=0 ll=0 FPos:4062
	debug. ReadHeapHdr: hp 6 (STAFF) nFObjs=4 blk=3144916 objSize=50 type=6 ff=8 nO=16 nf=11 ll=0 FPos:4080
	debug. ReadHeapHdr: hp 7 (MEASURE) nFObjs=2 blk=3144920 objSize=40 type=7 ff=3 nO=12 nf=9 ll=0 FPos:4298
	debug. ReadHeapHdr: hp 8 (CLEF) nFObjs=2 blk=3144924 objSize=10 type=8 ff=3 nO=8 nf=5 ll=0 FPos:4396
	debug. ReadHeapHdr: hp 9 (KEYSIG) nFObjs=2 blk=3144928 objSize=24 type=9 ff=3 nO=8 nf=5 ll=0 FPos:4434
	debug. ReadHeapHdr: hp 10 (TIMESIG) nFObjs=2 blk=3144932 objSize=12 type=10 ff=3 nO=8 nf=5 ll=0 FPos:4500
	debug. ReadHeapHdr: hp 11 (BEAMSET) nFObjs=0 blk=3144936 objSize=6 type=11 ff=1 nO=12 nf=11 ll=0 FPos:4542
	debug. ReadHeapHdr: hp 12 (CONNECT) nFObjs=4 blk=3144940 objSize=12 type=12 ff=8 nO=16 nf=11 ll=0 FPos:4560
	debug. ReadHeapHdr: hp 13 (DYNAMIC) nFObjs=0 blk=3144944 objSize=14 type=13 ff=1 nO=8 nf=7 ll=0 FPos:4626
	debug. ReadHeapHdr: hp 14 (MODNR) nFObjs=0 blk=3144948 objSize=6 type=14 ff=1 nO=8 nf=7 ll=0 FPos:4644
	debug. ReadHeapHdr: hp 15 (GRAPHIC) nFObjs=0 blk=3144952 objSize=6 type=15 ff=1 nO=8 nf=7 ll=0 FPos:4662
	debug. ReadHeapHdr: hp 16 (OCTAVE) nFObjs=0 blk=3144956 objSize=4 type=16 ff=1 nO=8 nf=7 ll=0 FPos:4680
	debug. ReadHeapHdr: hp 17 (SLUR) nFObjs=0 blk=3144960 objSize=42 type=17 ff=1 nO=8 nf=7 ll=0 FPos:4698
	debug. ReadHeapHdr: hp 18 (TUPLET) nFObjs=0 blk=3144964 objSize=4 type=18 ff=1 nO=8 nf=7 ll=0 FPos:4716
	debug. ReadHeapHdr: hp 19 (GRSYNC) nFObjs=0 blk=3144968 objSize=30 type=19 ff=1 nO=12 nf=11 ll=0 FPos:4734
	debug. ReadHeapHdr: hp 20 (TEMPO) nFObjs=0 blk=3144972 objSize=0 type=20 ff=0 nO=0 nf=0 ll=0 FPos:4752
	debug. ReadHeapHdr: hp 21 (SPACER) nFObjs=0 blk=3144976 objSize=0 type=21 ff=0 nO=0 nf=0 ll=0 FPos:4770
	debug. ReadHeapHdr: hp 22 (ENDING) nFObjs=0 blk=3144980 objSize=0 type=22 ff=0 nO=0 nf=0 ll=0 FPos:4788
	debug. ReadHeapHdr: hp 23 (PSEUDOMEAS) nFObjs=0 blk=3144984 objSize=6 type=23 ff=1 nO=8 nf=7 ll=0 FPos:4806
	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824

With the current 5.9.1 =>

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=3144892 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=3144896 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=1 blk=3144900 objSize=30 type=2 ff=2 nO=64 nf=62 ll=0 FPos:3978
	debug. ReadHeapHdr: hp 3 (REPEATEND) nFObjs=0 blk=0 objSize=0 type=0 ff=47 nO=64720 nf=0 ll=5 FPos:4054
	ERROR. Header for heap 3 type is 0, but expected type 3 (ReadHeapHdr)
	ERROR. Can't open the file. errCode=217 errInfo=3  (OpenError)

Yep: the REPEATEND heap starts at 4026, but we're looking for it at 4054, 28 bytes too far --
and 28 is the increase in size of ANOTE from N105 to N106. ??

For N105 files, ReadObjHeap() needs to use sizeof(N105 SUPEROBJECT) instead of (SUPEROBJECT)!
Change that =>

	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=3144892 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	debug. ReadHeapHdr: hp 1 (TAIL) nFObjs=0 blk=3144896 objSize=0 type=1 ff=0 nO=0 nf=0 ll=0 FPos:3960
	debug. ReadHeapHdr: hp 2 (SYNC) nFObjs=1 blk=3144900 objSize=30 type=2 ff=2 nO=64 nf=62 ll=0 FPos:3978
	debug. ReadHeapHdr: hp 3 (REPEATEND) nFObjs=0 blk=3144904 objSize=6 type=3 ff=1 nO=8 nf=7 ll=0 FPos:4026
	debug. ReadHeapHdr: hp 4 (PAGE) nFObjs=0 blk=3144908 objSize=0 type=4 ff=0 nO=0 nf=0 ll=0 FPos:4044
	debug. ReadHeapHdr: hp 5 (SYSTEM) nFObjs=0 blk=3144912 objSize=0 type=5 ff=0 nO=0 nf=0 ll=0 FPos:4062
	debug. ReadHeapHdr: hp 6 (STAFF) nFObjs=4 blk=3144916 objSize=50 type=6 ff=8 nO=16 nf=11 ll=0 FPos:4080
	debug. ReadHeapHdr: hp 7 (MEASURE) nFObjs=2 blk=3144920 objSize=40 type=7 ff=3 nO=12 nf=9 ll=0 FPos:4298
	debug. ReadHeapHdr: hp 8 (CLEF) nFObjs=2 blk=3144924 objSize=10 type=8 ff=3 nO=8 nf=5 ll=0 FPos:4396
	debug. ReadHeapHdr: hp 9 (KEYSIG) nFObjs=2 blk=3144928 objSize=24 type=9 ff=3 nO=8 nf=5 ll=0 FPos:4434
	debug. ReadHeapHdr: hp 10 (TIMESIG) nFObjs=2 blk=3144932 objSize=12 type=10 ff=3 nO=8 nf=5 ll=0 FPos:4500
	debug. ReadHeapHdr: hp 11 (BEAMSET) nFObjs=0 blk=3144936 objSize=6 type=11 ff=1 nO=12 nf=11 ll=0 FPos:4542
	debug. ReadHeapHdr: hp 12 (CONNECT) nFObjs=4 blk=3144940 objSize=12 type=12 ff=8 nO=16 nf=11 ll=0 FPos:4560
	debug. ReadHeapHdr: hp 13 (DYNAMIC) nFObjs=0 blk=3144944 objSize=14 type=13 ff=1 nO=8 nf=7 ll=0 FPos:4626
	debug. ReadHeapHdr: hp 14 (MODNR) nFObjs=0 blk=3144948 objSize=6 type=14 ff=1 nO=8 nf=7 ll=0 FPos:4644
	debug. ReadHeapHdr: hp 15 (GRAPHIC) nFObjs=0 blk=3144952 objSize=6 type=15 ff=1 nO=8 nf=7 ll=0 FPos:4662
	debug. ReadHeapHdr: hp 16 (OCTAVE) nFObjs=0 blk=3144956 objSize=4 type=16 ff=1 nO=8 nf=7 ll=0 FPos:4680
	debug. ReadHeapHdr: hp 17 (SLUR) nFObjs=0 blk=3144960 objSize=42 type=17 ff=1 nO=8 nf=7 ll=0 FPos:4698
	debug. ReadHeapHdr: hp 18 (TUPLET) nFObjs=0 blk=3144964 objSize=4 type=18 ff=1 nO=8 nf=7 ll=0 FPos:4716
	debug. ReadHeapHdr: hp 19 (GRSYNC) nFObjs=0 blk=3144968 objSize=30 type=19 ff=1 nO=12 nf=11 ll=0 FPos:4734
	debug. ReadHeapHdr: hp 20 (TEMPO) nFObjs=0 blk=3144972 objSize=0 type=20 ff=0 nO=0 nf=0 ll=0 FPos:4752
	debug. ReadHeapHdr: hp 21 (SPACER) nFObjs=0 blk=3144976 objSize=0 type=21 ff=0 nO=0 nf=0 ll=0 FPos:4770
	debug. ReadHeapHdr: hp 22 (ENDING) nFObjs=0 blk=3144980 objSize=0 type=22 ff=0 nO=0 nf=0 ll=0 FPos:4788
	debug. ReadHeapHdr: hp 23 (PSEUDOMEAS) nFObjs=0 blk=3144984 objSize=6 type=23 ff=1 nO=8 nf=7 ll=0 FPos:4806
	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	ERROR. Header for heap 24 objSize is 46, but expected objSize 56 (ReadHeapHdr)
	ERROR. Can't open the file. errCode=251 errInfo=24  (OpenError)
	
Better! It looks like the problem isn't ReadHeapHdr(), but ReadObjHeap().

-------------------------------------------------------------------------------

11 - 27 Dec.
	
Work on ReadObjHeap(); now opening file '1CourtesyAcc.ngl' gives...

	...
	debug. ReadHeapHdr: hp 0 (HEAD) nFObjs=4 blk=3144892 objSize=346 type=0 ff=8 nO=16 nf=9 ll=0 FPos:2558
	...
	debug. ReadHeapHdr: hp 23 (PSEUDOMEAS) nFObjs=0 blk=3144984 objSize=6 type=23 ff=1 nO=8 nf=7 ll=0 FPos:4806
	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: type 4 object objLength=44 objLength_5=38 len=38
	debug. ReadObjHeap: type 5 object objLength=50 objLength_5=44 len=44
	debug. ReadObjHeap: type 6 object objLength=36 objLength_5=30 len=30
	debug. ReadObjHeap: type 12 object objLength=32 objLength_5=26 len=26
	debug. ReadObjHeap: type 8 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: type 9 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: type 10 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: type 7 object objLength=54 objLength_5=46 len=46
	debug. ReadObjHeap: type 2 object objLength=32 objLength_5=26 len=26
	debug. ReadObjHeap: type 1 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24 len=24
	Dec 15 15:17:20: --- last message repeated 1 time ---
	ERROR. Object type=50 is illegal. (ReadObjHeap)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)

Much better! In fact, the object types are all just what they should be, except the type
1 object is TAIL, so we've tried to parse a non-existent object at the end! The loop just
tries to read nFObjs =17 objects; is that wrong? Nope; 5.8.9 also says

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824

Not only nFObjs, but everything in the above line is exactly the same! But there are
actually only 11 objects, 6 fewer, in the main object list. Is the difference the Master
Page object list? Undoubtedly; the Master Page object list contains 6 objects!

Need to add LogPrintf's to 5.8.x and open 1CourtesyAcc.ngl. Oops: 5.8.x doesn't compile!
$*#)%$#%()#$  But just need to rename <destinationMatch> to <fmsDestinationMatch> in a
few places... Done. Open open 1CourtesyAcc.ngl with 5.8.10 =>

	debug. ReadHeapHdr: hp 23 (PSEUDOMEAS) nFObjs=0 blk=3144984 objSize=6 type=23 ff=1 nO=8 nf=7 ll=0 FPos:4806
	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: type 0 object objLength=24 len=24
	debug. ReadObjHeap: type 4 object objLength=38 len=38
	debug. ReadObjHeap: type 5 object objLength=44 len=44
	debug. ReadObjHeap: type 6 object objLength=30 len=30
	debug. ReadObjHeap: type 12 object objLength=26 len=26
	debug. ReadObjHeap: type 8 object objLength=24 len=24
	debug. ReadObjHeap: type 9 object objLength=24 len=24
	debug. ReadObjHeap: type 10 object objLength=24 len=24
	debug. ReadObjHeap: type 7 object objLength=46 len=46
	debug. ReadObjHeap: type 2 object objLength=26 len=26
	debug. ReadObjHeap: type 1 object objLength=24 len=24
	debug. ReadObjHeap: type 0 object objLength=24 len=24
	debug. ReadObjHeap: type 4 object objLength=38 len=38
	debug. ReadObjHeap: type 5 object objLength=44 len=44
	debug. ReadObjHeap: type 6 object objLength=30 len=30
	debug. ReadObjHeap: type 12 object objLength=26 len=26
	debug. ReadObjHeap: type 1 object objLength=24 len=24
	Notice. Music font is 'Briard' (font no. 1980).  (InitDocMusicFont)
	info. Opened file '1CourtesyAcc.ngl'.

So 5.9.1 finds a 2nd type 0 object, then dies, where 5.8.10 finds a type 4, beginning the
Master Page object list. Huh? Need more details.

With 5.8.10:

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: src=ac8938 dst=ac882e offset:0 type=0
	...
	debug. ReadObjHeap: src=ac8a6a dst=ac89fa offset:306 type=1
	debug. ReadObjHeap: src=ac8a82 dst=ac8a28 offset:330 type=0
	debug. ReadObjHeap: src=ac8a9a dst=ac8a56 offset:354 type=4
	debug. ReadObjHeap: src=ac8ac0 dst=ac8a84 offset:392 type=5
	debug. ReadObjHeap: src=ac8aec dst=ac8ab2 offset:436 type=6
	debug. ReadObjHeap: src=ac8b0a dst=ac8ae0 offset:466 type=12
	debug. ReadObjHeap: src=ac8b24 dst=ac8b0e offset:492 type=1
	Notice. Music font is 'Briard' (font no. 1980).  (InitDocMusicFont)
	info. Opened file '1CourtesyAcc.ngl'.

With 5.9.1:

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: nFObjs=17 heapSizeAllObjs=782 count=4 sizeAllObjs=516
	debug. ReadObjHeap: src=ace142 dst=ace038 offset:0 type=0
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24 len=24
	...
	debug. ReadObjHeap: type 2 object objLength=32 objLength_5=26 len=26
	debug. ReadObjHeap: src=ace274 dst=ace268 offset:306 type=1				DELTA = -12 (base 10)
	debug. ReadObjHeap: type 1 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: src=ace28c dst=ace2a0 offset:330 type=0				DELTA = +20 " "
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: src=ace2a4 dst=ace2d8 offset:354 type=0
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24 len=24
	debug. ReadObjHeap: src=ace2bc dst=ace310 offset:378 type=50
	ERROR. Object type=50 is illegal. (ReadObjHeap)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)

What do we do once we have the src & dst addresses & len?

		BlockMove(src, dst, len);

So 5.8.10 is always moving blocks to lower addresses; 5.9.1 starts by doing that, but
switches to moving them to higher addresses, undoubtedly clobbering yet-to-be-handled
stuff! Why?

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: nFObjs=17 heapSizeAllObjs=782 count=4 sizeAllObjs=516
	debug. ReadObjHeap: src=acbb42 dst=acba38 dst-src:-266 offset:0 type=0
	debug. ReadObjHeap: src=acbb5a dst=acba70 dst-src:-234 offset:24 type=4		d(dst-src)=32
	debug. ReadObjHeap: src=acbb80 dst=acbaa8 dst-src:-216 offset:62 type=5		d(dst-src)=18
	debug. ReadObjHeap: src=acbbac dst=acbae0 dst-src:-204 offset:106 type=6	d(dst-src)=12
	debug. ReadObjHeap: src=acbbca dst=acbb18 dst-src:-178 offset:136 type=12	d(dst-src)=26
	debug. ReadObjHeap: src=acbbe4 dst=acbb50 dst-src:-148 offset:162 type=8	d(dst-src)=30
	debug. ReadObjHeap: src=acbbfc dst=acbb88 dst-src:-116 offset:186 type=9	d(dst-src)=32
	debug. ReadObjHeap: src=acbc14 dst=acbbc0 dst-src:-84 offset:210 type=10	d(dst-src)=32
	debug. ReadObjHeap: src=acbc2c dst=acbbf8 dst-src:-52 offset:234 type=7		d(dst-src)=32
	debug. ReadObjHeap: src=acbc5a dst=acbc30 dst-src:-42 offset:280 type=2		d(dst-src)=10
	debug. ReadObjHeap: src=acbc74 dst=acbc68 dst-src:-12 offset:306 type=1		d(dst-src)=30
	debug. ReadObjHeap: src=acbc8c dst=acbca0 dst-src:20 offset:330 type=0		d(dst-src)=32
	debug. ReadObjHeap: src=acbca4 dst=acbcd8 dst-src:52 offset:354 type=0		d(dst-src)=32
	debug. ReadObjHeap: src=acbcbc dst=acbd10 dst-src:84 offset:378 type=50		d(dst-src)=32
	ERROR. Object type=50 is illegal. (ReadObjHeap)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)
	
Duh:

	src += len { = objLength_5[type] }
	dst += sizeof(SUPEROBJECT) { = 38(16) = 56 }

Ah-hah! Objects of N105 length are packed in and need to be moved to have room to expand
to N106 length -- but doing that from front to back results in clobbering later objs
before they're moved. So either have to move them in reverse order, or copy them to a
separate chunk of memory large enough to handle the expansion. By far the most space in
the object heap of any reasonable Ngale file will be Syncs; they grow by a factor of 32/26.
But much safer to use the max growth factor of any object!; what is that?

	type 0 objLength=30 objLength_5=24	factor=1.250
	type 1 objLength=30 objLength_5=24	factor=1.250
	type 2 objLength=32 objLength_5=26	factor=1.231
	type 3 objLength=38 objLength_5=32	factor=1.188
	type 4 objLength=44 objLength_5=38	factor=1.158
	type 5 objLength=50 objLength_5=44	factor=1.136
	type 6 objLength=36 objLength_5=30	factor=1.200
	type 7 objLength=54 objLength_5=46	factor=1.174
	type 8 objLength=30 objLength_5=24	factor=1.250
	type 9 objLength=30 objLength_5=24	factor=1.250
	type 10 objLength=30 objLength_5=24	factor=1.250
	type 11 objLength=38 objLength_5=26	factor=1.462
	type 12 objLength=32 objLength_5=26	factor=1.231
	type 13 objLength=36 objLength_5=30	factor=1.200
	type 14 (no objects of this type, only subobjects)	
	type 15 objLength=56 objLength_5=44	factor=1.273
	type 16 objLength=52 objLength_5=40	factor=1.300
	type 17 objLength=42 objLength_5=30	factor=1.400
	type 18 objLength=50 objLength_5=40	factor=1.250
	type 19 objLength=30 objLength_5=24	factor=1.250
	type 20 objLength=48 objLength_5=38	factor=1.263
	type 21 objLength=34 objLength_5=28	factor=1.214
	type 22 objLength=40 objLength_5=32	factor=1.250
	type 23 objLength=30 objLength_5=24	factor=1.250
	
The greatest ratio is 1.462 (for type 11 objects). Let's round up to 1.5. ??

-------------------------------------------------------------------------------

28 Dec. - 15 Jan. 2020

But wait! What we're reading in is objects of either N105 or N106 length, yes, but the
length we want to expand to is the 5.9.x SUPEROBJECT size regardless!!

So ReadObjHeap() is simpler than I thought. After reading the objects in, it just pads
them to sizeof(SUPEROBJECT). The description of the process it appears it's been
following is "We do this by preallocating the entire heap with room for all the objects
plus all the padding; reading the variable-sized objects into it preceded by the total
padding; and then moving the objects, starting at the beginning of the heap, down
into their correct positions, followed by per-object padding as needed." That sounds
exactly right! Why doesn't it work?

Opening '1CourtesyAcc.ngl' with 5.8.10 gives...

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	debug. ReadObjHeap: src=aa3138 dst=aa302e dst-src:-266 offset:0 type=0
	debug. ReadObjHeap: src=aa3150 dst=aa305c dst-src:-244 offset:24 type=4
	debug. ReadObjHeap: src=aa3176 dst=aa308a dst-src:-236 offset:62 type=5
	debug. ReadObjHeap: src=aa31a2 dst=aa30b8 dst-src:-234 offset:106 type=6
	debug. ReadObjHeap: src=aa31c0 dst=aa30e6 dst-src:-218 offset:136 type=12
	debug. ReadObjHeap: src=aa31da dst=aa3114 dst-src:-198 offset:162 type=8
	debug. ReadObjHeap: src=aa31f2 dst=aa3142 dst-src:-176 offset:186 type=9
	debug. ReadObjHeap: src=aa320a dst=aa3170 dst-src:-154 offset:210 type=10
	debug. ReadObjHeap: src=aa3222 dst=aa319e dst-src:-132 offset:234 type=7
	debug. ReadObjHeap: src=aa3250 dst=aa31cc dst-src:-132 offset:280 type=2
	debug. ReadObjHeap: src=aa326a dst=aa31fa dst-src:-112 offset:306 type=1
	debug. ReadObjHeap: src=aa3282 dst=aa3228 dst-src:-90 offset:330 type=0
	debug. ReadObjHeap: src=aa329a dst=aa3256 dst-src:-68 offset:354 type=4
	debug. ReadObjHeap: src=aa32c0 dst=aa3284 dst-src:-60 offset:392 type=5
	debug. ReadObjHeap: src=aa32ec dst=aa32b2 dst-src:-58 offset:436 type=6
	debug. ReadObjHeap: src=aa330a dst=aa32e0 dst-src:-42 offset:466 type=12
	debug. ReadObjHeap: src=aa3324 dst=aa330e dst-src:-22 offset:492 type=1

With 5.9.1 it now gives...

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=782  (ReadObjHeap)
	debug. ReadObjHeap: src=b84342 dst=b84238 dst-src:-266 offset:0 type=0
	debug. ReadObjHeap: src=b84360 dst=b84270 dst-src:-240 offset:30 type=0
	debug. ReadObjHeap: src=b8437e dst=b842a8 dst-src:-214 offset:60 type=2
	debug. ReadObjHeap: src=b8439e dst=b842e0 dst-src:-190 offset:92 type=101
	ERROR. Object type=101 is illegal. (ReadObjHeap)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)
	
Oops! For version=='N105', still need
		len = objLength_5[type];

With 5.9.1 now, we're back to...

	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=782  (ReadObjHeap)
	debug. ReadObjHeap: src=ad7742 dst=ad7638 dst-src:-266 offset:0 type=0
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad775a dst=ad7670 dst-src:-234 offset:24 type=4
	debug. ReadObjHeap: type 4 object objLength=44 objLength_5=38
	debug. ReadObjHeap: src=ad7780 dst=ad76a8 dst-src:-216 offset:62 type=5
	debug. ReadObjHeap: type 5 object objLength=50 objLength_5=44
	debug. ReadObjHeap: src=ad77ac dst=ad76e0 dst-src:-204 offset:106 type=6
	debug. ReadObjHeap: type 6 object objLength=36 objLength_5=30
	debug. ReadObjHeap: src=ad77ca dst=ad7718 dst-src:-178 offset:136 type=12
	debug. ReadObjHeap: type 12 object objLength=32 objLength_5=26
	debug. ReadObjHeap: src=ad77e4 dst=ad7750 dst-src:-148 offset:162 type=8
	debug. ReadObjHeap: type 8 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad77fc dst=ad7788 dst-src:-116 offset:186 type=9
	debug. ReadObjHeap: type 9 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad7814 dst=ad77c0 dst-src:-84 offset:210 type=10
	debug. ReadObjHeap: type 10 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad782c dst=ad77f8 dst-src:-52 offset:234 type=7
	debug. ReadObjHeap: type 7 object objLength=54 objLength_5=46
	debug. ReadObjHeap: src=ad785a dst=ad7830 dst-src:-42 offset:280 type=2
	debug. ReadObjHeap: type 2 object objLength=32 objLength_5=26
	debug. ReadObjHeap: src=ad7874 dst=ad7868 dst-src:-12 offset:306 type=1
	debug. ReadObjHeap: type 1 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad788c dst=ad78a0 dst-src:20 offset:330 type=0
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad78a4 dst=ad78d8 dst-src:52 offset:354 type=0
	debug. ReadObjHeap: type 0 object objLength=30 objLength_5=24
	debug. ReadObjHeap: src=ad78bc dst=ad7910 dst-src:84 offset:378 type=50
	ERROR. Object type=50 is illegal. (ReadObjHeap)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)

The sequence of offsets & types agrees w/ 5.8.10 all the way to offset 354, where type
should be 4 but is 0. Looks like a clobber -- makes sense; dst-src > 0 would do that!
Ah-hah: sizeAllObjsHeap=782 is the same as w/ 5.8.10, but it has to be larger;
sizeAllObjsHeap should always be based on the current SUPEROBJECT. Fix that =>
 
	debug. ReadHeapHdr: hp 24 (OBJECT) nFObjs=17 blk=3144988 objSize=46 type=24 ff=29 nO=64 nf=44 ll=1 FPos:4824
	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=952  (ReadObjHeap)
	debug. ReadObjHeap: src=accbec dst=acca38 dst-src:-436 offset:0 type=0
	debug. ReadObjHeap: src=accc04 dst=acca70 dst-src:-404 offset:24 type=4
	debug. ReadObjHeap: src=accc2a dst=accaa8 dst-src:-386 offset:62 type=5
	debug. ReadObjHeap: src=accc56 dst=accae0 dst-src:-374 offset:106 type=6
	debug. ReadObjHeap: src=accc74 dst=accb18 dst-src:-348 offset:136 type=12
	debug. ReadObjHeap: src=accc8e dst=accb50 dst-src:-318 offset:162 type=8
	debug. ReadObjHeap: src=accca6 dst=accb88 dst-src:-286 offset:186 type=9
	debug. ReadObjHeap: src=acccbe dst=accbc0 dst-src:-254 offset:210 type=10
	debug. ReadObjHeap: src=acccd6 dst=accbf8 dst-src:-222 offset:234 type=7
	debug. ReadObjHeap: src=accd04 dst=accc30 dst-src:-212 offset:280 type=2
	debug. ReadObjHeap: src=accd1e dst=accc68 dst-src:-182 offset:306 type=1
	debug. ReadObjHeap: src=accd36 dst=accca0 dst-src:-150 offset:330 type=0
	debug. ReadObjHeap: src=accd4e dst=acccd8 dst-src:-118 offset:354 type=4
	debug. ReadObjHeap: src=accd74 dst=accd10 dst-src:-100 offset:392 type=5
	debug. ReadObjHeap: src=accda0 dst=accd48 dst-src:-88 offset:436 type=6
	debug. ReadObjHeap: src=accdbe dst=accd80 dst-src:-62 offset:466 type=12
	debug. ReadObjHeap: src=accdd8 dst=accdb8 dst-src:-32 offset:492 type=1
	Notice. Can't convert 'N105' format files yet.
	Notice. Music font is 'Briard' (font no. 1980).  (InitDocMusicFont)
	ERROR. PROGRAM ERROR: GetSpTimeInfo: can't handle object type -7 (at 0)
	
Much better: looks like the heaps are getting set up correctly! Now to move the contents
of the objects around, in ConvertObjContent()...

-------------------------------------------------------------------------------

16 - 18 Jan.

ConvertObjContent() should go thru the object list:

		for (pL = doc->headL; pL; pL = RightLINK(pL)) { ... }

For each object, first convert the OBJECTHEADER -- but does every object have one?
These objects have one:

0	HEADER_5
	TAIL_5
	SYNC_5
	RPTEND_5
	PAGE_5
5	SYSTEM_5
	STAFF_5
	MEASURE_5
	CLEF_5
	KEYSIG_5
10	TIMESIG_5
	BEAMSET_5
	CONNECT_5
	DYNAMIC_5
	(MODNR)
15	GRAPHIC_5
	OTTAVA_5
	SLUR_5
	TUPLET_5
	GRSYNC_5
20	TEMPO_5
	SPACER_5
	ENDING_5
	PSMEAS_5
	(OBJECT)

Yes: that's every type!

-------------------------------------------------------------------------------

19 - 23(?) Jan.

Comparing DoDebug() output for '1CourtesyAcc.ngl' from the latest to that from 5.8.x
shows OBJECTHEADERs are being converted correctly, except for the flags and oRect.l!!
E.g., the CLEF should be ".VSV.." but it's ".VS...": the _valid_ flag is different.
Why?? Likewise the KEYSIG. Many of the objRect.left's are zero but should be nonzero
-- or maybe it doesn't matter at this point?

From the latest log for opening file '1CourtesyAcc.ngl':

	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=952  (ReadObjHeap)
	debug. ConvertObject: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.              : 00 00 00 00   1f 2f 02 30   00 00 42 d0   02 cc 43 8c
	debug.              : 00 00 02 80   f0 28 3c b0   
	debug. ConvertObject: pL=1 type=0 xd=0 sel=0 vis=0
	debug. ConvertObject: 00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	debug.              : 00 00 00 00   46 69 00 65   00 00 00 00   00 00 00 00
	debug.              : 00 00 72 53   61 76 00 00   
	debug. ConvertObject: pL=2 type=4 xd=0 sel=0 vis=1
	debug. ConvertObject: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.              : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 00
	debug.              : 02 40 00 02   0e 20 23 d0   
	debug. ConvertObject: pL=3 type=5 xd=576 sel=0 vis=1
	debug. ConvertSYSTEM: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.              : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 00
	debug.              : 02 40 00 02   0e 20 23 d0   
	debug. ConvertSYSTEM: sysL=3 type=5 xd=576 sel=0 vis=1
	debug. ConvertSYSTEM: SysRect(t,l,b,r)=7595,25971,22337,-4056
	debug. ConvertObject: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
	debug.              : 00 00 00 00   65 4c 02 73   00 00 00 00   00 04 00 00
	debug.              : a0 8f 00 03   24 02 24 14   
	debug. ConvertObject: pL=4 type=6 xd=0 sel=0 vis=1
	debug. ConvertObject: 00 06 00 04   00 01 00 50   00 00 0c 61   00 00 00 00
	debug.              : 00 00 00 00   5f 10 02 4e   00 00 24 22   95 5a 53 38
	debug.              : 13 67 10 00   00 00 00 24   
	debug. ConvertObject: pL=5 type=12 xd=80 sel=0 vis=1
	debug. ConvertObject: 00 07 00 05   00 01 00 60   00 00 08 73   00 3c 00 71
	debug.              : 00 ca 00 82   2e 74 02 61   93 d0 6b d4   67 55 95 c0
	debug.              : 00 3b 5b 70   a0 65 6b d4   
	debug. ConvertObject: pL=6 type=8 xd=96 sel=0 vis=1
	debug. ConvertObject: 00 08 00 06   00 01 01 b0   00 00 09 71   00 00 00 00
	debug.              : 00 00 00 00   73 65 02 73   00 00 00 23   00 00 00 00
	debug.              : ff ff ff ff   00 00 00 00   
	debug. ConvertObject: pL=7 type=9 xd=432 sel=0 vis=1
	debug. ConvertObject: 00 09 00 07   00 01 01 b0   00 00 0a 76   00 48 00 86
	debug.              : 00 be 00 8e   65 4c 02 73   93 d0 6b d4   f0 28 3e 20
	debug.              : 00 00 00 00   93 d0 6e d8   
	debug. ConvertObject: pL=8 type=10 xd=432 sel=0 vis=1
	debug. ConvertObject: 00 0a 00 08   00 01 02 d0   00 00 07 34   00 24 00 96
	debug.              : 00 e2 00 9a   74 61 02 42   00 00 00 00   00 04 00 00
	debug.              : 00 64 00 03   00 04 00 e2   
	debug. ConvertObject: pL=9 type=7 xd=720 sel=0 vis=0
	debug. ConvertObject: 00 0b 00 09   00 01 00 90   00 00 02 5b   00 5e 00 a0
	debug.              : 00 64 00 a9   6e 74 01 6f   00 00 02 40   06 a8 0e 20
	debug.              : 23 d0 65 73   57 41 00 05   
	debug. ConvertObject: pL=10 type=2 xd=144 sel=0 vis=1
	debug. ConvertObject: 00 00 00 0a   00 00 ff ff   00 00 01 20   00 00 00 00
	debug.              : 00 00 00 00   00 00 00 6c   00 00 00 00   00 00 00 00
	debug.              : 5f 10 02 4e   00 00 00 07   
	debug. ConvertObject: pL=11 type=1 xd=-1 sel=0 vis=0
	Notice. Music font is 'Briard' (font no. 1980).  (InitDocMusicFont)
	ERROR. PROGRAM ERROR: GetSpTimeInfo: can't handle object type 0 (at L0)

The hex dumps are of the first 40 bytes of each object. Comparing the one from
ConvertObject() for the SYSTEM object to the one for ConvertSYSTEM() is after it's
supposedly copied the SYSTEM's systemRect to its new location: they're identical -- and
both nonsense! According to 5.8.x, it should be d576,1704,3616,9168. But maybe it just
hasn't been computed yet? Nope: After the file's opened w/ 5.9.1, DoDebug() says

	info.  2 L 3 xd=576 yd=576 SYSTEM .VS... oRect.l=p0 sRect(t,l,b,r)=d7595,25971,22337,-4056 s#=3616
	Warning. *DCheckNode: SYSTEM L3 HAS GARBAGE systemRect.

Hmmm. On a previous run, it said

	info.  2 L 3 xd=576 yd=576 SYSTEM .VS... oRect.l=p0 sRect(t,l,b,r)=d9168,25971,22337,-24143 s#=3616
	Warning. *DCheckNode: SYSTEM L3 HAS GARBAGE systemRect.

...an equally nonsensical sysRect, but w/ 2 values the same, and the same (nonsensical) systemNum.
Offset in 'N105' format is +12... Let's see what 5.8.10 says for opening '1CourtesyAcc.ngl'
(the "ConvertObject" label is wrong: from OpenFile() just before the call to ConvertScore()):

	debug. ConvertObject: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.              : 00 00 00 00   1f 2f 02 30   a6 38 00 00   00 01 00 00
	debug.              : 00 02 16 25   54 20 00 08   
	debug. ConvertObject: 00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	debug.              : 00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	debug.              : 46 6f 72 53   61 76 c1 d3   
	debug. ConvertObject: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.              : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 02 00 01
	debug.              : 02 40 06 a8   0e 20 23 d0   
	debug. ConvertObject: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
	debug.              : 00 00 00 00   65 4c 02 73   00 00 00 00   00 03 c1 d3
	debug.              : a1 b1 c1 d3   a1 b1 c1 d3   
	debug. ConvertObject: 00 06 00 04   00 01 00 50   00 00 0c 61   00 00 00 00
	debug.              : 00 00 00 00   5f 10 02 4e   00 00 a1 b1   c1 d3 a0 77
	debug.              : a6 38 00 00   00 01 00 00   
	debug. ConvertObject: 00 07 00 05   00 01 00 60   00 00 08 73   00 3c 00 71
	debug.              : 00 ca 00 82   2e 74 02 61   00 00 00 07   00 a9 ad 36
	debug.              : 00 02 00 55   00 02 00 00   
	debug. ConvertObject: 00 08 00 06   00 01 01 b0   00 00 09 71   00 00 00 00
	debug.              : 00 00 00 00   73 65 02 73   04 67 00 00   00 00 00 00
	debug.              : 00 00 46 69   00 65 00 00   
	debug. ConvertObject: 00 09 00 07   00 01 01 b0   00 00 0a 76   00 48 00 86
	debug.              : 00 be 00 8e   65 4c 02 73   02 3d 46 6f   00 53 00 00
	debug.              : 00 00 00 03   00 01 02 40   
	debug. ConvertObject: 00 0a 00 08   00 01 02 d0   00 00 07 34   00 24 00 96
	debug.              : 00 e2 00 9a   74 61 02 42   00 00 00 00   00 03 00 04
	debug.              : 00 64 00 24   00 98 00 e2   
	debug. ConvertObject: 00 0b 00 09   00 01 00 90   00 00 02 5b   00 5e 00 a0
	debug.              : 00 64 00 a9   6e 74 01 6f   00 00 00 3c   00 71 00 ca
	debug.              : 00 82 2e 74   02 61 00 08   
	debug. ConvertObject: 00 00 00 0a   00 00 ff ff   00 00 01 20   00 00 00 00
	debug.              : 00 00 00 00   00 00 00 6c   00 00 0a 76   00 48 00 86
	debug.              : 00 be 00 8e   65 4c 02 73   

For every object, the 5.8.10 and 5.9.1 output is identical for at least the first 24
bytes (the header length), but differs at some point after that. If they differ before
the object's length, it could be a sign of something wrong. Objects in 1CourtesyAcc.ngl:

type	size	diff. at	problematic?
type=0	24		+26				n
type=4	38		+30				YES
type=5	44		+29				YES
type=6	30		+29				YES
type=12	26		+26				n
type=8	24		+24				n
type=9	24		+24				n
type=10
type=7
type=2
type=1
type=0
type=4
type=5
type=6
type=12
type=1

-------------------------------------------------------------------------------

24 Nov.(?) - 2 Dec.

Going back to the SYSTEM systemRect problem, in N105, the systemRect is 8 bytes after the
object header = .+24+8 = .+32; systemNum is just before that, .+30. In 5.8.10:

	.		00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	.+16	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 02 00 01
	.+32	02 40 06 a8   0e 20 23 d0   

=> systemRect(t,l,b,r) = 0x0240, 0x06a8, 0x0e20, 0x23d0 = 576,1704,3616,9168 and systemNum = 1:
all just the same as from its Browser. So at what point does 5.9.1 screw it up? Surely
ReadHeaps() is okay... I think.

	debug. ReadObjHeap1: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.             : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	debug.             : 02 40 06 a8   0e 20 23 d0   65 73 57 41   00 05 
	debug. ReadObjHeap2: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.             : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	debug.             : 02 40 06 a8   0e 20 23 d0   65 73 57 41   a1 b1 

The only change from ReadObjHeap1 (before BlockMove(src, dst, len)) to ReadObjHeap2 (after
is .+44 & +45, but that's OK: for this type 5 object,objLength_5=44 & len=44. A (small)
relief. Are they the same as what 5.8.10 reads in? The 1st 44 bytes, from 5.8.10:

	00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 02 00 01
	02 40 06 a8   0e 20 23 d0  

The 1st 44 bytes of ReadObjHeap1 & ReadObjHeap2 in 5.9.1:

	00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	02 40 06 a8   0e 20 23 d0   65 73 57 41

No! There's one difference, .+29 is 02 in 5.8.10, 03 in 5.9.1!  Y##$!%#!@#*!#(
From ConvertObject in 5.9.1:

	00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 00
	02 40 00 02   0e 20 23 d0

Now +31, +34, and +35 have also changed!

Going back to the 1st change, at .+29, let's see what 5.9.1 has just after the FSRead():

	ioErr = FSRead(refNum, &sizeAllObjsFile, startPos);
DHexDump(LOG_DEBUG, "ReadObjHeap0", (unsigned char *)startPos, 24+38+44, 4, 16);

	debug. ReadObjHeap0: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.             : 00 00 00 00   1f 2f 02 30   00 03 00 01   00 00 00 00
	debug.             : 00 00 04 67   00 00 00 00   00 00 00 00   46 69 00 65
	debug.             : 00 00 00 00   00 00 64 65   46 6f 72 53   61 76 00 04
	debug.             : 00 02 00 00   02 40 02 40   05 61 00 24   00 6b 00 e2
	debug.             : 02 3d 46 6f   00 53 00 00   00 00 00 03   00 01 02 40
	debug.             : 06 a8 0e 20   23 d0 65 73   57 41 

This is 24+38+44 for objs of type 0, 4, 5, so the last 44 bytes are the SYSTEM.

	00 04 00 02 00 00   02 40 02 40   05 61 00 24   00 6b
	00 e2 02 3d 46 6f   00 53 00 00   00 00 00 03   00 01
	02 40 06 a8 0e 20   23 d0 65 73   57 41

F*ck. Byte .+29 is different!!!!!!!!!!!!!!!!! Now what??

Back to 5.8.10. Add DHexDump() as above just after the FSRead:

	debug. ReadObjHeap0: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.             : 00 00 00 00   1f 2f 02 30   00 03 00 01   00 00 00 00
	debug.             : 00 00 04 67   00 00 00 00   00 00 00 00   46 69 00 65
	debug.             : 00 00 00 00   00 00 64 65   46 6f 72 53   61 76 00 04
	debug.             : 00 02 00 00   02 40 02 40   05 61 00 24   00 6b 00 e2
	debug.             : 02 3d 46 6f   00 53 00 00   00 00 00 03   00 01 02 40
	debug.             : 06 a8 0e 20   23 d0 65 73   57 41 

It's exactly the same as with 5.9.1!!! Byte .+29 of the SYSTEM is 03. So the discrepancy
is because 5.8.10 is changing it to 02, not because 5.9.1 is changing it to 03! But
how can that be part of reading Ngale files correctly, which presumably 5.8.10 does??

That _might_ not be significant. Putting it aside for now, the SYSTEM's screwed-up
systemRect and systemNum are definitely a problem. How does this happen between ReadObjHeap2
& ConvertObjects()?

Display LINK 3 (the SYSTEM) at very end of ReadObjHeap() => nothing changed yet.
Display LINK 3 just after call to ReadHeaps() => +31, +34, and +35 have changed.
After ReadObjHeap(), ReadHeaps() just calls HeapFixLinks().

Halfway thru HeapFixLinks(), LINK 3 .+31, +34, and +35 have already changed. Cause:
HeapFixLinks() uses the DSysPAGE & DLinkLSYS macros, which undoubtedly assume the 5.9.x
objects! So write HeapFixN105Links(), using special-purpose macros => the SYSTEM comes
through unscathed. Or rather scathed just as in 5.8.10: .+29 changes from 03 to 02
between ReadObjHeap3 and HeapFixLinks1. Well, scathed that way thru the LogPrintf in
ConvertSYSTEM; after that, +34, and +35 get changed... because ConvertSYSTEM uses the
locations of fields in "standard" (N106) files, not N105 files. Fix it => +34 and +35
are OK!

Debug Full display of all of 1CourtesyAcc.ngl finds 32 errors! E.g.,

	Warning. •DCheckNode: SYSTEM L3 HAS INCONSISTENT LEFT SYSTEM LINK L41393.
	Warning. •DCheckNode: SYSTEM L3 HAS INCONSISTENT RIGHT SYSTEM LINK L49619.

Well, L3 is the only system in the score, so it should have lSystem = rSystem = 0;
but Browser shows them as 1 and 576 => fixed.

Add ConvertPAGE, ConvertSTAFF, ConvertMEASURE => Debug Full display finds only 21? errors,
and all (or almost all) are in subobjects, which I haven't even started to convert.
Hooray! Of course there's a _lot_ Debug doesn't check...

So far I think I'm converting all fields of PAGE, SYSTEM, and STAFF objects correctly, and
some fields of MEASURE objects, but only in the main object list. Still to do: other
objects; all subobjects; and the Master Page object list.

-------------------------------------------------------------------------------

3 - 8 Feb.

Contrary to the above claim, in 1CourtesyAcc.ngl, Debug Check Standard Things/Full finds
(on different runs) 89, 99, 102 errors. The number varies, and Ngale sometimes hangs trying
to open it; not surprisingly, there's some random garbage in the partially-converted object
list!. Debug Display finds 63.

Nothing should be selected when a file is open, but at the moment, lots of subobjects are.

Hmmm. The voice table for 1CourtesyAcc.ngl ends up with zero voices, obviously because
ConvertScoreHeader() sets every field  to 0 instead of copying them :-( . Fix that => Debug
Check Standard Things finds 96, 89, 103, 101 errors; Debug Display/Full finds 67, 62.

Lots of complaints about unconverted fields of MEASURE objs. Add code to ConvertMEASURE()
=> Check Standard Things finds 110, 100, 87; Debug Display/Full finds 65, 66, 54. Think
I'm now converting all fields of MEASUREs correctly.

Implement Convert1STAFF() & call it for each staff subobj => YUCK! Ah: I'm declaring

	SUPEROBJECT tmpSuperSubObj;

-- but we really want either SUPERSUBOBJECT or type-specific variables. But that's not the
whole problem! ??

The GetSubObjectPtr() macro in MemMacros.h should do it:

#define GetSubObjectPtr(link,type)	( ((type *)(*type/**/Heap)->block))+(link) )

...but calls to it don't even compile, and it looks like it's never been used! It also
looks over-complicated. For now at least, have a special-purpose macro for each subobject
heap, e.g.

	#define GetStaffPtr(link) ( ((STAFFheap)->block)+(link) )
	
and use it like this:

	pSSubObj = (unsigned char *)GetStaffPtr(aStaffL);

-------------------------------------------------------------------------------

9-16 Feb.

Using the above GetStaffPtr(), opening 1CourtesyAcc.ngl, STAFF subobjs are a disaster.

debug. ConvObjs1: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
debug.          : 00 00 00 00   65 4c 02 73   00 00 00 00   00 03 00 00
debug.          : 00 00 00 00   00 00 00 00   00 00 00 00   00 00 
debug. ConvertSTAFF: staffL=4 lStaff=0 rStaff=0 StaffSYS=3
debug. ConvObjs/STAFF: 00 a6 82 00   16 90 15 c0   00 3c 9e 60   16 92 27 40
debug.               : 00 3d 0b c0   16 92 2a 40   16 92 75 c0   00 3e e1 d0
debug.               : 16 92 05 00   16 92 07 f0   00 3d 74 00   00 39 32 30
debug.               : 00 a7 8e 00   00 3f 
debug. Convert1STAFF: aStaffL=1 staffn=0 staffLines=0 staffHeight=1638
debug. ConvObjs/STAFF: 16 90 15 c0   00 3c 9e 60   16 92 27 40   00 3d 0b c0
debug.               : 16 92 2a 40   16 92 75 c0   00 3e e1 d0   16 92 05 00
debug.               : 16 92 07 f0   00 3d 74 00   00 39 32 30   00 a7 8e 00
debug.               : 00 3f 7d 80   00 39 
debug. Convert1STAFF: aStaffL=2 staffn=0 staffLines=0 staffHeight=1638
debug. ConvObjs/STAFF: 96 0d 83 44   95 c6 48 fc   95 8f c9 a0   96 0d 83 44
debug.               : 95 ef 21 70   95 88 68 38   96 0d 83 44   95 ef 21 6c
debug.               : 95 89 e1 24   96 0d 83 44   95 c7 2e 9c   95 90 6b e4
debug.               : 96 0d 83 44   95 be 
debug. Convert1STAFF: aStaffL=2080 staffn=0 staffLines=0 staffHeight=1638

Of course the 3rd subobject is trash; there are really only 2, buit ignore that
for now.

The "ConvObjs/STAFF" dumps should be N105 ASTAFFs; do they look anything like 
it? Nope! ?? Ah, a more plausible GetStaffPtr:

	#define GetStaffPtr(link) ( *((STAFFheap)->block)+(link)*sizeof(ASTAFF) )

Results:

	debug. ConvObjs1: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
	debug.          : 00 00 00 00   65 4c 02 73   00 00 00 00   00 03 00 00
	debug.          : 00 00 00 00   00 00 00 00   00 00 00 00   00 00 
	debug. ConvertSTAFF: nEntries=2 staffL=4 lStaff=0 rStaff=0 StaffSYS=3
	debug. ->block=8383852 aStaffL=1 sizeof(ASTAFF)*aStaffL=54 pSSubObj=4043526
	debug. ConvObjs/STF 2: 00 02 01 40   02 40 00 00   1c c8 01 80   05 34 00 18
	debug.               : 00 00 00 00   00 00 00 6c   00 60 00 00   03 06 00 00
	debug.               : 00 00 00 00   02 87 00 00   01 ac 00 00   00 01 04 04
	debug.               : 1f 00 00 00   02 40 
	debug. Convert1STAFF: aStaffL=1 staffn=0 staffLines=0 staffHeight=1638
	debug. ->block=8383852 aStaffL=2 sizeof(ASTAFF)*aStaffL=108 pSSubObj=4043580
	debug. ConvObjs/STF 2: 08 20 00 00   1c c8 01 80   05 ff 00 18   00 00 00 00
	debug.               : 00 00 00 6c   00 60 00 00   0a 06 00 03   c5 a6 40 3b
	debug.               : 00 27 00 00   00 00 00 00   00 01 04 04   1f 00 00 04
	debug.               : 01 40 02 40   00 00 
	debug. Convert1STAFF: aStaffL=2 staffn=0 staffLines=0 staffHeight=1638
	debug. ->block=8383852 aStaffL=2080 sizeof(ASTAFF)*aStaffL=112320 pSSubObj=4155792
	(etc. etc.)

The 1st subobj starts very reasonably with "00 02 01 40" (next = 2, staffn = 1, then
flags) but after that, I'm not sure. The 2nd starts with 08 20 00 00 (next = 2080,
staffn = 0): nonsense.

!! Despite its name, GetObjectPtr looks like it should work with subobjects; MemMacros.h
even gives an example:

	astaff = GetObjectPtr(heap+STAFFtype,n,ASTAFF);
	
Use it => the 1st subobj starts 

	debug. ConvObjs1: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
	debug.          : 00 00 00 00   65 4c 02 73   00 00 00 00   00 03 c1 d3
	debug.          : a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. ConvertSTAFF: nEntries=2 staffL=4 lStaff=0 rStaff=0 StaffSYS=3
	debug. ->block=8383852 aStaffL=1 sizeof(ASTAFF)*aStaffL=54 pSSubObj=4028054
	debug. ConvObjs/STF 2: 00 02 01 40   02 40 00 00   1c c8 01 80   05 34 00 18
	debug.               : 00 00 00 00   00 00 00 6c   00 60 00 00   03 06 00 00
	debug.               : 00 00 00 00   02 87 00 00   01 ac 00 00   00 01 04 04
	debug.               : 1f 00 00 00   02 40 
	debug. Convert1STAFF: aStaffL=1 staffn=1 staffLines=5 staffHeight=384
	debug. ->block=8383852 aStaffL=2 sizeof(ASTAFF)*aStaffL=108 pSSubObj=4028108
	debug. ConvObjs/STF 2: 08 20 00 00   1c c8 01 80   05 ff 00 18   00 00 00 00
	debug.               : 00 00 00 6c   00 60 00 00   0a 06 00 03   c5 a6 40 3b
	debug.               : 00 27 00 00   00 00 00 00   00 01 04 04   1f 00 00 04
	debug.               : 01 40 02 40   00 00 
	debug. Convert1STAFF: aStaffL=2 staffn=0 staffLines=0 staffHeight=24
	debug. ->block=8383852 aStaffL=2080 sizeof(ASTAFF)*aStaffL=112320 pSSubObj=4140320
	(etc. etc.)

The 1st subobj is identical to the previous version; so is the 2nd! ??
The 1st subobj says:
	info. Convert1STAFF: st=1 top,left,ht,rt=d0,7368,384,384 lines=5 fontSz=0 SV TS=4,4/4

Need to see what the STAFF subobjs really look like! Via 5.8.10:

	debug. ConvertScore/STF: 00 02 01 40   02 40 00 00   1c c8 01 80   05 34 00 18
	debug.                 : 00 00 00 00   00 00 00 6c   00 60 00 00   03 06 00 00
	debug.                 : 00 00 00 00   02 87 00 00   01 ac 00 00   00 01 04 04
	debug.                 : 1f 00 
	debug. ConvertScore/STF: 00 00 02 40   08 20 00 00   1c c8 01 80   05 ff 00 18
	debug.                 : 00 00 00 00   00 00 00 6c   00 60 00 00   0a 06 00 03
	debug.                 : c5 a6 40 3b   00 27 00 00   00 00 00 00   00 01 04 04
	debug.                 : 1f 00 
	
Back to 5.9.1, showing only sizeof(ASTAFF_5) bytes for (all that are significant):

	debug. ConvObjs/STF 2: 00 02 01 40   02 40 00 00   1c c8 01 80   05 34 00 18
	debug.               : 00 00 00 00   00 00 00 6c   00 60 00 00   03 06 00 00
	debug.               : 00 00 00 00   02 87 00 00   01 ac 00 00   00 01 04 04
	debug.               : 1f 00 
	info. Convert1STAFF: st=1 top,left,ht,rt=d0,7368,384,384 lines=5 fontSz=0 SV TS=4,4/4
	debug. ->block=8383852 aStaffL=2 sizeof(ASTAFF)*aStaffL=108 pSSubObj=4048684
	debug. ConvObjs/STF 2: 08 20 00 00   1c c8 01 80   05 ff 00 18   00 00 00 00
	debug.               : 00 00 00 6c   00 60 00 00   0a 06 00 03   c5 a6 40 3b
	debug.               : 00 27 00 00   00 00 00 00   00 01 04 04   1f 00 00 04
	debug.               : 01 40 
	info. Convert1STAFF: st=0 top,left,ht,rt=d384,1535,24,24 lines=0 fontSz=0 .V TS=4,0/4

The first is identical. The 2nd is identical, except it starts 4 bytes too late! And
the N106 ASTAFF is 4 bytes longer than the N105. Reason: ReadSubHeaps() isn't moving
subobjects around after they've been read in to allow for changes in their sizes the way
ReadObjHeap() is!

Let's pull the code to move stuff around out of ReadObjHeap() => MoveObjSubobjs().
Run on 1CourtesyAcc.ngl => oops: it hangs in HeapFixN105Links()  :-( .

Using the old ReadObjHeap() (works):
	debug. HeapFixLinks1 L1: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.                 : 00 00 00 00   1f 2f 02 30   00 00 c1 d3   02 b1 c1 d3
	debug.                 : a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. HeapFixLinks1 L2: 00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	debug.                 : 00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	debug.                 : 46 6f 72 53   61 76 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. HeapFixLinks1 L3: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.                 : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	debug.                 : 02 40 06 a8   0e 20 23 d0   65 73 57 41   a1 b1 
	debug. HeapFixLinks1 L4: 00 05 00 03   00 01 00 00   00 00 06 66   00 00 00 00
	debug.                 : 00 00 00 00   65 4c 02 73   00 00 00 00   00 04 c1 d3
	debug.                 : a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 

Using new ReadObjHeap() (hangs):
	debug. HeapFixLinks1 L1: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.                 : 00 00 00 00   1f 2f 02 30   00 00 00 00   02 00 00 03
	debug.                 : 00 01 00 00   00 00 00 00   04 67 00 00   00 00 
	debug. HeapFixLinks1 L2: 00 00 00 00   64 65 46 6f   72 53 61 76   00 01 00 00
	debug.                 : 00 00 00 04   00 02 00 00   02 40 02 40   05 61 00 24
	debug.                 : 00 6b 00 e2   02 3d 46 6f   00 53 00 00   00 00 
	debug. HeapFixLinks1 L3: 23 d0 65 73   57 41 00 00   00 00 00 00   00 05 00 03
	debug.                 : 00 01 00 00   00 00 06 66   00 00 00 00   00 00 00 00
	debug.                 : 65 4c 02 73   00 00 00 00   00 04 00 00   00 00 
	debug. HeapFixLinks1 L4: 00 00 0c 61   00 00 00 00   00 00 00 00   5f 10 02 4e
	debug.                 : 00 00 00 00   00 00 00 00   00 07 00 05   00 01 00 60
	debug.                 : 00 00 08 73   00 3c 00 71   00 ca 00 82   2e 74 

The 1st 26 bytes are identical; after that, they're wildly different. %^$@#&*(@*#$

Let's look further back. Using the old ReadObjHeap() (works):

	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=952  (ReadObjHeap)
	debug. ReadObjHeap: src=ace5ec dst=ace438 dst-src:-436 offset:0 type=0
	debug. ReadObjHeap2: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.             : 00 00 00 00   1f 2f 02 30   00 00 c1 d3   02 b1 c1 d3
	debug.             : a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. ReadObjHeap: src=ace604 dst=ace470 dst-src:-404 offset:24 type=4
	debug. ReadObjHeap2: 00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	debug.             : 00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	debug.             : 46 6f 72 53   61 76 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. ReadObjHeap: src=ace62a dst=ace4a8 dst-src:-386 offset:62 type=5
	debug. ReadObjHeap2: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.             : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	debug.             : 02 40 06 a8   0e 20 23 d0   65 73 57 41   a1 b1 

Using new ReadObjHeap() (hangs):

	info. nFObjs=17 sizeAllObjsFile=516 sizeAllObjsHeap=952  (ReadObjHeap)
	debug. ReadObjHeap0: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.             : 00 00 00 00   1f 2f 02 30   00 03 00 01   00 00 00 00
	debug.             : 00 00 04 67   00 00 00 00   00 00 00 00   46 69 00 65
	debug.             : 00 00 00 00   00 00 64 65   46 6f 72 53   61 76 00 04
	debug.             : 00 02 00 00   02 40 02 40   05 61 00 24   00 6b 00 e2
	debug.             : 02 3d 46 6f   00 53 00 00   00 00 00 03   00 01 02 40
	debug.             : 06 a8 0e 20   23 d0 65 73   57 41 
	debug. MoveObjSubobjs: src=accdec dst=accc38 dst-src:-436 offset:0 type=0
	debug. MoveObjSubobjs: type 0 obj: objLength=30 objLength_5=24 src=
	debug. MoveObjSubobjs2: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.                : 00 00 00 00   1f 2f 02 30   00 00 c1 d3   02 b1 c1 d3
	debug.                : a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 
	debug. MoveObjSubobjs: src=acce04 dst=accc56 dst-src:-430 offset:24 type=4
	debug. MoveObjSubobjs: type 4 obj: objLength=44 objLength_5=38 src=
	debug. MoveObjSubobjs2: 00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	debug.                : 00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	debug.                : 46 6f 72 53   61 76 00 01   00 00 a1 b1   00 00 
	debug. MoveObjSubobjs: src=acce2a dst=accc82 dst-src:-424 offset:62 type=5
	debug. MoveObjSubobjs: type 5 obj: objLength=50 objLength_5=44 src=
	debug. MoveObjSubobjs2: 00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	debug.                : 00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	debug.                : 02 40 06 a8   0e 20 23 d0   65 73 57 41   c1 d3 

Let's strip away irrelevent stuff! The NHexDump()s are just after BlockMove().
		
		BlockMove(src, dst, len);
	NHexDump(LOG_DEBUG, "(whatever)", (unsigned char *)dst, { 46* | len **} , 4, 16);

Using the old ReadObjHeap() (works) [NHexDump 46 bytes]:

	dst-src:-436 offset:0 type=0
	00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	00 00 00 00   1f 2f 02 30   00 00 c1 d3   02 b1 c1 d3
	a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 c1 d3   a1 b1 
	dst-src:-404 offset:24 type=4
	00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	46 6f 72 53   61 76 c1 d3   a1 b1 c1 d3   a1 b1 
	dst-src:-386 offset:62 type=5
	00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	02 40 06 a8   0e 20 23 d0   65 73 57 41   a1 b1 

Using new ReadObjHeap() (hangs) [NHexDump 46 bytes]:

	dst-src:-436 offset:0 type=0
	type 0 obj: objLength=30 objLength_5=24
	00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	00 00 00 00   1f 2f 02 30   
	dst-src:-430 offset:24 type=4
	type 4 obj: objLength=44 objLength_5=38
	00 03 00 01   00 00 00 00   00 00 04 67   00 00 00 00
	00 00 00 00   46 69 00 65   00 00 00 00   00 00 64 65
	46 6f 72 53   61 76 
	dst-src:-424 offset:62 type=5
	type 5 obj: objLength=50 objLength_5=44
	00 04 00 02   00 00 02 40   02 40 05 61   00 24 00 6b
	00 e2 02 3d   46 6f 00 53   00 00 00 00   00 03 00 01
	02 40 06 a8   0e 20 23 d0   65 73 57 41   

So just after the BlockMove(), the relevant bytes starting at dst are identical --
but dst-src is different! In fact, for the new ReadObjHeap(), it changes by just
6 each time, which is very suspicious! Ah: After the BlockMove, MoveObjSubobjs() is
doing

	dst += objLength[type];

The equivalent of this was

	dst += sizeof(SUPEROBJECT);

...which is _not_ the same. Change that => OK!

Modify MoveObjSubobjs() to handle subobject heaps as well as the object heap =>

	debug. ReadObjHeap0: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	...
	debug. MoveObjSubobjs: src=acd3ec dst=acd238 dst-src:-436 offset:0 curType=0
	debug. MoveObjSubobjs: type 0 obj: objLength=30 objLength_5=24 src=
	debug. MoveObjSubobjs2: 00 02 00 00   00 01 00 00   00 00 00 27   00 00 00 00
	debug.                : 00 00 00 00   1f 2f 02 30   00 03 00 01   00 00 00 00
	debug.                : 00 00 04 67   00 00 00 00   00 00 00 00   46 69 
	debug. MoveObjSubobjs: src=acd41a dst=acd270 dst-src:-426 offset:46 curType=70
	ERROR. Object type=70 is illegal. hType=24  (MoveObjSubobjs)
	ERROR. Can't open the file. errCode=998 errInfo=24  (OpenError)
	Warning. Error ID=998 (heap object type=24).
	Warning. * StopInform alertID=370
	debug. OpenFile L3: 00 04 00 00   00 00 00 00   00 00 00 00   00 00 00 00
	debug.            : 00 00 00 00   00 00 00 00   00 00 00 00   00 00 00 00
	debug.            : 00 00 00 00   00 00 00 00   00 00 00 00   00 00 

Everything up to the 2nd "MoveObjSubobjs:" line looks OK, but that line has dst-src:-426,
offset:46; they should be -404 and 24. Cause: for the object heap, MoveObjSubobjs() is
setting len = subObjLength_5[curType], but it should use objLength_5[curType]! Fix =>
1CourtesyAcc.ngl opens again & displays one staff (as it has for a few days); Debug Check
usual => finds ca. 100 (105, 94) errors; Debug Display finds 64, 58 -- but now we have
MoveObjSubobjs(), which can handle the subobject heaps too!

Add to ReadSubHeaps() ??

ReadSubHeaps() is a mess. Move the loop across heaps to ReadHeaps(); replace the body with
code modified from ReadObjHeap() => it gets sizeAllInFile=131326 -- nonsense -- but it's at
the same position, 2558, in the same file, 1CourtesyAcc.ngl! *@#$&*O@#QI$!@  How can this be?
But 2558 is the beginning of the header, no?

Ah. 131326 = 0x000200fe, the correct first four bytes of the first HEADER subobject! Explanation:
Objects in the object heap in a file are variable-length, so the file precedes the objects with
their total length; but subobjects in their heaps are fixed-length, and there's nothing between
the heap header and the subobjects. Debug Check usual => finds 51, 50, 55 errors; Debug Display finds
26, 26, 26. MUCH better! Yippee!

Commited & pushed.

-------------------------------------------------------------------------------

16 - 20 Feb.

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED STAFF L4.
	Feb 16 16:30:41: --- last message repeated 1 time ---
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 16 16:30:41: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. *DCheckNode: SUBOBJ IN TIMESIG L8 HAS BAD TIMESIG denom.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNode: Object L9 HAS A ZERO-WIDTH/HEIGHT objRect.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L9 HAS BAD clefType.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L9 HAS BAD TIMESIG denominator -104.
	Warning. *DCheckMeasSubobjs: SUBOBJ ON STAFF 2 IN MEASURE L9 HAS BAD connStaff.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L9 HAS BAD clefType.
	Warning. *DCheckMeasSubobjs: 1 SUBOBJS IN MEASURE L9 HAVE connAbove BUT NO CONNECTED STAFF.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED MEASURE L9.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED MEASURE L9.
	Warning. *DCheckNode: CAN'T FIND TUPLET FOR VOICE 95 IN SYNC L10.
	Warning. *DCheckNode: NOTE/REST IN SYNC L10 HAS BAD voice -4.
	Warning. DCheckSyncSlurs: NOTE slurredL IN VOICE -4 IN SYNC L10, MEASURE 6649, HAS NO SLUR.
	Warning. DCheckSyncSlurs: NOTE slurredR IN VOICE -4 IN SYNC L10, MEASURE 6649, HAS NO SLUR.
	Warning. DCheckSyncSlurs: NOTE tiedR IN VOICE -4 IN SYNC L10, MEASURE 6649, HAS NO TIE.
	Warning. DCheckNode: GARBAGE MODNR LINK 16203 IN VOICE -4 IN SYNC L10.
	Warning. DCheckNodeSel: SELECTED NOTE IN VOICE -4 IN UNSELECTED SYNC L10.
	Notice. * CautionAdvise alertID=550!
	Warning. *DCheckVoiceTable: NOTE IN SYNC L10 STAFF 1 IN ANOTHER PART'S VOICE, -4.
	Warning. *DCheckHeirarchy: CLEF L6 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: TIMESIG L8 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckOttavas: OTTAVA'D NOTE IN SYNC L10 STAFF 1 WITHOUT OTTAVA.
	Warning. *DCheckContext: clefType FOR STAFF 1 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. DCheckContext: TIMESIG FOR STAFF 1 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. *DCheckContext: clefType FOR STAFF 2 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. DCheckContext: dynamicType FOR STAFF 2 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. DCheckPlayDurs: Note in Sync L10 voice -4 in measure 6649 playDur is longer than full dur. of 0
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 1 (L8) not anticipated.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 2 (L8) not anticipated.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  0 voices.
	info. --CHECK MASTER: DCheckNode: PAGE L13 sheetNum 12895 IS NEGATIVE OR SUSPICIOUSLY LARGE.
	Warning. •DCheckNode: SYSTEM L14 HAS INCONSISTENT LEFT SYSTEM LINK L41393.
	Warning. •DCheckNode: SYSTEM L14 HAS INCONSISTENT RIGHT SYSTEM LINK L213.
	Warning. *DCheckNode: SYSTEM L14 HAS GARBAGE systemRect.
	Warning. *DCheckNode: SYSTEM L14 RECT BELOW BOTTOM MARGIN (pt1767 vs. 774).
	Warning. •DCheck1NEntries: OBJ L15 HAS nEntries=0 BUT 2 SUBOBJECTS.
	Warning. •DCheckNode: Object L15 HAS BAD nEntries FOR ITS TYPE.
	Warning. *DCheckNode: SUBOBJ IN FIRST STAFF, L15 (staffn=1), staffHeight DISAGREES WITH srastral.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffLeft IS ILLEGAL.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffRight IS ILLEGAL.
	Warning. *DCheckNode: SUBOBJ IN FIRST STAFF, L15 (staffn=2), staffHeight DISAGREES WITH srastral.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffLeft IS ILLEGAL.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffRight IS ILLEGAL.
	Warning. •DCheck1NEntries: OBJ L16 HAS nEntries=116 BUT 2 SUBOBJECTS.
	Warning. •DCheckNode: Object L16 HAS BAD nEntries FOR ITS TYPE.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	info.  Done.    --CHECK CLIPBOARD:  Done. 55 ERROR(S). 

Convert1MEASURE() should get rid of the 4 erros in "6649 (L9)". Implement & call Convert1MEASURE
=> it does; down to 51 errors! Fix ASTAFF dynamType & AMEASURE selected => down to 45, 40,
41! Implement ConvertSYNC and (very incomplete) Convert1NOTER => down to 31, 36, 31, 34! -- e.g.:

	Notice. Opened file '1CourtesyAcc.ngl'.
	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 19 07:01:45: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. *DCheckNode: SUBOBJ IN TIMESIG L8 HAS BAD TIMESIG denom.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNode: Object L9 HAS A ZERO-WIDTH/HEIGHT objRect.
	Warning. *DCheckMeasSubobjs: SUBOBJ ON STAFF 2 IN MEASURE L9 HAS BAD connStaff.
	Warning. *DCheckMeasSubobjs: 1 SUBOBJS IN MEASURE L9 HAVE connAbove BUT NO CONNECTED STAFF.
	Warning. DCheckSyncSlurs: NOTE tiedR IN VOICE 1 IN SYNC L10, MEASURE 6649, HAS NO TIE.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: TIMESIG L8 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. DCheckContext: TIMESIG FOR STAFF 1 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 1 (L8) not anticipated.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 2 (L8) not anticipated.
	Warning. DCheckNoteNums: Note in Sync L10 in measure 6649, staff 1 notenum 63 and notation disagree.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: DCheckNode: PAGE L13 sheetNum 12895 IS NEGATIVE OR SUSPICIOUSLY LARGE.
	Warning. •DCheckNode: SYSTEM L14 HAS INCONSISTENT LEFT SYSTEM LINK L99.
	Warning. •DCheckNode: SYSTEM L14 HAS INCONSISTENT RIGHT SYSTEM LINK L213.
	Warning. *DCheckNode: SYSTEM L14 HAS GARBAGE systemRect.
	Warning. *DCheckNode: SYSTEM L14 RECT BELOW BOTTOM MARGIN (pt1767 vs. 774).
	Notice. * CautionAdvise alertID=550!
	Warning. •DCheck1NEntries: OBJ L15 HAS nEntries=0 BUT 2 SUBOBJECTS.
	Warning. •DCheckNode: Object L15 HAS BAD nEntries FOR ITS TYPE.
	Warning. *DCheckNode: SUBOBJ IN FIRST STAFF, L15 (staffn=1), staffHeight DISAGREES WITH srastral.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffLeft IS ILLEGAL.
	Warning. *DCheckNode: SUBOBJ IN FIRST STAFF, L15 (staffn=2), staffHeight DISAGREES WITH srastral.
	Warning. *DCheckNode: SUBOBJ IN STAFF L15 staffLeft IS ILLEGAL.
	Warning. •DCheck1NEntries: OBJ L16 HAS nEntries=116 BUT 2 SUBOBJECTS.
	Warning. •DCheckNode: Object L16 HAS BAD nEntries FOR ITS TYPE.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	info.  Done.    --CHECK CLIPBOARD:  Done. 34 ERROR(S). 

Most of the errors now, and all of the most serious ones, are from checking the Master Page:
no wonder, since I'm not converting anything in it! Add code to ConvertObjects() to convert
the Master Page object list exactly the same way as the main list => only 23 errors, and
none of "bullet" level! Voila:

	Notice. Opened file '1CourtesyAcc.ngl'.
	debug. DrawToolPalette: MemBitCount(palPortBits, 1000)=947 portRect tlbr=0,0,399,271
	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 19 16:14:51: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. *DCheckNode: SUBOBJ IN TIMESIG L8 HAS BAD TIMESIG denom.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNode: Object L9 HAS A ZERO-WIDTH/HEIGHT objRect.
	Warning. *DCheckMeasSubobjs: SUBOBJ ON STAFF 2 IN MEASURE L9 HAS BAD connStaff.
	Warning. *DCheckMeasSubobjs: 1 SUBOBJS IN MEASURE L9 HAVE connAbove BUT NO CONNECTED STAFF.
	Warning. DCheckSyncSlurs: NOTE tiedR IN VOICE 1 IN SYNC L10, MEASURE 6649, HAS NO TIE.
	Warning. *DCheckHeirarchy: CLEF L6 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: TIMESIG L8 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. DCheckContext: TIMESIG FOR STAFF 1 IN MEASURE 6649 (L9) INCONSISTENCY.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 1 (L8) not anticipated.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 2 (L8) not anticipated.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L16.
	Feb 19 16:14:52: --- last message repeated 1 time ---
	Notice. * CautionAdvise alertID=550!
	info.  Done.    --CHECK CLIPBOARD:  Done. 23 ERROR(S). 
	 
-------------------------------------------------------------------------------

21 - 24 Feb.

Add more conversion stuff to Convert1MEASURE() =>

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 23 08:13:29: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. *DCheckNode: SUBOBJ IN TIMESIG L8 HAS BAD TIMESIG denom.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED TIMESIG L8.
	Warning. *DCheckHeirarchy: CLEF L6 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: TIMESIG L8 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. DCheckContext: TIMESIG FOR STAFF 1 IN MEASURE 1 (L9) INCONSISTENCY.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 1 (L8) not anticipated.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 2 (L8) not anticipated.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L16.
	Feb 23 08:13:29: --- last message repeated 1 time ---
	info.  Done.    --CHECK CLIPBOARD:  Done. 19 ERROR(S). 

...but then:

	Warning. DCheckNode: Object L6: objrect.left relative to next is suspicious.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. DCheckNode: Object L7: objrect.left relative to previous is suspicious.
	Warning. DCheckNode: Object L8: objrect.left relative to next is suspicious.
	Warning. *DCheckNode: SUBOBJ IN TIMESIG L8 HAS BAD TIMESIG denom.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED TIMESIG L8.
	Warning. DCheckNode: Object L9: objrect.left relative to previous is suspicious.
	Warning. DCheckVoiceTable: VOICE 2 HAS NO NOTES, RESTS, OR GRACE NOTES.
	Warning. *DCheckHeirarchy: CLEF L6 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: TIMESIG L8 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. DCheckContext: TIMESIG FOR STAFF 1 IN MEASURE 1 (L9) INCONSISTENCY.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 1 (L8) not anticipated.
	Warning. DCheckCautionaryTS: Timesig at start of system in measure 0, staff 2 (L8) not anticipated.
	Warning. DCheckMeasDur: Measure 1 (L9) duration of 480 is  different from time sig.
	Warning. DCheckMeasDur: Measure 1 (L9), staff 1 duration 480 is different from time sig.
	Notice. * CautionAdvise alertID=550!
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L16.
	Feb 23 13:49:08: --- last message repeated 1 time ---
	info.  Done.    --CHECK CLIPBOARD:  Done. 26 ERROR(S). 

Time signatures are a big problem! Implement ConvertTIMESIG() & Convert1TIMESIG() =>

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 23 14:25:48: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF 0 OR 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD STAFF -1 OR 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L16.
	Feb 23 14:25:48: --- last message repeated 1 time ---
	info.  Done.    --CHECK CLIPBOARD:  Done. 10 ERROR(S). 
 
 Give separate error messages for  staffAbove  and  staffBelow  in CONNECTs =>
 
	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD staffAbove 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD staffBelow 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD staffAbove -1.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 HAS BAD staffBelow 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L5.
	Feb 25 14:36:07: --- last message repeated 1 time ---
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD staffAbove 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD staffBelow 0.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD staffAbove -1.
	Warning. *DCheckNode: SUBOBJ IN CONNECT L16 HAS BAD staffBelow 88.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED CONNECT L16.
	Feb 25 14:36:07: --- last message repeated 1 time ---
	info.  Done.    --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 15 ERROR(S). 
 
-------------------------------------------------------------------------------

25 - 28 Feb.

Implement Convert1CONNECT() =>

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 1 IN UNSELECTED CLEF L6.
	Warning. DCheckNodeSel: SELECTED ITEM ON STAFF 2 IN UNSELECTED CLEF L6.
	Warning. *DCheckHeirarchy: CLEF L6 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 staffAbove>=staffBelow.
	info.  Done.    --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 7 ERROR(S). 

Implement ConvertCLEF & Convert1CLEF =>

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. *DCheckHeirarchy: KEYSIG L7 inMeasure FLAG DISAGREES WITH OBJECT ORDER.
	info. Discont. sel, 0 objs in range, 0 sel, 11 total.  1 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L16 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 4 ERROR(S). 

Implement ConvertKEYSIG() => only 3 errors!; all for the same problem, and the error
message is almost certainly wrong.

Now for a more difficult test file: AllObjTypes.ngl => opens & draws something
coherent; Check Standard gives 63 errors.

Implement ConvertBEAMSET() & Convert1BEAMSET() => down to 54 errors.

Status of converting object types (I think).
. = no work needed; - = not done; + = done. 

	obj
	 subobj
0	.. HEADER_5		Object has only OBJHEADER; subobjs are unchanged
	++ TAIL_5		Has no subobjs & no fields other than header
	++ SYNC_5
	-- RPTEND_5
	+. PAGE_5
5	+. SYSTEM_5
	++ STAFF_5
	++ MEASURE_5
	++ CLEF_5
	++ KEYSIG_5
10	++ TIMESIG_5
	++ BEAMSET_5
	++ CONNECT_5
	+- DYNAMIC_5
	.- (MODNR)		Has no objects, only subobjects
15	-- GRAPHIC_5
	-- OTTAVA_5
	-- SLUR_5
	-- TUPLET_5
	-- GRSYNC_5
20	-. TEMPO_5
	-. SPACER_5
	-. ENDING_5
	-- PSMEAS_5
	++ (OBJECT)

-------------------------------------------------------------------------------

29 Feb. - 2 Mar.

Implement Convert1Dynamic(). ((DYNAMIC status now: ++) Open AllObjTypes.ngl =>

	info.  24 L25 xd=-118 yd=0 DYNAMIC .V.V.. oRect.l=p482 type=4 1stS=L27 lastS=L0 n=1
	info.      st=1 xd=0 yd=520 endxd=0 S..
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED DYNAMIC L25.

...and Browser shows mouthWidth=0; can that be right?

Oops, I didn't implement Convert1Dynamic() correctly :-) . Fix it => no complaint
about SELECTED ITEM IN UNSELECTED DYNAMIC, but it still shows mouthWidth=0. And
that _can_ be right, because this dynamic isn't a hairpin!

	++ DYNAMIC_5

Debug Check Standard of AllObjTypes.ngl gives:

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. •DCheckNode: TEMPO L8 HAS GARBAGE firstObjL.
	Warning. *DCheckNode: TEMPO L8 HAS BAD staffn.
	Warning. *DCheckNode: TEMPO L8 string IS BAD.
	Warning. *DCheckNode: TEMPO L8 metroStr IS BAD.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. •DCheckNode: GRAPHIC L13 HAS GARBAGE firstObj.
	Warning. *DCheckNode: GRAPHIC L13 HAS BAD staffn 4.
	Warning. *DCheckNode: TUPLET L16 HAS BAD staffn.
	Warning. DCheckNode: Object L17 IN MEASURE 1 HAS A GARBAGE (UNSELECTABLE) objRect.
	Warning. *DCheckNode: SLUR L17 HAS BAD staffn.
	Warning. *DCheckNode: SLUR L17 HAS BAD voice.
	Warning. •DCheckNode: SLUR L17 HAS GARBAGE SYNC LINK.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED SLUR L17.
	Warning. DCheckNode: SYNC L18: TIMESTAMP 1440 REL TO NEXT IS WRONG.
	Warning. *DCheckNode: CAN'T FIND TUPLET FOR VOICE 1 IN SYNC L18.
	Warning. DCheckSyncSlurs: NOTE slurredR IN VOICE 1 IN SYNC L18, MEASURE 1, HAS NO SLUR.
	Warning. DCheckNode: SYNC L20: TIMESTAMP 1439 REL TO PREVIOUS IS WRONG.
	Warning. DCheckNode: SYNC L20: TIMESTAMP 1439 REL TO NEXT IS WRONG.
	Warning. *DCheckNode: CAN'T FIND TUPLET FOR VOICE 1 IN SYNC L20.
	Notice. * CautionAdvise alertID=550!
	Warning. DCheckNode: SYNC L21: TIMESTAMP 1438 REL TO PREVIOUS IS WRONG.
	Warning. DCheckNode: SYNC L21: TIMESTAMP 1438 REL TO NEXT IS WRONG.
	Warning. *DCheckNode: CAN'T FIND TUPLET FOR VOICE 1 IN SYNC L21.
	Warning. DCheckNode: SYNC L22: TIMESTAMP 1437 REL TO PREVIOUS IS WRONG.
	Warning. DCheckSyncSlurs: NOTE slurredL IN VOICE 1 IN SYNC L22, MEASURE 1, HAS NO SLUR.
	Warning. *DCheckNode: SUBOBJ IN ENDING L26 HAS BAD staffn.
	Warning. DCheckNode: Object L28 IN MEASURE 2 HAS A GARBAGE (UNSELECTABLE) objRect.
	Warning. *DCheckNode: OTTAVA L29 HAS BAD staffn.
	Warning. *DCheckNode: SUBOBJ IN ENDING L32 HAS BAD staffn.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L35 HAS BAD nKSItems.
	Warning. *DCheckVoiceTable: NOTE IN GRSYNC L24 STAFF 1 IN ANOTHER PART'S VOICE, -18.
	Warning. •DCheckJDOrder: GRAPHIC ON STAFF 4 L13 firstObj=41393 NOT IN MAIN OBJECT LIST.
	Warning. *DCheckBeams: BEAMED NOTE IN GRSYNC 24 VOICE -18 WITHOUT BEAMSET.
	Warning. *DCheckOttavas: OTTAVA L29 HAS BAD STAFF NUMBER 0.
	Warning. *DCheckOttavas: OTTAVA'D NOTE IN SYNC L30 STAFF 1 WITHOUT OTTAVA.
	Warning. *DCheckSlurs: SLUR L17 HAS BAD voice.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS firstSyncL ARE IN WRONG ORDER.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS lastSyncL ARE IN WRONG ORDER.
	Warning. *DCheckTuplets: TUPLET L16 SYNC LINK INCONSISTENT.
	Feb 29 21:28:00: --- last message repeated 2 times ---
	Warning. *DCheckTuplets: TUPLET L16 HAS AN UNKNOWN OR ILLEGAL DURATION NOTE.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 3 (L31) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckPlayDurs: Note in Sync L18 voice 1 in measure 1 playDur is longer than full dur. of 0
	Warning. DCheckPlayDurs: Note in Sync L20 voice 1 in measure 1 playDur is longer than full dur. of 0
	Warning. DCheckPlayDurs: Note in Sync L21 voice 1 in measure 1 playDur is longer than full dur. of 0
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree.
	info. Discont. sel, 0 objs in range, 0 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 55 ERROR(S).
	
Implement ConvertTEMPO() => down to 49 errors! (TEMPO status now: +.)
Implement ConvertGRSYNC() => no change. (GRSYNC status now: +-)

-------------------------------------------------------------------------------

3 - 5 Mar.

What fields of GRNOTEs are unused? We don't seem to have a list! Besides those unused
for NOTEs (rspIgnore, playAsCue, micropitch, ??), I'm pretty sure these aren't:

	inTuplet
	merged
	playTimeDelta
	slurredL
	slurredR

So make a list... Done; it's ANOTEFieldUsage.xls. But I'm not too confident of its
accuracy!

Implement Convert1GRNOTE() => no change in no. of errors. (GRSYNC status now: ++)

Implement ConvertRPTEND() => 52, 51 errors, probably not a significant change.
Implement Convert1RPTEND() => 50 errors, probably not a significant change.
(RPTEND status now: ++)

Implement ConvertTUPLET() => down to 34 errors! (TUPLET status now: +.)

Debug Check Standard of AllObjTypes.ngl gives:

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. •DCheckNode: GRAPHIC L13 HAS GARBAGE firstObj.
	Warning. *DCheckNode: GRAPHIC L13 HAS BAD staffn 4.
	Warning. DCheckNode: Object L17 IN MEASURE 1 HAS A GARBAGE (UNSELECTABLE) objRect.
	Warning. *DCheckNode: SLUR L17 HAS BAD staffn.
	Warning. *DCheckNode: SLUR L17 HAS BAD voice.
	Warning. •DCheckNode: SLUR L17 HAS GARBAGE SYNC LINK.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED SLUR L17.
	Warning. DCheckSyncSlurs: NOTE slurredR IN VOICE 1 IN SYNC L18, MEASURE 1, HAS NO SLUR.
	Warning. DCheckSyncSlurs: NOTE slurredL IN VOICE 1 IN SYNC L22, MEASURE 1, HAS NO SLUR.
	Warning. *DCheckNode: SUBOBJ IN ENDING L26 HAS BAD staffn.
	Warning. *DCheckNode: OTTAVA L29 HAS BAD staffn.
	Warning. *DCheckNode: SUBOBJ IN ENDING L32 HAS BAD staffn.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L35 HAS BAD nKSItems.
	Warning. *DCheckVoiceTable: NOTE IN GRSYNC L24 STAFF 1 IN ANOTHER PART'S VOICE, 0.
	Warning. •DCheckJDOrder: GRAPHIC ON STAFF 4 L13 firstObj=0 NOT IN MAIN OBJECT LIST.
	Warning. *DCheckOttavas: OTTAVA L29 HAS BAD STAFF NUMBER 0.
	Warning. *DCheckOttavas: OTTAVA'D NOTE IN SYNC L30 STAFF 1 WITHOUT OTTAVA.
	Warning. *DCheckSlurs: SLUR L17 HAS BAD voice.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS firstSyncL ARE IN WRONG ORDER.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS lastSyncL ARE IN WRONG ORDER.
	Notice. * CautionAdvise alertID=550!
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 3 (L31) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree.
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 2 notenum 50 and notation disagree: wrong accidental?
	info. Discont. sel, 0 objs in range, 0 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 34 ERROR(S). 
 
-------------------------------------------------------------------------------

7 - 10 Mar.

The tempo mark in AllObjTypes.ngl gets a duration unit (subType) 0, which is "unknown
duration", but Browser doesn't know that... Fixed. Also, ConvertTEMPO() isn't
converting the subType... Fixed.

The 1st note on staff 1 of AllObjTypes.ngl isn't drawn because its VISIBLE flag isn't
set... Fixed.

Implement ConvertGRAPHIC() => down to 29 errors! (GRAPHIC status now: +-) (But it looks
like AGRAPHICs need no conversion! So let's say tentatively +. )

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. DCheckNode: Object L17 IN MEASURE 1 HAS A GARBAGE (UNSELECTABLE) objRect.
	Warning. *DCheckNode: SLUR L17 HAS BAD staffn.
	Warning. *DCheckNode: NON-CROSS-SYS SLUR L17 firstSync OR lastSync ISN'T A SYNC.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED SLUR L17.
	Warning. DCheckSyncSlurs: NOTE slurredR IN VOICE 1 IN SYNC L18, MEASURE 1, HAS NO SLUR.
	Warning. DCheckSyncSlurs: NOTE slurredL IN VOICE 1 IN SYNC L22, MEASURE 1, HAS NO SLUR.
	Warning. *DCheckNode: SUBOBJ IN ENDING L26 HAS BAD staffn.
	Warning. *DCheckNode: OTTAVA L29 HAS BAD staffn.
	Warning. *DCheckNode: SUBOBJ IN ENDING L32 HAS BAD staffn.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L35 HAS BAD nKSItems.
	Warning. *DCheckOttavas: OTTAVA L29 HAS BAD STAFF NUMBER 0.
	Warning. *DCheckOttavas: OTTAVA'D NOTE IN SYNC L30 STAFF 1 WITHOUT OTTAVA.
	Warning. *DCheckSlurs: NEXT SYNC AFTER SLUR/TIE L17 HAS NO NOTES IN VOICE 0.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS firstSyncL ARE IN WRONG ORDER.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS lastSyncL ARE IN WRONG ORDER.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 3 (L31) INCONSISTENCY.
	Notice. * CautionAdvise alertID=550!
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree.
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 2 notenum 50 and notation disagree: wrong accidental?
	info. Strict contin. sel, 1 objs in range, 1 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 29 ERROR(S).
	
-------------------------------------------------------------------------------

11 - 15 March

SPACERs definitely need work; do 'em next.

Status of converting object types (I think).
. = no work needed; - = not done; + = done. 

	obj
	 subobj
0	.. HEADER_5		Object has only OBJHEADER; subobjs are unchanged
	++ TAIL_5		Has no subobjs & no fields other than header
	++ SYNC_5
	++ RPTEND_5
	+. PAGE_5
5	+. SYSTEM_5
	++ STAFF_5
	++ MEASURE_5
	++ CLEF_5
	++ KEYSIG_5
10	++ TIMESIG_5
	++ BEAMSET_5
	++ CONNECT_5
	++ DYNAMIC_5
	.- (MODNR)		Has no objects, only subobjects
15	+. GRAPHIC_5
	-. OTTAVA_5		Subobject has two LINKs & that's all
	-- SLUR_5
	+. TUPLET_5		Subobject has two LINKs & that's all
	++ GRSYNC_5
20	+. TEMPO_5
	-. SPACER_5
	-. ENDING_5
	-- PSMEAS_5
	++ (OBJECT)

Implement ConvertSPACER() => still 30 errors, but the SPACER works now.
(SPACER status now: +. )

Implement ConvertOTTAVA() => only 27 errors, but the OTTAVA still isn't drawn! Why? It
looks OK in Browser, & Debug has no complaints. ??

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. DCheckNode: Object L17 IN MEASURE 1 HAS A GARBAGE (UNSELECTABLE) objRect.
	Warning. *DCheckNode: SLUR L17 HAS BAD staffn.
	Warning. *DCheckNode: NON-CROSS-SYS SLUR L17 firstSync OR lastSync ISN'T A SYNC.
	Warning. DCheckNodeSel: SELECTED ITEM IN UNSELECTED SLUR L17.
	Warning. DCheckSyncSlurs: NOTE slurredR IN VOICE 1 IN SYNC L18, MEASURE 1, HAS NO SLUR.
	Warning. DCheckSyncSlurs: NOTE slurredL IN VOICE 1 IN SYNC L22, MEASURE 1, HAS NO SLUR.
	Warning. *DCheckNode: ENDING L26 staffn 0 IS BAD.
	Warning. *DCheckNode: ENDING L32 staffn 17 IS BAD.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L35 HAS BAD nKSItems.
	Warning. *DCheckSlurs: NEXT SYNC AFTER SLUR/TIE L17 HAS NO NOTES IN VOICE 0.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS firstSyncL ARE IN WRONG ORDER.
	Warning. *DCheckSlurs: SLUR L17 IN MEASURE 1 AND ITS lastSyncL ARE IN WRONG ORDER.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 3 (L31) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 2 notenum 50 and notation disagree: wrong accidental?
	Notice. * CautionAdvise alertID=550!
	info. Discont. sel, 0 objs in range, 0 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 26 ERROR(S).

Implement ConvertSLUR() => only 17-18 errors! And the slur is drawn, though it's the wrong
dashedness and shape. (SLUR status now: +- )

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. *DCheckNode: ENDING L26 staffn 0 IS BAD.
	Warning. *DCheckNode: ENDING L32 staffn 17 IS BAD.
	Warning. *DCheckMeasSubobjs: SUBOBJ IN MEASURE L35 HAS BAD nKSItems.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 2 IN MEASURE 3 (L31) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 2 notenum 50 and notation disagree: wrong accidental?
	info. Strict contin. sel, 1 objs in range, 1 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 17 ERROR(S). 

-------------------------------------------------------------------------------

16 - 19 March

Implement Convert1SLUR() => still 17 errors, but the slur is now drawn correctly.
(SLUR status now: ++ )

Looks like the AMEASURE nKSItems is garbage. Ah: Convert1MEASURE isn't copying the
WHOLE_KSINFO... Fixed.

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. *DCheckNode: SUBOBJ IN CONNECT L5 staffAbove>=staffBelow.
	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. *DCheckNode: SUBOBJ ON STAFF 1 IN PSEUDOMEAS L12 HAS connAbove.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 1 (L10) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 2 (L23) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 3 (L31) INCONSISTENCY.
	Warning. *DCheckContext: nKSItems FOR STAFF 1 IN MEASURE 4 (L35) INCONSISTENCY.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	info. Discont. sel, 0 objs in range, 0 sel, 36 total.  2 voices.
	info. --CHECK MASTER: *DCheckNode: SUBOBJ IN CONNECT L41 staffAbove>=staffBelow.
	info.  Done.
	info. --CHECK CLIPBOARD: *DCheckNode: SUBOBJ IN CONNECT L6 staffAbove>=staffBelow.
	info.  Done. 13 ERROR(S).
	 
Implement ConvertENDING() => only 13 errors, and none for ENDINGs!
(ENDING status now: +. )

Implement ConvertPSMEAS() => still 13 errors. (PSMEAS status now: +- )

Hmmm. DCheckNode() has been giving incorrect complaints "SUBOBJ IN CONNECT L%u staffAbove>=staffBelow."
for awhile, Why? I see... Fixed. Now only 10 errors for AllObjTypes.ngl (and none for
1CourtesyAcc.ngl).

Implement Convert1PSMEAS() => only 9 errors; the PSMEAS complaint went away! (PSMEAS
status now: ++ )

-------------------------------------------------------------------------------

21 - 25 March

Status of converting object types (I think).
. = no work needed; - = not done; ? = not done but may not need work; + = done. 

	obj
	 subobj
0	.. HEADER_5		Object has only OBJHEADER; subobjs are unchanged
	++ TAIL_5		Has no subobjs & no fields other than header
	++ SYNC_5
	++ RPTEND_5
	+. PAGE_5
5	+. SYSTEM_5
	++ STAFF_5
	++ MEASURE_5
	++ CLEF_5
	++ KEYSIG_5		But we end up with nKSItems=0 on staff 1! ??
10	++ TIMESIG_5
	++ BEAMSET_5
	++ CONNECT_5
	++ DYNAMIC_5
	.- (MODNR)		Has no objects, only subobjects
15	+? GRAPHIC_5	Subobject has only LINK & STRINGOFFSET. Is it really OK as is?
	±? OTTAVA_5		Subobject has two LINKs & that's all. But isn't drawn! ??
	++ SLUR_5
	+? TUPLET_5		Subobject has two LINKs & that's all. Is it OK as is?
	++ GRSYNC_5
20	+. TEMPO_5
	+. SPACER_5
	+. ENDING_5
	++ PSMEAS_5
	++ (OBJECT)

Now, almost all of the remaining error messages for AllObjTypes.ngl obviously result
from the zero-sharp/flat key sig. on staff 1. Is this a bug in Convert1KEYSIG()? Ah,
Convert1KEYSIG is doing nothing with several fields, including subType and WHOLE_KSINFO!
Fix that => results are different, alright; now both staves get nonsensical keysigs :-( .
In fact, the AKEYSIG_5 looks bad before Convert1KEYSIG massages it. I'll bet this is
related to the strange comment about WHOLE_KSINFO in NBasicTypes.h ??

	typedef struct						/* Key signature item: */
	{
		char letcode;					/* LG: Code for letter name: A=5,B=4,C=3,D=2,E=1,F=0,G=6  */
		Boolean sharp;					/* LG: Is it a sharp? (False=flat) */
	} KSITEM;

	#define MAX_KSITEMS 7		/* Maximum no. of items in key signature */

	#define WHOLE_KSINFO					/* Complete key sig. w/o context. */			\
		KSITEM		KSItem[MAX_KSITEMS];	/* The sharps and flats */						\
		SignedByte	nKSItems;				/* No. of sharps and flats in key sig. */
		
	typedef struct						/* Complete key sig. */
	{
		WHOLE_KSINFO
	} KSINFO, *PKSINFO;

Console output for AllObjTypes.ngl 
	debug. ConvertKEYSIG: keySigL=L7 inMeasure=0
	debug. Convert1KEYSIG<:  lets=0:# 1:b
	debug. Convert1KEYSIG: 00 02 01 00   40 00 00 00   01 00 07 00   00 00 02 87
	debug.               : 00 00 01 ac   00 00 02 04   00 00 02 87   00 00 00 00
	debug.               : 02 0a 40 00   
	debug. Convert1KEYSIG: aKeySigL=1 small=0 xd=0 lets=1:b 7:b
	debug. Convert1KEYSIG<:  (0 sharps/flats)
	debug. Convert1KEYSIG: 00 00 02 00   40 00 00 00   01 00 07 bb   00 00 00 02
	debug.               : 7f ff ff ff   16 8a 02 60   ff ff 16 8a   02 60 00 00
	debug.               : 02 0a 40 00   
	debug. Convert1KEYSIG: aKeySigL=2 small=0 xd=0 lets=1:b 7:#

Debug/Full sez:

	info.  6 L7 xd=360 yd=0 KEYSIG .VSV.. oRect.l=p159 . n=2
	info.      st=1 xd=0 .V. nKSItems=2 lets=1:b 7:b
	info.      st=2 xd=0 .V. nKSItems=2 lets=1:b 7:#
	Warning. *DCheckNode: ILLEGAL LETTER CODES FOR SUBOBJ IN KEYSIG L7 staffn 1 ACCIDENTAL NO(S).:  1.
	Warning. *DCheckNode: ILLEGAL LETTER CODES FOR SUBOBJ IN KEYSIG L7 staffn 2 ACCIDENTAL NO(S).:  1.


00 02 01 00   40			next=02 staffn=1 subType=0 .V. (SUBOBJHEADER_5): OK
00 00 00					1 byte of bitfields (nonstandard, etc.); xd=0: OK
01 00 07 00					apparently interpreted as KSItem[0 & 1]: 1:b 7:b . ?!?
00 00 02 87					...so interpreted as KSItem[2 & 3]
00 00 01 ac   00 00 02 04	...and KSItem[4, 5, & 6] and nKSItems=2. 

Ah-hah! Neither KeysigCopy nor KEYSIG_COPY knows about AKEYSIG's N105 format!! Duh. Need
KeySigN105Copy(PAKEYSIG_5 pAKeySig, PKSINFO pKSDst) => done. But it doesn't change anything!

Can running Ngale 5.8.x help? With 5.8.9, Debug/Full sez:

	info.  6 L 7 xd=360 yd=0 KEYSIG .VSV.. oRect.l=p159 . n=2
	info.      st=1 xd=0 .V. nKSItems=2 lets=0:# 3:#
	info.      st=2 xd=0 .V. nKSItems=2 lets=0:# 3:#

..exactly as expected, and not helpful.

Create KeySigs.ngl, with keysigs of 1 sharp, 3 flags, & 5 sharps. From 5.8.9:

	info.  6 L 7 xd=288 yd=0 KEYSIG .VSV.. oRect.l=p151 . n=2
	info.      st=1 xd=0 .V. nKSItems=1 lets=0:#
	info.      st=2 xd=0 .V. nKSItems=1 lets=0:#
	
	info.  10 L11 xd=192 yd=0 KEYSIG .V.V.. oRect.l=p196 M n=2
	info.      st=1 xd=0 .V. nKSItems=3 lets=4:b 1:b 5:b
	info.      st=2 xd=0 .V. nKSItems=3 lets=4:b 1:b 5:b
	
	info.  12 L13 xd=696 yd=0 KEYSIG .V.V.. oRect.l=p244 M n=2
	info.      st=1 xd=0 .V. nKSItems=5 lets=0:# 3:# 6:# 2:# 5:#
	info.      st=2 xd=0 .V. nKSItems=5 lets=0:# 3:# 6:# 2:# 5:#
	
But need to see the entire AKEYSIG! Here 'tis for AllObjTypes.ngl, from 5.8.10:

	info.  6 L 7 xd=360 yd=0 KEYSIG .VSV.. oRect.l=p159 . n=2
	info.      st=1 xd=0 .V. nKSItems=2 lets=0:# 3:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 00 07 00   00 00 02 87   00 00 01 ac   00 00 02 04
	debug.                              : 00 00 02 00   40 00 00 00   
	info.      st=2 xd=0 .V. nKSItems=2 lets=0:# 3:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 00 07 bb   00 00 00 02   7f ff ff ff   16 8a 02 60
	debug.                              : 00 04 49 44   20 32 30 5d   

Looks like the "01 00 07 00" is the first bytes of the AKEYSIG, not of the WHOLE_KSINFO!

Create KeySigs.ngl, with keysigs of 1 sharp, 3 flags, & 5 sharps. From 5.8.10:
	info.  6 L 7 xd=288 yd=0 KEYSIG .VSV.. oRect.l=p151 . n=2
	info.      st=1 xd=0 .V. nKSItems=1 lets=0:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 00 00 00   00 00 02 78   00 00 01 bb   00 00 01 02
	debug.                              : 00 00 02 00   40 00 00 00   
	info.      st=2 xd=0 .V. nKSItems=1 lets=0:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 00 00 00   00 00 00 02   c0 00 00 03   c0 00 01 03
	debug.                              : 00 04 01 00   40 00 00 00   
	
	info.  10 L11 xd=192 yd=0 KEYSIG .V.V.. oRect.l=p196 M n=2
	info.      st=1 xd=0 .V. nKSItems=3 lets=4:b 1:b 5:b
	debug. DisplayNode/aKeySig->KSItem[]: 08 00 02 01   0a 83 ed 90   00 00 00 01   16 83 03 20
	debug.                              : 00 00 02 00   40 00 00 00   
	info.      st=2 xd=0 .V. nKSItems=3 lets=4:b 1:b 5:b
	debug. DisplayNode/aKeySig->KSItem[]: 08 00 02 00   0a 00 00 06   80 00 00 00   00 00 03 02
	debug.                              : 00 06 01 00   40 00 00 00   
	
	info.  12 L13 xd=696 yd=0 KEYSIG .V.V.. oRect.l=p244 M n=2
	info.      st=1 xd=0 .V. nKSItems=5 lets=0:# 3:# 6:# 2:# 5:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 ff 07 00   0d ff 05 00   0b 00 04 38   00 01 05 07
	debug.                              : 00 00 02 00   40 00 00 00   
	info.      st=2 xd=0 .V. nKSItems=5 lets=0:# 3:# 6:# 2:# 5:#
	debug. DisplayNode/aKeySig->KSItem[]: 01 00 07 00   0d 02 05 01   0b 00 00 00   00 00 05 00
	debug.                              : 00 00 20 5b   46 61 63 69   

Ah-hah! The declaration of 	AKEYSIG_5  includes a  WHOLE_KSINFO; but WHOLE_KSINFO includes
an array of KSITEMs, and an N105 KSITEM is not the same as a N106 one. Fix that => only 5
errors in AllObjTypes.ngl!

	Warning. DCheckNode: Illegal MODNR code 80 in voice 1 in Sync L11.
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?
	info. Discont. sel, 0 objs in range, 0 sel, 36 total.  2 voices.

-------------------------------------------------------------------------------

27-30 March

The only thing we're not even trying to convert yet is MODNRs, which have no objects,
just subobjects attached to notes/rests (ANOTEs). So conversion code can't be invoked by
encountering a MODNR object; instead, add it to Convert1NOTER => Done, but: in AllObjTypes.ngl,
it says (for the only noter modifier)

	debug. Convert1MODNR: aModNRL=1 code=3 x=1 yqpit=-14

Heap Browser agrees on the values of coe, xstd, & ystdpit. 
The correct values are code, 12; xstd, 16; yqpit, -8. The modifier is displayed far to
the left of the note, and Modifier Info says x = -15, but Heap Browser shows it as being
1. Open ExuberentT+N.ngl => all modifiers display as "3" or "4" (codes are 3 & 4, natch), and
way too far to left. ??


	debug. ConvertSYNC: syncL=L11 timeStamp=0
	debug. Convert1NOTER:MODNR: 00 00 50 0c   00 f8 
	debug. Convert1MODNR: aModNRL=1 code=3 xstd=1 ystdpit=-14
	debug. Convert1NOTER: aNoteRL=1 voice=1 vis=1 yqpit=-14 xd=0 yd=120 playDur=912

The hex dump in "Convert1NOTER:MODNR" is correct. Ah, the BlockMove in Convert1MODNR
is wrong! Fix that => all OK!  (MODNR status now: ++ )

Status of converting object types (I think).
. = no work needed; - = not done; ? = not done but may not need work; + = done. 

	obj
	 subobj
0	.. HEADER_5		Object has only OBJHEADER; subobjs are unchanged
	++ TAIL_5		Has no subobjs & no fields other than header
	++ SYNC_5
	++ RPTEND_5
	+. PAGE_5
5	+. SYSTEM_5
	++ STAFF_5
	++ MEASURE_5
	++ CLEF_5
	++ KEYSIG_5		But we end up with nKSItems=0 on staff 1! ??
10	++ TIMESIG_5
	++ BEAMSET_5
	++ CONNECT_5
	++ DYNAMIC_5
	.+ (MODNR)		Has no objects, only subobjects
15	+? GRAPHIC_5	Subobject has only LINK & STRINGOFFSET. Is it really OK as is?
	±? OTTAVA_5		Subobject has two LINKs & that's all. But isn't drawn! ??
	++ SLUR_5
	+? TUPLET_5		Subobject has two LINKs & that's all. Is it OK as is?
	++ GRSYNC_5
20	+. TEMPO_5
	+. SPACER_5
	+. ENDING_5
	++ PSMEAS_5
	++ (OBJECT)

What about the question marks? Well, first, I'm still getting lots of complaints
like these, for AllObjTypes.ngl:

	info. DEBUG 'Menu'-Standard: --CHECK MAIN:
	Warning. DCheckNoteNums: Note in Sync L11 in measure 1, staff 1 notenum 73 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L20 in measure 1, staff 1 notenum 66 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L30 in measure 2, staff 1 notenum 90 and notation disagree: wrong accidental?
	Warning. DCheckNoteNums: Note in Sync L33 in measure 3, staff 1 notenum 66 and notation disagree: wrong accidental?

Staff 1 has two sharps, and the above notes are all the C#'s and F#'s on that staff. So
??
